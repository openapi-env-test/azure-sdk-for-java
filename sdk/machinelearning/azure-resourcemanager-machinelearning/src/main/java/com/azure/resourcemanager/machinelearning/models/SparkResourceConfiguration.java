// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The SparkResourceConfiguration model. */
@Fluent
public final class SparkResourceConfiguration {
    /*
     * Optional type of VM used as supported by the compute target.
     */
    @JsonProperty(value = "instanceType")
    private String instanceType;

    /*
     * Version of spark runtime used for the job.
     */
    @JsonProperty(value = "runtimeVersion")
    private String runtimeVersion;

    /** Creates an instance of SparkResourceConfiguration class. */
    public SparkResourceConfiguration() {
    }

    /**
     * Get the instanceType property: Optional type of VM used as supported by the compute target.
     *
     * @return the instanceType value.
     */
    public String instanceType() {
        return this.instanceType;
    }

    /**
     * Set the instanceType property: Optional type of VM used as supported by the compute target.
     *
     * @param instanceType the instanceType value to set.
     * @return the SparkResourceConfiguration object itself.
     */
    public SparkResourceConfiguration withInstanceType(String instanceType) {
        this.instanceType = instanceType;
        return this;
    }

    /**
     * Get the runtimeVersion property: Version of spark runtime used for the job.
     *
     * @return the runtimeVersion value.
     */
    public String runtimeVersion() {
        return this.runtimeVersion;
    }

    /**
     * Set the runtimeVersion property: Version of spark runtime used for the job.
     *
     * @param runtimeVersion the runtimeVersion value to set.
     * @return the SparkResourceConfiguration object itself.
     */
    public SparkResourceConfiguration withRuntimeVersion(String runtimeVersion) {
        this.runtimeVersion = runtimeVersion;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
