// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** Progress metrics definition. */
@Immutable
public final class ProgressMetrics {
    /*
     * The completed datapoint count.
     */
    @JsonProperty(value = "completedDatapointCount", access = JsonProperty.Access.WRITE_ONLY)
    private Long completedDatapointCount;

    /*
     * The time of last successful incremental data refresh in UTC.
     */
    @JsonProperty(value = "incrementalDataLastRefreshDateTime", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime incrementalDataLastRefreshDateTime;

    /*
     * The skipped datapoint count.
     */
    @JsonProperty(value = "skippedDatapointCount", access = JsonProperty.Access.WRITE_ONLY)
    private Long skippedDatapointCount;

    /*
     * The total datapoint count.
     */
    @JsonProperty(value = "totalDatapointCount", access = JsonProperty.Access.WRITE_ONLY)
    private Long totalDatapointCount;

    /** Creates an instance of ProgressMetrics class. */
    public ProgressMetrics() {
    }

    /**
     * Get the completedDatapointCount property: The completed datapoint count.
     *
     * @return the completedDatapointCount value.
     */
    public Long completedDatapointCount() {
        return this.completedDatapointCount;
    }

    /**
     * Get the incrementalDataLastRefreshDateTime property: The time of last successful incremental data refresh in UTC.
     *
     * @return the incrementalDataLastRefreshDateTime value.
     */
    public OffsetDateTime incrementalDataLastRefreshDateTime() {
        return this.incrementalDataLastRefreshDateTime;
    }

    /**
     * Get the skippedDatapointCount property: The skipped datapoint count.
     *
     * @return the skippedDatapointCount value.
     */
    public Long skippedDatapointCount() {
        return this.skippedDatapointCount;
    }

    /**
     * Get the totalDatapointCount property: The total datapoint count.
     *
     * @return the totalDatapointCount value.
     */
    public Long totalDatapointCount() {
        return this.totalDatapointCount;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
