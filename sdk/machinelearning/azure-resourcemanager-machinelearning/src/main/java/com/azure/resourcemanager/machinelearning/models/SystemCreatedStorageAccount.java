// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The SystemCreatedStorageAccount model. */
@Fluent
public final class SystemCreatedStorageAccount {
    /*
     * ARM ResourceId of a resource
     */
    @JsonProperty(value = "armResourceId")
    private ArmResourceId armResourceId;

    /*
     * The storageAccountHnsEnabled property.
     */
    @JsonProperty(value = "storageAccountHnsEnabled")
    private Boolean storageAccountHnsEnabled;

    /*
     * Allowed values:
     * "Standard_LRS",
     * "Standard_GRS",
     * "Standard_RAGRS",
     * "Standard_ZRS",
     * "Standard_GZRS",
     * "Standard_RAGZRS",
     * "Premium_LRS",
     * "Premium_ZRS"
     */
    @JsonProperty(value = "storageAccountType")
    private String storageAccountType;

    /*
     * The allowBlobPublicAccess property.
     */
    @JsonProperty(value = "allowBlobPublicAccess")
    private Boolean allowBlobPublicAccess;

    /** Creates an instance of SystemCreatedStorageAccount class. */
    public SystemCreatedStorageAccount() {
    }

    /**
     * Get the armResourceId property: ARM ResourceId of a resource.
     *
     * @return the armResourceId value.
     */
    public ArmResourceId armResourceId() {
        return this.armResourceId;
    }

    /**
     * Set the armResourceId property: ARM ResourceId of a resource.
     *
     * @param armResourceId the armResourceId value to set.
     * @return the SystemCreatedStorageAccount object itself.
     */
    public SystemCreatedStorageAccount withArmResourceId(ArmResourceId armResourceId) {
        this.armResourceId = armResourceId;
        return this;
    }

    /**
     * Get the storageAccountHnsEnabled property: The storageAccountHnsEnabled property.
     *
     * @return the storageAccountHnsEnabled value.
     */
    public Boolean storageAccountHnsEnabled() {
        return this.storageAccountHnsEnabled;
    }

    /**
     * Set the storageAccountHnsEnabled property: The storageAccountHnsEnabled property.
     *
     * @param storageAccountHnsEnabled the storageAccountHnsEnabled value to set.
     * @return the SystemCreatedStorageAccount object itself.
     */
    public SystemCreatedStorageAccount withStorageAccountHnsEnabled(Boolean storageAccountHnsEnabled) {
        this.storageAccountHnsEnabled = storageAccountHnsEnabled;
        return this;
    }

    /**
     * Get the storageAccountType property: Allowed values: "Standard_LRS", "Standard_GRS", "Standard_RAGRS",
     * "Standard_ZRS", "Standard_GZRS", "Standard_RAGZRS", "Premium_LRS", "Premium_ZRS".
     *
     * @return the storageAccountType value.
     */
    public String storageAccountType() {
        return this.storageAccountType;
    }

    /**
     * Set the storageAccountType property: Allowed values: "Standard_LRS", "Standard_GRS", "Standard_RAGRS",
     * "Standard_ZRS", "Standard_GZRS", "Standard_RAGZRS", "Premium_LRS", "Premium_ZRS".
     *
     * @param storageAccountType the storageAccountType value to set.
     * @return the SystemCreatedStorageAccount object itself.
     */
    public SystemCreatedStorageAccount withStorageAccountType(String storageAccountType) {
        this.storageAccountType = storageAccountType;
        return this;
    }

    /**
     * Get the allowBlobPublicAccess property: The allowBlobPublicAccess property.
     *
     * @return the allowBlobPublicAccess value.
     */
    public Boolean allowBlobPublicAccess() {
        return this.allowBlobPublicAccess;
    }

    /**
     * Set the allowBlobPublicAccess property: The allowBlobPublicAccess property.
     *
     * @param allowBlobPublicAccess the allowBlobPublicAccess value to set.
     * @return the SystemCreatedStorageAccount object itself.
     */
    public SystemCreatedStorageAccount withAllowBlobPublicAccess(Boolean allowBlobPublicAccess) {
        this.allowBlobPublicAccess = allowBlobPublicAccess;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (armResourceId() != null) {
            armResourceId().validate();
        }
    }
}
