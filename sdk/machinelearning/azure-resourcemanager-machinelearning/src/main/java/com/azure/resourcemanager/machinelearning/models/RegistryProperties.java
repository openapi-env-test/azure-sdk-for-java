// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.Map;

/** Details of the Registry. */
@Fluent
public final class RegistryProperties extends ResourceBase {
    /*
     * The publicNetworkAccess property.
     */
    @JsonProperty(value = "publicNetworkAccess")
    private String publicNetworkAccess;

    /*
     * The discoveryUrl property.
     */
    @JsonProperty(value = "discoveryUrl")
    private String discoveryUrl;

    /*
     * The intellectualPropertyPublisher property.
     */
    @JsonProperty(value = "intellectualPropertyPublisher")
    private String intellectualPropertyPublisher;

    /*
     * Managed resource group created for the registry
     */
    @JsonProperty(value = "managedResourceGroup")
    private ArmResourceId managedResourceGroup;

    /*
     * The mlFlowRegistryUri property.
     */
    @JsonProperty(value = "mlFlowRegistryUri")
    private String mlFlowRegistryUri;

    /*
     * The privateLinkCount property.
     */
    @JsonProperty(value = "privateLinkCount")
    private Integer privateLinkCount;

    /*
     * Details of each region the registry is in
     */
    @JsonProperty(value = "regionDetails")
    private List<RegistryRegionArmDetails> regionDetails;

    /** Creates an instance of RegistryProperties class. */
    public RegistryProperties() {
    }

    /**
     * Get the publicNetworkAccess property: The publicNetworkAccess property.
     *
     * @return the publicNetworkAccess value.
     */
    public String publicNetworkAccess() {
        return this.publicNetworkAccess;
    }

    /**
     * Set the publicNetworkAccess property: The publicNetworkAccess property.
     *
     * @param publicNetworkAccess the publicNetworkAccess value to set.
     * @return the RegistryProperties object itself.
     */
    public RegistryProperties withPublicNetworkAccess(String publicNetworkAccess) {
        this.publicNetworkAccess = publicNetworkAccess;
        return this;
    }

    /**
     * Get the discoveryUrl property: The discoveryUrl property.
     *
     * @return the discoveryUrl value.
     */
    public String discoveryUrl() {
        return this.discoveryUrl;
    }

    /**
     * Set the discoveryUrl property: The discoveryUrl property.
     *
     * @param discoveryUrl the discoveryUrl value to set.
     * @return the RegistryProperties object itself.
     */
    public RegistryProperties withDiscoveryUrl(String discoveryUrl) {
        this.discoveryUrl = discoveryUrl;
        return this;
    }

    /**
     * Get the intellectualPropertyPublisher property: The intellectualPropertyPublisher property.
     *
     * @return the intellectualPropertyPublisher value.
     */
    public String intellectualPropertyPublisher() {
        return this.intellectualPropertyPublisher;
    }

    /**
     * Set the intellectualPropertyPublisher property: The intellectualPropertyPublisher property.
     *
     * @param intellectualPropertyPublisher the intellectualPropertyPublisher value to set.
     * @return the RegistryProperties object itself.
     */
    public RegistryProperties withIntellectualPropertyPublisher(String intellectualPropertyPublisher) {
        this.intellectualPropertyPublisher = intellectualPropertyPublisher;
        return this;
    }

    /**
     * Get the managedResourceGroup property: Managed resource group created for the registry.
     *
     * @return the managedResourceGroup value.
     */
    public ArmResourceId managedResourceGroup() {
        return this.managedResourceGroup;
    }

    /**
     * Set the managedResourceGroup property: Managed resource group created for the registry.
     *
     * @param managedResourceGroup the managedResourceGroup value to set.
     * @return the RegistryProperties object itself.
     */
    public RegistryProperties withManagedResourceGroup(ArmResourceId managedResourceGroup) {
        this.managedResourceGroup = managedResourceGroup;
        return this;
    }

    /**
     * Get the mlFlowRegistryUri property: The mlFlowRegistryUri property.
     *
     * @return the mlFlowRegistryUri value.
     */
    public String mlFlowRegistryUri() {
        return this.mlFlowRegistryUri;
    }

    /**
     * Set the mlFlowRegistryUri property: The mlFlowRegistryUri property.
     *
     * @param mlFlowRegistryUri the mlFlowRegistryUri value to set.
     * @return the RegistryProperties object itself.
     */
    public RegistryProperties withMlFlowRegistryUri(String mlFlowRegistryUri) {
        this.mlFlowRegistryUri = mlFlowRegistryUri;
        return this;
    }

    /**
     * Get the privateLinkCount property: The privateLinkCount property.
     *
     * @return the privateLinkCount value.
     */
    public Integer privateLinkCount() {
        return this.privateLinkCount;
    }

    /**
     * Set the privateLinkCount property: The privateLinkCount property.
     *
     * @param privateLinkCount the privateLinkCount value to set.
     * @return the RegistryProperties object itself.
     */
    public RegistryProperties withPrivateLinkCount(Integer privateLinkCount) {
        this.privateLinkCount = privateLinkCount;
        return this;
    }

    /**
     * Get the regionDetails property: Details of each region the registry is in.
     *
     * @return the regionDetails value.
     */
    public List<RegistryRegionArmDetails> regionDetails() {
        return this.regionDetails;
    }

    /**
     * Set the regionDetails property: Details of each region the registry is in.
     *
     * @param regionDetails the regionDetails value to set.
     * @return the RegistryProperties object itself.
     */
    public RegistryProperties withRegionDetails(List<RegistryRegionArmDetails> regionDetails) {
        this.regionDetails = regionDetails;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public RegistryProperties withDescription(String description) {
        super.withDescription(description);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public RegistryProperties withProperties(Map<String, String> properties) {
        super.withProperties(properties);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public RegistryProperties withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (managedResourceGroup() != null) {
            managedResourceGroup().validate();
        }
        if (regionDetails() != null) {
            regionDetails().forEach(e -> e.validate());
        }
    }
}
