// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.HashMap;
import java.util.Map;

/** The EnvironmentVariable model. */
@Fluent
public final class EnvironmentVariable {
    /*
     * Type of Environment Variable Type of the Environment Variable. Possible
     * values are: local - For local variable, azureml - For azureml variables
     */
    @JsonProperty(value = "type")
    private EnvironmentVariableType type;

    /*
     * Value of the Environment variable
     */
    @JsonProperty(value = "value")
    private String value;

    /*
     * Dictionary of <any>
     */
    @JsonIgnore private Map<String, Object> additionalProperties;

    /**
     * Get the type property: Type of Environment Variable Type of the Environment Variable. Possible values are: local
     * - For local variable, azureml - For azureml variables.
     *
     * @return the type value.
     */
    public EnvironmentVariableType type() {
        return this.type;
    }

    /**
     * Set the type property: Type of Environment Variable Type of the Environment Variable. Possible values are: local
     * - For local variable, azureml - For azureml variables.
     *
     * @param type the type value to set.
     * @return the EnvironmentVariable object itself.
     */
    public EnvironmentVariable withType(EnvironmentVariableType type) {
        this.type = type;
        return this;
    }

    /**
     * Get the value property: Value of the Environment variable.
     *
     * @return the value value.
     */
    public String value() {
        return this.value;
    }

    /**
     * Set the value property: Value of the Environment variable.
     *
     * @param value the value value to set.
     * @return the EnvironmentVariable object itself.
     */
    public EnvironmentVariable withValue(String value) {
        this.value = value;
        return this;
    }

    /**
     * Get the additionalProperties property: Dictionary of &lt;any&gt;.
     *
     * @return the additionalProperties value.
     */
    @JsonAnyGetter
    public Map<String, Object> additionalProperties() {
        return this.additionalProperties;
    }

    /**
     * Set the additionalProperties property: Dictionary of &lt;any&gt;.
     *
     * @param additionalProperties the additionalProperties value to set.
     * @return the EnvironmentVariable object itself.
     */
    public EnvironmentVariable withAdditionalProperties(Map<String, Object> additionalProperties) {
        this.additionalProperties = additionalProperties;
        return this;
    }

    @JsonAnySetter
    void withAdditionalProperties(String key, Object value) {
        if (additionalProperties == null) {
            additionalProperties = new HashMap<>();
        }
        additionalProperties.put(key, value);
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
