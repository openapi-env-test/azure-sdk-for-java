// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.resourcemanager.machinelearning.models.LabelCategory;
import com.azure.resourcemanager.machinelearning.models.LabelClass;
import com.azure.resourcemanager.machinelearning.models.LabelingJobImageProperties;
import com.azure.resourcemanager.machinelearning.models.LabelingJobInstructions;
import com.azure.resourcemanager.machinelearning.models.LabelingJobProperties;
import com.azure.resourcemanager.machinelearning.models.MLAssistConfigurationEnabled;
import java.util.HashMap;
import java.util.Map;

/** Samples for LabelingJobs CreateOrUpdate. */
public final class LabelingJobsCreateOrUpdateSamples {
    /*
     * x-ms-original-file: specification/machinelearningservices/resource-manager/Microsoft.MachineLearningServices/preview/2022-06-01-preview/examples/LabelingJob/createOrUpdate.json
     */
    /**
     * Sample code: CreateOrUpdate Labeling Job.
     *
     * @param manager Entry point to MachineLearningManager.
     */
    public static void createOrUpdateLabelingJob(
        com.azure.resourcemanager.machinelearning.MachineLearningManager manager) {
        manager
            .labelingJobs()
            .define("testLabelingJob")
            .withExistingWorkspace("workspace-1234", "testworkspace")
            .withProperties(
                new LabelingJobProperties()
                    .withDescription("string")
                    .withProperties(
                        mapOf("additionalProp1", "string", "additionalProp2", "string", "additionalProp3", "string"))
                    .withTags(
                        mapOf("additionalProp1", "string", "additionalProp2", "string", "additionalProp3", "string"))
                    .withJobInstructions(new LabelingJobInstructions().withUri("link/to/instructions"))
                    .withLabelCategories(
                        mapOf(
                            "myCategory1",
                            new LabelCategory()
                                .withClasses(
                                    mapOf(
                                        "myLabelClass1",
                                        new LabelClass().withDisplayName("myLabelClass1").withSubclasses(mapOf()),
                                        "myLabelClass2",
                                        new LabelClass().withDisplayName("myLabelClass2").withSubclasses(mapOf())))
                                .withDisplayName("myCategory1Title")
                                .withMultiSelectEnabled(true),
                            "myCategory2",
                            new LabelCategory()
                                .withClasses(
                                    mapOf(
                                        "myLabelClass1",
                                        new LabelClass().withDisplayName("myLabelClass1").withSubclasses(mapOf()),
                                        "myLabelClass2",
                                        new LabelClass().withDisplayName("myLabelClass2").withSubclasses(mapOf())))
                                .withDisplayName("myCategory2Title")
                                .withMultiSelectEnabled(true)))
                    .withLabelingJobMediaProperties(new LabelingJobImageProperties())
                    .withMlAssistConfiguration(
                        new MLAssistConfigurationEnabled()
                            .withInferencingComputeBinding(
                                "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/resourceGroup-1234/providers/Microsoft.MachineLearningServices/workspaces/testworkspace/computes/myscoringcompute")
                            .withTrainingComputeBinding(
                                "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/resourceGroup-1234/providers/Microsoft.MachineLearningServices/workspaces/testworkspace/computes/mytrainingompute")))
            .create();
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
