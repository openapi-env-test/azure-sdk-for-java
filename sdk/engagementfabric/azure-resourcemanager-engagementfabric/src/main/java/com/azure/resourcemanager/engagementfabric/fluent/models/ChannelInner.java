// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.engagementfabric.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.engagementfabric.models.ProxyOnlyResource;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.Map;

/** The EngagementFabric channel. */
@JsonFlatten
@Fluent
public class ChannelInner extends ProxyOnlyResource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ChannelInner.class);

    /*
     * The channel type
     */
    @JsonProperty(value = "properties.channelType")
    private String channelType;

    /*
     * The functions to be enabled for the channel
     */
    @JsonProperty(value = "properties.channelFunctions")
    private List<String> channelFunctions;

    /*
     * The channel credentials
     */
    @JsonProperty(value = "properties.credentials")
    private Map<String, String> credentials;

    /**
     * Get the channelType property: The channel type.
     *
     * @return the channelType value.
     */
    public String channelType() {
        return this.channelType;
    }

    /**
     * Set the channelType property: The channel type.
     *
     * @param channelType the channelType value to set.
     * @return the ChannelInner object itself.
     */
    public ChannelInner withChannelType(String channelType) {
        this.channelType = channelType;
        return this;
    }

    /**
     * Get the channelFunctions property: The functions to be enabled for the channel.
     *
     * @return the channelFunctions value.
     */
    public List<String> channelFunctions() {
        return this.channelFunctions;
    }

    /**
     * Set the channelFunctions property: The functions to be enabled for the channel.
     *
     * @param channelFunctions the channelFunctions value to set.
     * @return the ChannelInner object itself.
     */
    public ChannelInner withChannelFunctions(List<String> channelFunctions) {
        this.channelFunctions = channelFunctions;
        return this;
    }

    /**
     * Get the credentials property: The channel credentials.
     *
     * @return the credentials value.
     */
    public Map<String, String> credentials() {
        return this.credentials;
    }

    /**
     * Set the credentials property: The channel credentials.
     *
     * @param credentials the credentials value to set.
     * @return the ChannelInner object itself.
     */
    public ChannelInner withCredentials(Map<String, String> credentials) {
        this.credentials = credentials;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
