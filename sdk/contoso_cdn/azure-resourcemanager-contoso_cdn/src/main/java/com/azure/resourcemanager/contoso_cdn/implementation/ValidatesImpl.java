// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.contoso_cdn.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.contoso_cdn.CdnManager;
import com.azure.resourcemanager.contoso_cdn.fluent.ValidatesClient;
import com.azure.resourcemanager.contoso_cdn.fluent.models.ValidateSecretOutputInner;
import com.azure.resourcemanager.contoso_cdn.models.ValidateSecretInput;
import com.azure.resourcemanager.contoso_cdn.models.ValidateSecretOutput;
import com.azure.resourcemanager.contoso_cdn.models.Validates;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class ValidatesImpl implements Validates {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ValidatesImpl.class);

    private final ValidatesClient innerClient;

    private final CdnManager serviceManager;

    public ValidatesImpl(ValidatesClient innerClient, CdnManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public ValidateSecretOutput secret(ValidateSecretInput validateSecretInput) {
        ValidateSecretOutputInner inner = this.serviceClient().secret(validateSecretInput);
        if (inner != null) {
            return new ValidateSecretOutputImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<ValidateSecretOutput> secretWithResponse(ValidateSecretInput validateSecretInput, Context context) {
        Response<ValidateSecretOutputInner> inner =
            this.serviceClient().secretWithResponse(validateSecretInput, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new ValidateSecretOutputImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    private ValidatesClient serviceClient() {
        return this.innerClient;
    }

    private CdnManager manager() {
        return this.serviceManager;
    }
}
