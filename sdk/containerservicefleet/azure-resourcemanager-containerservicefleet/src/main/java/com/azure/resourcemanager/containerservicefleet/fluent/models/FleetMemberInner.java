// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerservicefleet.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.containerservicefleet.models.AzureEntityResource;
import com.azure.resourcemanager.containerservicefleet.models.FleetMemberProvisioningState;
import com.fasterxml.jackson.annotation.JsonProperty;

/** A member of the Fleet. It contains a reference to an existing Kubernetes cluster on Azure. */
@Fluent
public final class FleetMemberInner extends AzureEntityResource {
    /*
     * Properties of a Fleet member.
     */
    @JsonProperty(value = "properties")
    private FleetMemberProperties innerProperties;

    /** Creates an instance of FleetMemberInner class. */
    public FleetMemberInner() {
    }

    /**
     * Get the innerProperties property: Properties of a Fleet member.
     *
     * @return the innerProperties value.
     */
    private FleetMemberProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the clusterResourceId property: The ARM resource id of the cluster that joins the Fleet. Must be a valid
     * Azure resource id. e.g.:
     * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{clusterName}'.
     *
     * @return the clusterResourceId value.
     */
    public String clusterResourceId() {
        return this.innerProperties() == null ? null : this.innerProperties().clusterResourceId();
    }

    /**
     * Set the clusterResourceId property: The ARM resource id of the cluster that joins the Fleet. Must be a valid
     * Azure resource id. e.g.:
     * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{clusterName}'.
     *
     * @param clusterResourceId the clusterResourceId value to set.
     * @return the FleetMemberInner object itself.
     */
    public FleetMemberInner withClusterResourceId(String clusterResourceId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new FleetMemberProperties();
        }
        this.innerProperties().withClusterResourceId(clusterResourceId);
        return this;
    }

    /**
     * Get the provisioningState property: The provisioning state of the last accepted operation.
     *
     * @return the provisioningState value.
     */
    public FleetMemberProvisioningState provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
