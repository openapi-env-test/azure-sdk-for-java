// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerservice.generated.models;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.containerservice.generated.fluent.models.TrustedAccessRoleBindingInner;
import java.util.List;

/** An immutable client-side representation of TrustedAccessRoleBinding. */
public interface TrustedAccessRoleBinding {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the provisioningState property: The current provisioning state of trusted access role binding.
     *
     * @return the provisioningState value.
     */
    TrustedAccessRoleBindingProvisioningState provisioningState();

    /**
     * Gets the sourceResourceId property: The ARM resource ID of source resource that trusted access is configured for.
     *
     * @return the sourceResourceId value.
     */
    String sourceResourceId();

    /**
     * Gets the roles property: A list of roles to bind, each item is a resource type qualified role name. For example:
     * 'Microsoft.MachineLearningServices/workspaces/reader'.
     *
     * @return the roles value.
     */
    List<String> roles();

    /**
     * Gets the name of the resource group.
     *
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.containerservice.generated.fluent.models.TrustedAccessRoleBindingInner
     * object.
     *
     * @return the inner object.
     */
    TrustedAccessRoleBindingInner innerModel();

    /** The entirety of the TrustedAccessRoleBinding definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithParentResource,
            DefinitionStages.WithSourceResourceId,
            DefinitionStages.WithRoles,
            DefinitionStages.WithCreate {
    }
    /** The TrustedAccessRoleBinding definition stages. */
    interface DefinitionStages {
        /** The first stage of the TrustedAccessRoleBinding definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the TrustedAccessRoleBinding definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, resourceName.
             *
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param resourceName The name of the managed cluster resource.
             * @return the next definition stage.
             */
            WithSourceResourceId withExistingManagedCluster(String resourceGroupName, String resourceName);
        }
        /** The stage of the TrustedAccessRoleBinding definition allowing to specify sourceResourceId. */
        interface WithSourceResourceId {
            /**
             * Specifies the sourceResourceId property: The ARM resource ID of source resource that trusted access is
             * configured for..
             *
             * @param sourceResourceId The ARM resource ID of source resource that trusted access is configured for.
             * @return the next definition stage.
             */
            WithRoles withSourceResourceId(String sourceResourceId);
        }
        /** The stage of the TrustedAccessRoleBinding definition allowing to specify roles. */
        interface WithRoles {
            /**
             * Specifies the roles property: A list of roles to bind, each item is a resource type qualified role name.
             * For example: 'Microsoft.MachineLearningServices/workspaces/reader'..
             *
             * @param roles A list of roles to bind, each item is a resource type qualified role name. For example:
             *     'Microsoft.MachineLearningServices/workspaces/reader'.
             * @return the next definition stage.
             */
            WithCreate withRoles(List<String> roles);
        }
        /**
         * The stage of the TrustedAccessRoleBinding definition which contains all the minimum required properties for
         * the resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            TrustedAccessRoleBinding create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            TrustedAccessRoleBinding create(Context context);
        }
    }
    /**
     * Begins update for the TrustedAccessRoleBinding resource.
     *
     * @return the stage of resource update.
     */
    TrustedAccessRoleBinding.Update update();

    /** The template for TrustedAccessRoleBinding update. */
    interface Update extends UpdateStages.WithSourceResourceId, UpdateStages.WithRoles {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        TrustedAccessRoleBinding apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        TrustedAccessRoleBinding apply(Context context);
    }
    /** The TrustedAccessRoleBinding update stages. */
    interface UpdateStages {
        /** The stage of the TrustedAccessRoleBinding update allowing to specify sourceResourceId. */
        interface WithSourceResourceId {
            /**
             * Specifies the sourceResourceId property: The ARM resource ID of source resource that trusted access is
             * configured for..
             *
             * @param sourceResourceId The ARM resource ID of source resource that trusted access is configured for.
             * @return the next definition stage.
             */
            Update withSourceResourceId(String sourceResourceId);
        }
        /** The stage of the TrustedAccessRoleBinding update allowing to specify roles. */
        interface WithRoles {
            /**
             * Specifies the roles property: A list of roles to bind, each item is a resource type qualified role name.
             * For example: 'Microsoft.MachineLearningServices/workspaces/reader'..
             *
             * @param roles A list of roles to bind, each item is a resource type qualified role name. For example:
             *     'Microsoft.MachineLearningServices/workspaces/reader'.
             * @return the next definition stage.
             */
            Update withRoles(List<String> roles);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    TrustedAccessRoleBinding refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    TrustedAccessRoleBinding refresh(Context context);
}
