// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.singularity.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.singularity.fluent.AccountQuotaPoliciesClient;
import com.azure.resourcemanager.singularity.fluent.models.AccountQuotaPolicyResourceDescriptionInner;
import com.azure.resourcemanager.singularity.models.AccountQuotaPolicies;
import com.azure.resourcemanager.singularity.models.AccountQuotaPolicyResourceDescription;

public final class AccountQuotaPoliciesImpl implements AccountQuotaPolicies {
    private static final ClientLogger LOGGER = new ClientLogger(AccountQuotaPoliciesImpl.class);

    private final AccountQuotaPoliciesClient innerClient;

    private final com.azure.resourcemanager.singularity.SingularityManager serviceManager;

    public AccountQuotaPoliciesImpl(
        AccountQuotaPoliciesClient innerClient,
        com.azure.resourcemanager.singularity.SingularityManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public AccountQuotaPolicyResourceDescription get(String resourceGroupName, String accountName, String policyName) {
        AccountQuotaPolicyResourceDescriptionInner inner =
            this.serviceClient().get(resourceGroupName, accountName, policyName);
        if (inner != null) {
            return new AccountQuotaPolicyResourceDescriptionImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<AccountQuotaPolicyResourceDescription> getWithResponse(
        String resourceGroupName, String accountName, String policyName, Context context) {
        Response<AccountQuotaPolicyResourceDescriptionInner> inner =
            this.serviceClient().getWithResponse(resourceGroupName, accountName, policyName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new AccountQuotaPolicyResourceDescriptionImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public PagedIterable<AccountQuotaPolicyResourceDescription> listByAccount(
        String resourceGroupName, String accountName) {
        PagedIterable<AccountQuotaPolicyResourceDescriptionInner> inner =
            this.serviceClient().listByAccount(resourceGroupName, accountName);
        return Utils.mapPage(inner, inner1 -> new AccountQuotaPolicyResourceDescriptionImpl(inner1, this.manager()));
    }

    public PagedIterable<AccountQuotaPolicyResourceDescription> listByAccount(
        String resourceGroupName, String accountName, String continuationToken, Context context) {
        PagedIterable<AccountQuotaPolicyResourceDescriptionInner> inner =
            this.serviceClient().listByAccount(resourceGroupName, accountName, continuationToken, context);
        return Utils.mapPage(inner, inner1 -> new AccountQuotaPolicyResourceDescriptionImpl(inner1, this.manager()));
    }

    public AccountQuotaPolicyResourceDescription getById(String id) {
        String resourceGroupName = Utils.getValueFromIdByName(id, "resourcegroups");
        if (resourceGroupName == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        String
                            .format("The resource ID '%s' is not valid. Missing path segment 'resourcegroups'.", id)));
        }
        String accountName = Utils.getValueFromIdByName(id, "accounts");
        if (accountName == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        String.format("The resource ID '%s' is not valid. Missing path segment 'accounts'.", id)));
        }
        String policyName = Utils.getValueFromIdByName(id, "accountQuotaPolicies");
        if (policyName == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        String
                            .format(
                                "The resource ID '%s' is not valid. Missing path segment 'accountQuotaPolicies'.",
                                id)));
        }
        return this.getWithResponse(resourceGroupName, accountName, policyName, Context.NONE).getValue();
    }

    public Response<AccountQuotaPolicyResourceDescription> getByIdWithResponse(String id, Context context) {
        String resourceGroupName = Utils.getValueFromIdByName(id, "resourcegroups");
        if (resourceGroupName == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        String
                            .format("The resource ID '%s' is not valid. Missing path segment 'resourcegroups'.", id)));
        }
        String accountName = Utils.getValueFromIdByName(id, "accounts");
        if (accountName == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        String.format("The resource ID '%s' is not valid. Missing path segment 'accounts'.", id)));
        }
        String policyName = Utils.getValueFromIdByName(id, "accountQuotaPolicies");
        if (policyName == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        String
                            .format(
                                "The resource ID '%s' is not valid. Missing path segment 'accountQuotaPolicies'.",
                                id)));
        }
        return this.getWithResponse(resourceGroupName, accountName, policyName, context);
    }

    private AccountQuotaPoliciesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.singularity.SingularityManager manager() {
        return this.serviceManager;
    }

    public AccountQuotaPolicyResourceDescriptionImpl define(String name) {
        return new AccountQuotaPolicyResourceDescriptionImpl(name, this.manager());
    }
}
