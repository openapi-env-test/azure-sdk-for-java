// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.singularity.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/** Describes a custom image. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "kind")
@JsonTypeName("Custom")
@Fluent
public final class CustomContainerImage extends ContainerImageBase {
    /*
     * Location of image to use for training.
     */
    @JsonProperty(value = "image", required = true)
    private String image;

    /*
     * Username of the container registry account. Required if
     * UserAssignedIdentity is omitted.
     */
    @JsonProperty(value = "containerRegistryUsername")
    private String containerRegistryUsername;

    /*
     * Password of the container registry account. Required if
     * UserAssignedIdentity is omitted.
     */
    @JsonProperty(value = "containerRegistryPassword")
    private String containerRegistryPassword;

    /*
     * User assigned identity with access to the container registry. Required
     * if ContainerRegistryUsername and ContainerRegistryPassword are omitted.
     */
    @JsonProperty(value = "userAssignedIdentity")
    private String userAssignedIdentity;

    /**
     * Get the image property: Location of image to use for training.
     *
     * @return the image value.
     */
    public String image() {
        return this.image;
    }

    /**
     * Set the image property: Location of image to use for training.
     *
     * @param image the image value to set.
     * @return the CustomContainerImage object itself.
     */
    public CustomContainerImage withImage(String image) {
        this.image = image;
        return this;
    }

    /**
     * Get the containerRegistryUsername property: Username of the container registry account. Required if
     * UserAssignedIdentity is omitted.
     *
     * @return the containerRegistryUsername value.
     */
    public String containerRegistryUsername() {
        return this.containerRegistryUsername;
    }

    /**
     * Set the containerRegistryUsername property: Username of the container registry account. Required if
     * UserAssignedIdentity is omitted.
     *
     * @param containerRegistryUsername the containerRegistryUsername value to set.
     * @return the CustomContainerImage object itself.
     */
    public CustomContainerImage withContainerRegistryUsername(String containerRegistryUsername) {
        this.containerRegistryUsername = containerRegistryUsername;
        return this;
    }

    /**
     * Get the containerRegistryPassword property: Password of the container registry account. Required if
     * UserAssignedIdentity is omitted.
     *
     * @return the containerRegistryPassword value.
     */
    public String containerRegistryPassword() {
        return this.containerRegistryPassword;
    }

    /**
     * Set the containerRegistryPassword property: Password of the container registry account. Required if
     * UserAssignedIdentity is omitted.
     *
     * @param containerRegistryPassword the containerRegistryPassword value to set.
     * @return the CustomContainerImage object itself.
     */
    public CustomContainerImage withContainerRegistryPassword(String containerRegistryPassword) {
        this.containerRegistryPassword = containerRegistryPassword;
        return this;
    }

    /**
     * Get the userAssignedIdentity property: User assigned identity with access to the container registry. Required if
     * ContainerRegistryUsername and ContainerRegistryPassword are omitted.
     *
     * @return the userAssignedIdentity value.
     */
    public String userAssignedIdentity() {
        return this.userAssignedIdentity;
    }

    /**
     * Set the userAssignedIdentity property: User assigned identity with access to the container registry. Required if
     * ContainerRegistryUsername and ContainerRegistryPassword are omitted.
     *
     * @param userAssignedIdentity the userAssignedIdentity value to set.
     * @return the CustomContainerImage object itself.
     */
    public CustomContainerImage withUserAssignedIdentity(String userAssignedIdentity) {
        this.userAssignedIdentity = userAssignedIdentity;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (image() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property image in model CustomContainerImage"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(CustomContainerImage.class);
}
