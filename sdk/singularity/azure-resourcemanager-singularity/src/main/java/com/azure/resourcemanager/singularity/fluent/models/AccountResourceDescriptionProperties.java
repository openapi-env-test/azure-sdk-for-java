// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.singularity.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.singularity.models.AccountLocation;
import com.azure.resourcemanager.singularity.models.AccountProperties;
import com.azure.resourcemanager.singularity.models.AccountStatus;
import com.azure.resourcemanager.singularity.models.IdleResourcesHandlingPolicy;
import com.azure.resourcemanager.singularity.models.NetworkSettings;
import com.azure.resourcemanager.singularity.models.ProvisioningState;
import java.util.List;

/** The AccountResourceDescriptionProperties model. */
@Fluent
public final class AccountResourceDescriptionProperties extends AccountProperties {
    /** {@inheritDoc} */
    @Override
    public AccountResourceDescriptionProperties withProvisioningState(ProvisioningState provisioningState) {
        super.withProvisioningState(provisioningState);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AccountResourceDescriptionProperties withDescription(String description) {
        super.withDescription(description);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AccountResourceDescriptionProperties withStatus(AccountStatus status) {
        super.withStatus(status);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AccountResourceDescriptionProperties withIdleResourcesHandlingPolicy(
        IdleResourcesHandlingPolicy idleResourcesHandlingPolicy) {
        super.withIdleResourcesHandlingPolicy(idleResourcesHandlingPolicy);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AccountResourceDescriptionProperties withLocations(List<AccountLocation> locations) {
        super.withLocations(locations);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AccountResourceDescriptionProperties withNetworkSettings(NetworkSettings networkSettings) {
        super.withNetworkSettings(networkSettings);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
