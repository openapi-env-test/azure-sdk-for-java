// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.singularity.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Describes the model probe setting. */
@Fluent
public final class ModelProbeSetting {
    /*
     * Describes the settings of the probe.
     */
    @JsonProperty(value = "livenessProbeSetting")
    private ProbeSetting livenessProbeSetting;

    /*
     * Describes the settings of the probe.
     */
    @JsonProperty(value = "readinessProbeSetting")
    private ProbeSetting readinessProbeSetting;

    /**
     * Get the livenessProbeSetting property: Describes the settings of the probe.
     *
     * @return the livenessProbeSetting value.
     */
    public ProbeSetting livenessProbeSetting() {
        return this.livenessProbeSetting;
    }

    /**
     * Set the livenessProbeSetting property: Describes the settings of the probe.
     *
     * @param livenessProbeSetting the livenessProbeSetting value to set.
     * @return the ModelProbeSetting object itself.
     */
    public ModelProbeSetting withLivenessProbeSetting(ProbeSetting livenessProbeSetting) {
        this.livenessProbeSetting = livenessProbeSetting;
        return this;
    }

    /**
     * Get the readinessProbeSetting property: Describes the settings of the probe.
     *
     * @return the readinessProbeSetting value.
     */
    public ProbeSetting readinessProbeSetting() {
        return this.readinessProbeSetting;
    }

    /**
     * Set the readinessProbeSetting property: Describes the settings of the probe.
     *
     * @param readinessProbeSetting the readinessProbeSetting value to set.
     * @return the ModelProbeSetting object itself.
     */
    public ModelProbeSetting withReadinessProbeSetting(ProbeSetting readinessProbeSetting) {
        this.readinessProbeSetting = readinessProbeSetting;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (livenessProbeSetting() != null) {
            livenessProbeSetting().validate();
        }
        if (readinessProbeSetting() != null) {
            readinessProbeSetting().validate();
        }
    }
}
