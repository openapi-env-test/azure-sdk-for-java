// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.singularity.implementation;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.singularity.fluent.models.AccountResourceDescriptionInner;
import com.azure.resourcemanager.singularity.models.AccountResourceDescription;
import com.azure.resourcemanager.singularity.models.AccountResourcePatchDescription;
import com.azure.resourcemanager.singularity.models.ResourceSystemData;
import java.util.Collections;
import java.util.Map;

public final class AccountResourceDescriptionImpl
    implements AccountResourceDescription, AccountResourceDescription.Definition, AccountResourceDescription.Update {
    private AccountResourceDescriptionInner innerObject;

    private final com.azure.resourcemanager.singularity.SingularityManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public AccountResourceDescriptionInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.singularity.SingularityManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String accountName;

    private AccountResourcePatchDescription updateBody;

    public AccountResourceDescriptionImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public AccountResourceDescription create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAccounts()
                .createOrUpdate(resourceGroupName, accountName, this.innerModel(), Context.NONE);
        return this;
    }

    public AccountResourceDescription create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAccounts()
                .createOrUpdate(resourceGroupName, accountName, this.innerModel(), context);
        return this;
    }

    AccountResourceDescriptionImpl(
        String name, com.azure.resourcemanager.singularity.SingularityManager serviceManager) {
        this.innerObject = new AccountResourceDescriptionInner();
        this.serviceManager = serviceManager;
        this.accountName = name;
    }

    public AccountResourceDescriptionImpl update() {
        this.updateBody = new AccountResourcePatchDescription();
        return this;
    }

    public AccountResourceDescription apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAccounts()
                .update(resourceGroupName, accountName, updateBody, Context.NONE);
        return this;
    }

    public AccountResourceDescription apply(Context context) {
        this.innerObject =
            serviceManager.serviceClient().getAccounts().update(resourceGroupName, accountName, updateBody, context);
        return this;
    }

    AccountResourceDescriptionImpl(
        AccountResourceDescriptionInner innerObject,
        com.azure.resourcemanager.singularity.SingularityManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourcegroups");
        this.accountName = Utils.getValueFromIdByName(innerObject.id(), "accounts");
    }

    public AccountResourceDescription refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAccounts()
                .getByResourceGroupWithResponse(resourceGroupName, accountName, Context.NONE)
                .getValue();
        return this;
    }

    public AccountResourceDescription refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAccounts()
                .getByResourceGroupWithResponse(resourceGroupName, accountName, context)
                .getValue();
        return this;
    }

    public AccountResourceDescriptionImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public AccountResourceDescriptionImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public AccountResourceDescriptionImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateBody.withTags(tags);
            return this;
        }
    }

    public AccountResourceDescriptionImpl withSystemData(ResourceSystemData systemData) {
        this.updateBody.withSystemData(systemData);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
