// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.singularity.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Describes the scale policy for a Job or a Model. */
@Fluent
public final class ScalePolicy {
    /*
     * The minimum instance type count to provision.
     */
    @JsonProperty(value = "minInstanceTypeCount")
    private Integer minInstanceTypeCount;

    /*
     * Maximum instance type count (the limit) up to which to provision.
     */
    @JsonProperty(value = "maxInstanceTypeCount")
    private Integer maxInstanceTypeCount;

    /*
     * The current instance type count.
     */
    @JsonProperty(value = "currentInstanceTypeCount", access = JsonProperty.Access.WRITE_ONLY)
    private Integer currentInstanceTypeCount;

    /*
     * Set of valid instance type counts that the job can be autoscaled to
     * e.g., [2,4,8,16].
     */
    @JsonProperty(value = "instanceTypeCountSet")
    private List<Integer> instanceTypeCountSet;

    /*
     * A hint on the interval to use for auto scaling.
     */
    @JsonProperty(value = "autoScaleIntervalInSecondsHint")
    private Integer autoScaleIntervalInSecondsHint;

    /**
     * Get the minInstanceTypeCount property: The minimum instance type count to provision.
     *
     * @return the minInstanceTypeCount value.
     */
    public Integer minInstanceTypeCount() {
        return this.minInstanceTypeCount;
    }

    /**
     * Set the minInstanceTypeCount property: The minimum instance type count to provision.
     *
     * @param minInstanceTypeCount the minInstanceTypeCount value to set.
     * @return the ScalePolicy object itself.
     */
    public ScalePolicy withMinInstanceTypeCount(Integer minInstanceTypeCount) {
        this.minInstanceTypeCount = minInstanceTypeCount;
        return this;
    }

    /**
     * Get the maxInstanceTypeCount property: Maximum instance type count (the limit) up to which to provision.
     *
     * @return the maxInstanceTypeCount value.
     */
    public Integer maxInstanceTypeCount() {
        return this.maxInstanceTypeCount;
    }

    /**
     * Set the maxInstanceTypeCount property: Maximum instance type count (the limit) up to which to provision.
     *
     * @param maxInstanceTypeCount the maxInstanceTypeCount value to set.
     * @return the ScalePolicy object itself.
     */
    public ScalePolicy withMaxInstanceTypeCount(Integer maxInstanceTypeCount) {
        this.maxInstanceTypeCount = maxInstanceTypeCount;
        return this;
    }

    /**
     * Get the currentInstanceTypeCount property: The current instance type count.
     *
     * @return the currentInstanceTypeCount value.
     */
    public Integer currentInstanceTypeCount() {
        return this.currentInstanceTypeCount;
    }

    /**
     * Get the instanceTypeCountSet property: Set of valid instance type counts that the job can be autoscaled to e.g.,
     * [2,4,8,16].
     *
     * @return the instanceTypeCountSet value.
     */
    public List<Integer> instanceTypeCountSet() {
        return this.instanceTypeCountSet;
    }

    /**
     * Set the instanceTypeCountSet property: Set of valid instance type counts that the job can be autoscaled to e.g.,
     * [2,4,8,16].
     *
     * @param instanceTypeCountSet the instanceTypeCountSet value to set.
     * @return the ScalePolicy object itself.
     */
    public ScalePolicy withInstanceTypeCountSet(List<Integer> instanceTypeCountSet) {
        this.instanceTypeCountSet = instanceTypeCountSet;
        return this;
    }

    /**
     * Get the autoScaleIntervalInSecondsHint property: A hint on the interval to use for auto scaling.
     *
     * @return the autoScaleIntervalInSecondsHint value.
     */
    public Integer autoScaleIntervalInSecondsHint() {
        return this.autoScaleIntervalInSecondsHint;
    }

    /**
     * Set the autoScaleIntervalInSecondsHint property: A hint on the interval to use for auto scaling.
     *
     * @param autoScaleIntervalInSecondsHint the autoScaleIntervalInSecondsHint value to set.
     * @return the ScalePolicy object itself.
     */
    public ScalePolicy withAutoScaleIntervalInSecondsHint(Integer autoScaleIntervalInSecondsHint) {
        this.autoScaleIntervalInSecondsHint = autoScaleIntervalInSecondsHint;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
