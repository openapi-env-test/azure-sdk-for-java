// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.singularity.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/** Describes options to use when mounting a storage cache container backed by Azure blob storage through FUSE. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "kind")
@JsonTypeName("Fuse")
@Fluent
public final class BlobFuseMountOptions extends BlobMountOptionsBase {
    /*
     * --streaming option as described at
     * https://github.com/Azure/azure-storage-fuse
     */
    @JsonProperty(value = "streaming")
    private Boolean streaming;

    /*
     * --stream-cache-mb option as described at
     * https://github.com/Azure/azure-storage-fuse
     */
    @JsonProperty(value = "streamingCacheLimitMiB")
    private Integer streamingCacheLimitMiB;

    /*
     * --max-blocks-per-file option as described at
     * https://github.com/Azure/azure-storage-fuse
     */
    @JsonProperty(value = "streamingMaxBlocksPerFile")
    private Integer streamingMaxBlocksPerFile;

    /*
     * --block-size-mb option as described at
     * https://github.com/Azure/azure-storage-fuse
     */
    @JsonProperty(value = "streamingBlockSizeMiB")
    private Integer streamingBlockSizeMiB;

    /*
     * --max-concurrency option as described at
     * https://github.com/Azure/azure-storage-fuse
     */
    @JsonProperty(value = "maxConcurrency")
    private Integer maxConcurrency;

    /*
     * --file-cache-timeout-in-seconds option as described at
     * https://github.com/Azure/azure-storage-fuse
     */
    @JsonProperty(value = "fileCacheTimeoutSeconds")
    private Integer fileCacheTimeoutSeconds;

    /*
     * --invalidate-on-sync option as described at
     * https://github.com/Azure/azure-storage-fuse
     */
    @JsonProperty(value = "invalidateOnSync")
    private Boolean invalidateOnSync;

    /**
     * Get the streaming property: --streaming option as described at https://github.com/Azure/azure-storage-fuse.
     *
     * @return the streaming value.
     */
    public Boolean streaming() {
        return this.streaming;
    }

    /**
     * Set the streaming property: --streaming option as described at https://github.com/Azure/azure-storage-fuse.
     *
     * @param streaming the streaming value to set.
     * @return the BlobFuseMountOptions object itself.
     */
    public BlobFuseMountOptions withStreaming(Boolean streaming) {
        this.streaming = streaming;
        return this;
    }

    /**
     * Get the streamingCacheLimitMiB property: --stream-cache-mb option as described at
     * https://github.com/Azure/azure-storage-fuse.
     *
     * @return the streamingCacheLimitMiB value.
     */
    public Integer streamingCacheLimitMiB() {
        return this.streamingCacheLimitMiB;
    }

    /**
     * Set the streamingCacheLimitMiB property: --stream-cache-mb option as described at
     * https://github.com/Azure/azure-storage-fuse.
     *
     * @param streamingCacheLimitMiB the streamingCacheLimitMiB value to set.
     * @return the BlobFuseMountOptions object itself.
     */
    public BlobFuseMountOptions withStreamingCacheLimitMiB(Integer streamingCacheLimitMiB) {
        this.streamingCacheLimitMiB = streamingCacheLimitMiB;
        return this;
    }

    /**
     * Get the streamingMaxBlocksPerFile property: --max-blocks-per-file option as described at
     * https://github.com/Azure/azure-storage-fuse.
     *
     * @return the streamingMaxBlocksPerFile value.
     */
    public Integer streamingMaxBlocksPerFile() {
        return this.streamingMaxBlocksPerFile;
    }

    /**
     * Set the streamingMaxBlocksPerFile property: --max-blocks-per-file option as described at
     * https://github.com/Azure/azure-storage-fuse.
     *
     * @param streamingMaxBlocksPerFile the streamingMaxBlocksPerFile value to set.
     * @return the BlobFuseMountOptions object itself.
     */
    public BlobFuseMountOptions withStreamingMaxBlocksPerFile(Integer streamingMaxBlocksPerFile) {
        this.streamingMaxBlocksPerFile = streamingMaxBlocksPerFile;
        return this;
    }

    /**
     * Get the streamingBlockSizeMiB property: --block-size-mb option as described at
     * https://github.com/Azure/azure-storage-fuse.
     *
     * @return the streamingBlockSizeMiB value.
     */
    public Integer streamingBlockSizeMiB() {
        return this.streamingBlockSizeMiB;
    }

    /**
     * Set the streamingBlockSizeMiB property: --block-size-mb option as described at
     * https://github.com/Azure/azure-storage-fuse.
     *
     * @param streamingBlockSizeMiB the streamingBlockSizeMiB value to set.
     * @return the BlobFuseMountOptions object itself.
     */
    public BlobFuseMountOptions withStreamingBlockSizeMiB(Integer streamingBlockSizeMiB) {
        this.streamingBlockSizeMiB = streamingBlockSizeMiB;
        return this;
    }

    /**
     * Get the maxConcurrency property: --max-concurrency option as described at
     * https://github.com/Azure/azure-storage-fuse.
     *
     * @return the maxConcurrency value.
     */
    public Integer maxConcurrency() {
        return this.maxConcurrency;
    }

    /**
     * Set the maxConcurrency property: --max-concurrency option as described at
     * https://github.com/Azure/azure-storage-fuse.
     *
     * @param maxConcurrency the maxConcurrency value to set.
     * @return the BlobFuseMountOptions object itself.
     */
    public BlobFuseMountOptions withMaxConcurrency(Integer maxConcurrency) {
        this.maxConcurrency = maxConcurrency;
        return this;
    }

    /**
     * Get the fileCacheTimeoutSeconds property: --file-cache-timeout-in-seconds option as described at
     * https://github.com/Azure/azure-storage-fuse.
     *
     * @return the fileCacheTimeoutSeconds value.
     */
    public Integer fileCacheTimeoutSeconds() {
        return this.fileCacheTimeoutSeconds;
    }

    /**
     * Set the fileCacheTimeoutSeconds property: --file-cache-timeout-in-seconds option as described at
     * https://github.com/Azure/azure-storage-fuse.
     *
     * @param fileCacheTimeoutSeconds the fileCacheTimeoutSeconds value to set.
     * @return the BlobFuseMountOptions object itself.
     */
    public BlobFuseMountOptions withFileCacheTimeoutSeconds(Integer fileCacheTimeoutSeconds) {
        this.fileCacheTimeoutSeconds = fileCacheTimeoutSeconds;
        return this;
    }

    /**
     * Get the invalidateOnSync property: --invalidate-on-sync option as described at
     * https://github.com/Azure/azure-storage-fuse.
     *
     * @return the invalidateOnSync value.
     */
    public Boolean invalidateOnSync() {
        return this.invalidateOnSync;
    }

    /**
     * Set the invalidateOnSync property: --invalidate-on-sync option as described at
     * https://github.com/Azure/azure-storage-fuse.
     *
     * @param invalidateOnSync the invalidateOnSync value to set.
     * @return the BlobFuseMountOptions object itself.
     */
    public BlobFuseMountOptions withInvalidateOnSync(Boolean invalidateOnSync) {
        this.invalidateOnSync = invalidateOnSync;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
