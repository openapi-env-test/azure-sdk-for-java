// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.singularity.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Describes the instance type settings. */
@Fluent
public final class InstanceTypeSettings {
    /*
     * The instance type belonging to the same series.
     */
    @JsonProperty(value = "instanceType", required = true)
    private String instanceType;

    /*
     * Describes the scale policy for a Job or a Model.
     */
    @JsonProperty(value = "scalePolicy", required = true)
    private ScalePolicy scalePolicy;

    /**
     * Get the instanceType property: The instance type belonging to the same series.
     *
     * @return the instanceType value.
     */
    public String instanceType() {
        return this.instanceType;
    }

    /**
     * Set the instanceType property: The instance type belonging to the same series.
     *
     * @param instanceType the instanceType value to set.
     * @return the InstanceTypeSettings object itself.
     */
    public InstanceTypeSettings withInstanceType(String instanceType) {
        this.instanceType = instanceType;
        return this;
    }

    /**
     * Get the scalePolicy property: Describes the scale policy for a Job or a Model.
     *
     * @return the scalePolicy value.
     */
    public ScalePolicy scalePolicy() {
        return this.scalePolicy;
    }

    /**
     * Set the scalePolicy property: Describes the scale policy for a Job or a Model.
     *
     * @param scalePolicy the scalePolicy value to set.
     * @return the InstanceTypeSettings object itself.
     */
    public InstanceTypeSettings withScalePolicy(ScalePolicy scalePolicy) {
        this.scalePolicy = scalePolicy;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (instanceType() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property instanceType in model InstanceTypeSettings"));
        }
        if (scalePolicy() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property scalePolicy in model InstanceTypeSettings"));
        } else {
            scalePolicy().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(InstanceTypeSettings.class);
}
