// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.singularity.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of StorageCaches. */
public interface StorageCaches {
    /**
     * Gets information about the storage cache resource with the given name.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param accountName The name of the Singularity account.
     * @param storageCacheResourceName The name of the Singularity storage cache.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about the storage cache resource with the given name.
     */
    StorageCacheResourceDescription get(String resourceGroupName, String accountName, String storageCacheResourceName);

    /**
     * Gets information about the storage cache resource with the given name.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param accountName The name of the Singularity account.
     * @param storageCacheResourceName The name of the Singularity storage cache.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about the storage cache resource with the given name along with {@link Response}.
     */
    Response<StorageCacheResourceDescription> getWithResponse(
        String resourceGroupName, String accountName, String storageCacheResourceName, Context context);

    /**
     * Deletes the storage cache resource identified by the name.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param accountName The name of the Singularity account.
     * @param storageCacheResourceName The name of the Singularity storage cache.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String accountName, String storageCacheResourceName);

    /**
     * Deletes the storage cache resource identified by the name.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param accountName The name of the Singularity account.
     * @param storageCacheResourceName The name of the Singularity storage cache.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String accountName, String storageCacheResourceName, Context context);

    /**
     * Gets diagnostic information about the storage cache resource with the given name.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param accountName The name of the Singularity account.
     * @param storageCacheResourceName The name of the Singularity storage cache.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return diagnostic information about the storage cache resource with the given name.
     */
    StorageCacheResourceDiagnosticsInfo getDiagnostics(
        String resourceGroupName, String accountName, String storageCacheResourceName);

    /**
     * Gets diagnostic information about the storage cache resource with the given name.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param accountName The name of the Singularity account.
     * @param storageCacheResourceName The name of the Singularity storage cache.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return diagnostic information about the storage cache resource with the given name along with {@link Response}.
     */
    Response<StorageCacheResourceDiagnosticsInfo> getDiagnosticsWithResponse(
        String resourceGroupName, String accountName, String storageCacheResourceName, Context context);

    /**
     * Gets information about all storage cache resources in a given account.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param accountName The name of the Singularity account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about all storage cache resources in a given account as paginated response with {@link
     *     PagedIterable}.
     */
    PagedIterable<StorageCacheResourceDescription> listByAccount(String resourceGroupName, String accountName);

    /**
     * Gets information about all storage cache resources in a given account.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param accountName The name of the Singularity account.
     * @param continuationToken The continuationToken parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about all storage cache resources in a given account as paginated response with {@link
     *     PagedIterable}.
     */
    PagedIterable<StorageCacheResourceDescription> listByAccount(
        String resourceGroupName, String accountName, String continuationToken, Context context);

    /**
     * Resumes the storage cache resource identified by the name.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param accountName The name of the Singularity account.
     * @param storageCacheResourceName The name of the Singularity storage cache.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes a storage cache resource.
     */
    StorageCacheResourceDescription resume(
        String resourceGroupName, String accountName, String storageCacheResourceName);

    /**
     * Resumes the storage cache resource identified by the name.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param accountName The name of the Singularity account.
     * @param storageCacheResourceName The name of the Singularity storage cache.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes a storage cache resource.
     */
    StorageCacheResourceDescription resume(
        String resourceGroupName, String accountName, String storageCacheResourceName, Context context);

    /**
     * Suspends the storage cache resource identified by the name.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param accountName The name of the Singularity account.
     * @param storageCacheResourceName The name of the Singularity storage cache.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes a storage cache resource.
     */
    StorageCacheResourceDescription suspend(
        String resourceGroupName, String accountName, String storageCacheResourceName);

    /**
     * Suspends the storage cache resource identified by the name.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param accountName The name of the Singularity account.
     * @param storageCacheResourceName The name of the Singularity storage cache.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes a storage cache resource.
     */
    StorageCacheResourceDescription suspend(
        String resourceGroupName, String accountName, String storageCacheResourceName, Context context);

    /**
     * Gets information about the storage cache resource with the given name.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about the storage cache resource with the given name along with {@link Response}.
     */
    StorageCacheResourceDescription getById(String id);

    /**
     * Gets information about the storage cache resource with the given name.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about the storage cache resource with the given name along with {@link Response}.
     */
    Response<StorageCacheResourceDescription> getByIdWithResponse(String id, Context context);

    /**
     * Deletes the storage cache resource identified by the name.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes the storage cache resource identified by the name.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new StorageCacheResourceDescription resource.
     *
     * @param name resource name.
     * @return the first stage of the new StorageCacheResourceDescription definition.
     */
    StorageCacheResourceDescription.DefinitionStages.Blank define(String name);
}
