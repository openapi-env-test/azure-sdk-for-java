// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.singularity.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of Accounts. */
public interface Accounts {
    /**
     * Gets the information about the account resource with the given name. The information include the description and
     * other properties of the account.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param accountName The name of the Singularity account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the information about the account resource with the given name.
     */
    AccountResourceDescription getByResourceGroup(String resourceGroupName, String accountName);

    /**
     * Gets the information about the account resource with the given name. The information include the description and
     * other properties of the account.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param accountName The name of the Singularity account.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the information about the account resource with the given name along with {@link Response}.
     */
    Response<AccountResourceDescription> getByResourceGroupWithResponse(
        String resourceGroupName, String accountName, Context context);

    /**
     * Deletes the account resource identified by the name.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param accountName The name of the Singularity account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String accountName);

    /**
     * Deletes the account resource identified by the name.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param accountName The name of the Singularity account.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String accountName, Context context);

    /**
     * Gets the information about all account resources in a given resource group. The information include the
     * description and other properties of the Account.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the information about all account resources in a given resource group as paginated response with {@link
     *     PagedIterable}.
     */
    PagedIterable<AccountResourceDescription> listByResourceGroup(String resourceGroupName);

    /**
     * Gets the information about all account resources in a given resource group. The information include the
     * description and other properties of the Account.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the information about all account resources in a given resource group as paginated response with {@link
     *     PagedIterable}.
     */
    PagedIterable<AccountResourceDescription> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Gets the information about all account resources in a given subscription. The information include the description
     * and other properties of the account.
     *
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the information about all account resources in a given subscription as paginated response with {@link
     *     PagedIterable}.
     */
    PagedIterable<AccountResourceDescription> list();

    /**
     * Gets the information about all account resources in a given subscription. The information include the description
     * and other properties of the account.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the information about all account resources in a given subscription as paginated response with {@link
     *     PagedIterable}.
     */
    PagedIterable<AccountResourceDescription> list(Context context);

    /**
     * Gets the information about the account resource with the given name. The information include the description and
     * other properties of the account.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the information about the account resource with the given name along with {@link Response}.
     */
    AccountResourceDescription getById(String id);

    /**
     * Gets the information about the account resource with the given name. The information include the description and
     * other properties of the account.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the information about the account resource with the given name along with {@link Response}.
     */
    Response<AccountResourceDescription> getByIdWithResponse(String id, Context context);

    /**
     * Deletes the account resource identified by the name.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes the account resource identified by the name.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new AccountResourceDescription resource.
     *
     * @param name resource name.
     * @return the first stage of the new AccountResourceDescription definition.
     */
    AccountResourceDescription.DefinitionStages.Blank define(String name);
}
