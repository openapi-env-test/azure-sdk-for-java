// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.singularity.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of Networks. */
public interface Networks {
    /**
     * Gets information about the network resource with the given name.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param accountName The name of the Singularity account.
     * @param networkResourceName The name of the Singularity network resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about the network resource with the given name.
     */
    NetworkResourceDescription get(String resourceGroupName, String accountName, String networkResourceName);

    /**
     * Gets information about the network resource with the given name.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param accountName The name of the Singularity account.
     * @param networkResourceName The name of the Singularity network resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about the network resource with the given name along with {@link Response}.
     */
    Response<NetworkResourceDescription> getWithResponse(
        String resourceGroupName, String accountName, String networkResourceName, Context context);

    /**
     * Deletes the network resource identified by the name.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param accountName The name of the Singularity account.
     * @param networkResourceName The name of the Singularity network resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String accountName, String networkResourceName);

    /**
     * Deletes the network resource identified by the name.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param accountName The name of the Singularity account.
     * @param networkResourceName The name of the Singularity network resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String accountName, String networkResourceName, Context context);

    /**
     * Gets information about all network resources in a given account.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param accountName The name of the Singularity account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about all network resources in a given account as paginated response with {@link
     *     PagedIterable}.
     */
    PagedIterable<NetworkResourceDescription> listByAccount(String resourceGroupName, String accountName);

    /**
     * Gets information about all network resources in a given account.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param accountName The name of the Singularity account.
     * @param continuationToken The continuationToken parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about all network resources in a given account as paginated response with {@link
     *     PagedIterable}.
     */
    PagedIterable<NetworkResourceDescription> listByAccount(
        String resourceGroupName, String accountName, String continuationToken, Context context);

    /**
     * Gets information about the network resource with the given name.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about the network resource with the given name along with {@link Response}.
     */
    NetworkResourceDescription getById(String id);

    /**
     * Gets information about the network resource with the given name.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return information about the network resource with the given name along with {@link Response}.
     */
    Response<NetworkResourceDescription> getByIdWithResponse(String id, Context context);

    /**
     * Deletes the network resource identified by the name.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes the network resource identified by the name.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new NetworkResourceDescription resource.
     *
     * @param name resource name.
     * @return the first stage of the new NetworkResourceDescription definition.
     */
    NetworkResourceDescription.DefinitionStages.Blank define(String name);
}
