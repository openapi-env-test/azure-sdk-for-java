// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.singularity.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.singularity.models.AvailableOperationDisplay;
import com.fasterxml.jackson.annotation.JsonProperty;

/** List of operations available at the listed Azure resource provider. */
@Fluent
public final class OperationResultInner {
    /*
     * The name of the operation
     */
    @JsonProperty(value = "name", access = JsonProperty.Access.WRITE_ONLY)
    private String name;

    /*
     * An operation available at the listed Azure resource provider.
     */
    @JsonProperty(value = "display")
    private AvailableOperationDisplay display;

    /*
     * Origin result.
     */
    @JsonProperty(value = "origin", access = JsonProperty.Access.WRITE_ONLY)
    private String origin;

    /*
     * Indicates whether the operation is a data action.
     */
    @JsonProperty(value = "isDataAction", access = JsonProperty.Access.WRITE_ONLY)
    private Boolean isDataAction;

    /*
     * The URL to use for getting the next set of results.
     */
    @JsonProperty(value = "nextLink", access = JsonProperty.Access.WRITE_ONLY)
    private String nextLink;

    /**
     * Get the name property: The name of the operation.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Get the display property: An operation available at the listed Azure resource provider.
     *
     * @return the display value.
     */
    public AvailableOperationDisplay display() {
        return this.display;
    }

    /**
     * Set the display property: An operation available at the listed Azure resource provider.
     *
     * @param display the display value to set.
     * @return the OperationResultInner object itself.
     */
    public OperationResultInner withDisplay(AvailableOperationDisplay display) {
        this.display = display;
        return this;
    }

    /**
     * Get the origin property: Origin result.
     *
     * @return the origin value.
     */
    public String origin() {
        return this.origin;
    }

    /**
     * Get the isDataAction property: Indicates whether the operation is a data action.
     *
     * @return the isDataAction value.
     */
    public Boolean isDataAction() {
        return this.isDataAction;
    }

    /**
     * Get the nextLink property: The URL to use for getting the next set of results.
     *
     * @return the nextLink value.
     */
    public String nextLink() {
        return this.nextLink;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (display() != null) {
            display().validate();
        }
    }
}
