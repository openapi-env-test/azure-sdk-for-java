// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.singularity.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.singularity.fluent.models.GroupPolicyResourceDescriptionInner;
import com.azure.resourcemanager.singularity.models.GroupPolicyResourcePatchDescription;

/** An instance of this class provides access to all the operations defined in GroupPoliciesClient. */
public interface GroupPoliciesClient {
    /**
     * Creates a group policy resource with the specified name, description and properties. If a resource with the same
     * name exists, then it is updated with the specified description and properties.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param accountName The name of the Singularity account.
     * @param policyName The name of the Singularity account quota policy. Should only be Default.
     * @param body Singularity group policy quota limit information.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of describes a GroupPolicy resource in Singularity.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<GroupPolicyResourceDescriptionInner>, GroupPolicyResourceDescriptionInner>
        beginCreateOrUpdate(
            String resourceGroupName, String accountName, String policyName, GroupPolicyResourceDescriptionInner body);

    /**
     * Creates a group policy resource with the specified name, description and properties. If a resource with the same
     * name exists, then it is updated with the specified description and properties.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param accountName The name of the Singularity account.
     * @param policyName The name of the Singularity account quota policy. Should only be Default.
     * @param body Singularity group policy quota limit information.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of describes a GroupPolicy resource in Singularity.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<GroupPolicyResourceDescriptionInner>, GroupPolicyResourceDescriptionInner>
        beginCreateOrUpdate(
            String resourceGroupName,
            String accountName,
            String policyName,
            GroupPolicyResourceDescriptionInner body,
            Context context);

    /**
     * Creates a group policy resource with the specified name, description and properties. If a resource with the same
     * name exists, then it is updated with the specified description and properties.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param accountName The name of the Singularity account.
     * @param policyName The name of the Singularity account quota policy. Should only be Default.
     * @param body Singularity group policy quota limit information.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes a GroupPolicy resource in Singularity.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    GroupPolicyResourceDescriptionInner createOrUpdate(
        String resourceGroupName, String accountName, String policyName, GroupPolicyResourceDescriptionInner body);

    /**
     * Creates a group policy resource with the specified name, description and properties. If a resource with the same
     * name exists, then it is updated with the specified description and properties.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param accountName The name of the Singularity account.
     * @param policyName The name of the Singularity account quota policy. Should only be Default.
     * @param body Singularity group policy quota limit information.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes a GroupPolicy resource in Singularity.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    GroupPolicyResourceDescriptionInner createOrUpdate(
        String resourceGroupName,
        String accountName,
        String policyName,
        GroupPolicyResourceDescriptionInner body,
        Context context);

    /**
     * If a resource with the same name exists, then it is updated with the specified description and properties.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param accountName The name of the Singularity account.
     * @param policyName The name of the Singularity account quota policy. Should only be Default.
     * @param body Singularity group policy quota limit information.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of describes a GroupPolicy resource in Singularity.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<GroupPolicyResourceDescriptionInner>, GroupPolicyResourceDescriptionInner> beginUpdate(
        String resourceGroupName, String accountName, String policyName, GroupPolicyResourcePatchDescription body);

    /**
     * If a resource with the same name exists, then it is updated with the specified description and properties.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param accountName The name of the Singularity account.
     * @param policyName The name of the Singularity account quota policy. Should only be Default.
     * @param body Singularity group policy quota limit information.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of describes a GroupPolicy resource in Singularity.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<GroupPolicyResourceDescriptionInner>, GroupPolicyResourceDescriptionInner> beginUpdate(
        String resourceGroupName,
        String accountName,
        String policyName,
        GroupPolicyResourcePatchDescription body,
        Context context);

    /**
     * If a resource with the same name exists, then it is updated with the specified description and properties.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param accountName The name of the Singularity account.
     * @param policyName The name of the Singularity account quota policy. Should only be Default.
     * @param body Singularity group policy quota limit information.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes a GroupPolicy resource in Singularity.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    GroupPolicyResourceDescriptionInner update(
        String resourceGroupName, String accountName, String policyName, GroupPolicyResourcePatchDescription body);

    /**
     * If a resource with the same name exists, then it is updated with the specified description and properties.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param accountName The name of the Singularity account.
     * @param policyName The name of the Singularity account quota policy. Should only be Default.
     * @param body Singularity group policy quota limit information.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes a GroupPolicy resource in Singularity.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    GroupPolicyResourceDescriptionInner update(
        String resourceGroupName,
        String accountName,
        String policyName,
        GroupPolicyResourcePatchDescription body,
        Context context);

    /**
     * Get a group policy resource with the specified name. The information include the description and other properties
     * of the resource.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param accountName The name of the Singularity account.
     * @param policyName The name of the Singularity account quota policy. Should only be Default.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a group policy resource with the specified name.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    GroupPolicyResourceDescriptionInner get(String resourceGroupName, String accountName, String policyName);

    /**
     * Get a group policy resource with the specified name. The information include the description and other properties
     * of the resource.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param accountName The name of the Singularity account.
     * @param policyName The name of the Singularity account quota policy. Should only be Default.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a group policy resource with the specified name along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<GroupPolicyResourceDescriptionInner> getWithResponse(
        String resourceGroupName, String accountName, String policyName, Context context);

    /**
     * Deletes a group policy resource with the specified name.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param accountName The name of the Singularity account.
     * @param policyName The name of the Singularity account quota policy. Should only be Default.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String accountName, String policyName);

    /**
     * Deletes a group policy resource with the specified name.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param accountName The name of the Singularity account.
     * @param policyName The name of the Singularity account quota policy. Should only be Default.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(
        String resourceGroupName, String accountName, String policyName, Context context);

    /**
     * Deletes a group policy resource with the specified name.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param accountName The name of the Singularity account.
     * @param policyName The name of the Singularity account quota policy. Should only be Default.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String accountName, String policyName);

    /**
     * Deletes a group policy resource with the specified name.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param accountName The name of the Singularity account.
     * @param policyName The name of the Singularity account quota policy. Should only be Default.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String accountName, String policyName, Context context);

    /**
     * Get all group policy resources in an account. The information include the description and other properties of the
     * resource.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param accountName The name of the Singularity account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all group policy resources in an account as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<GroupPolicyResourceDescriptionInner> listByAccount(String resourceGroupName, String accountName);

    /**
     * Get all group policy resources in an account. The information include the description and other properties of the
     * resource.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param accountName The name of the Singularity account.
     * @param continuationToken The continuationToken parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all group policy resources in an account as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<GroupPolicyResourceDescriptionInner> listByAccount(
        String resourceGroupName, String accountName, String continuationToken, Context context);
}
