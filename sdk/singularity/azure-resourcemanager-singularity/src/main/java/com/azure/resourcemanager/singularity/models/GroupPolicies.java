// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.singularity.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of GroupPolicies. */
public interface GroupPolicies {
    /**
     * Get a group policy resource with the specified name. The information include the description and other properties
     * of the resource.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param accountName The name of the Singularity account.
     * @param policyName The name of the Singularity account quota policy. Should only be Default.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a group policy resource with the specified name.
     */
    GroupPolicyResourceDescription get(String resourceGroupName, String accountName, String policyName);

    /**
     * Get a group policy resource with the specified name. The information include the description and other properties
     * of the resource.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param accountName The name of the Singularity account.
     * @param policyName The name of the Singularity account quota policy. Should only be Default.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a group policy resource with the specified name along with {@link Response}.
     */
    Response<GroupPolicyResourceDescription> getWithResponse(
        String resourceGroupName, String accountName, String policyName, Context context);

    /**
     * Deletes a group policy resource with the specified name.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param accountName The name of the Singularity account.
     * @param policyName The name of the Singularity account quota policy. Should only be Default.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String accountName, String policyName);

    /**
     * Deletes a group policy resource with the specified name.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param accountName The name of the Singularity account.
     * @param policyName The name of the Singularity account quota policy. Should only be Default.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String accountName, String policyName, Context context);

    /**
     * Get all group policy resources in an account. The information include the description and other properties of the
     * resource.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param accountName The name of the Singularity account.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all group policy resources in an account as paginated response with {@link PagedIterable}.
     */
    PagedIterable<GroupPolicyResourceDescription> listByAccount(String resourceGroupName, String accountName);

    /**
     * Get all group policy resources in an account. The information include the description and other properties of the
     * resource.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription.
     * @param accountName The name of the Singularity account.
     * @param continuationToken The continuationToken parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all group policy resources in an account as paginated response with {@link PagedIterable}.
     */
    PagedIterable<GroupPolicyResourceDescription> listByAccount(
        String resourceGroupName, String accountName, String continuationToken, Context context);

    /**
     * Get a group policy resource with the specified name. The information include the description and other properties
     * of the resource.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a group policy resource with the specified name along with {@link Response}.
     */
    GroupPolicyResourceDescription getById(String id);

    /**
     * Get a group policy resource with the specified name. The information include the description and other properties
     * of the resource.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a group policy resource with the specified name along with {@link Response}.
     */
    Response<GroupPolicyResourceDescription> getByIdWithResponse(String id, Context context);

    /**
     * Deletes a group policy resource with the specified name.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes a group policy resource with the specified name.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.singularity.models.ErrorModelPropertiesException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new GroupPolicyResourceDescription resource.
     *
     * @param name resource name.
     * @return the first stage of the new GroupPolicyResourceDescription definition.
     */
    GroupPolicyResourceDescription.DefinitionStages.Blank define(String name);
}
