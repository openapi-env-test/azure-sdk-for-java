// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.singularity.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Describes the location of a storage source and how it will be accessed. */
@Fluent
public final class StorageLocation {
    /*
     * This type describes Singularity storage for a job or service.
     */
    @JsonProperty(value = "source")
    private StorageSourceBase source;

    /*
     * Name of the managed storage resource to mount.
     */
    @JsonProperty(value = "storageCacheContainerName")
    private String storageCacheContainerName;

    /*
     * Describes the target mountpoint of a storage source.
     */
    @JsonProperty(value = "mount")
    private StorageMount mount;

    /**
     * Get the source property: This type describes Singularity storage for a job or service.
     *
     * @return the source value.
     */
    public StorageSourceBase source() {
        return this.source;
    }

    /**
     * Set the source property: This type describes Singularity storage for a job or service.
     *
     * @param source the source value to set.
     * @return the StorageLocation object itself.
     */
    public StorageLocation withSource(StorageSourceBase source) {
        this.source = source;
        return this;
    }

    /**
     * Get the storageCacheContainerName property: Name of the managed storage resource to mount.
     *
     * @return the storageCacheContainerName value.
     */
    public String storageCacheContainerName() {
        return this.storageCacheContainerName;
    }

    /**
     * Set the storageCacheContainerName property: Name of the managed storage resource to mount.
     *
     * @param storageCacheContainerName the storageCacheContainerName value to set.
     * @return the StorageLocation object itself.
     */
    public StorageLocation withStorageCacheContainerName(String storageCacheContainerName) {
        this.storageCacheContainerName = storageCacheContainerName;
        return this;
    }

    /**
     * Get the mount property: Describes the target mountpoint of a storage source.
     *
     * @return the mount value.
     */
    public StorageMount mount() {
        return this.mount;
    }

    /**
     * Set the mount property: Describes the target mountpoint of a storage source.
     *
     * @param mount the mount value to set.
     * @return the StorageLocation object itself.
     */
    public StorageLocation withMount(StorageMount mount) {
        this.mount = mount;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (source() != null) {
            source().validate();
        }
        if (mount() != null) {
            mount().validate();
        }
    }
}
