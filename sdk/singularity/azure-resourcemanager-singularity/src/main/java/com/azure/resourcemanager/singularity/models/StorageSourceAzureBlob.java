// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.singularity.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/** This type describes Singularity storage for a job or service. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "kind")
@JsonTypeName("AzureBlobStorage")
@Fluent
public final class StorageSourceAzureBlob extends StorageSourceBase {
    /*
     * For SasToken AuthenticationType: Container Endpoint with the associated
     * SAS token. For SystemAssignedIdentity and UserAssignedIdentity
     * AuthenticationType: Container Endpoint only.
     */
    @JsonProperty(value = "blobEndpoint", required = true)
    private String blobEndpoint;

    /*
     * Storage account ResourceId for the Azure blob. Required when
     * AuthenticationType is SystemAssignedIdentity.
     */
    @JsonProperty(value = "accountResourceId")
    private String accountResourceId;

    /*
     * User assigned managed identity. Required when AuthenticationType is
     * UserAssignedIdentity.
     */
    @JsonProperty(value = "userAssignedIdentity")
    private String userAssignedIdentity;

    /*
     * The authenticationType property.
     */
    @JsonProperty(value = "authenticationType")
    private StorageAuthenticationType authenticationType;

    /**
     * Get the blobEndpoint property: For SasToken AuthenticationType: Container Endpoint with the associated SAS token.
     * For SystemAssignedIdentity and UserAssignedIdentity AuthenticationType: Container Endpoint only.
     *
     * @return the blobEndpoint value.
     */
    public String blobEndpoint() {
        return this.blobEndpoint;
    }

    /**
     * Set the blobEndpoint property: For SasToken AuthenticationType: Container Endpoint with the associated SAS token.
     * For SystemAssignedIdentity and UserAssignedIdentity AuthenticationType: Container Endpoint only.
     *
     * @param blobEndpoint the blobEndpoint value to set.
     * @return the StorageSourceAzureBlob object itself.
     */
    public StorageSourceAzureBlob withBlobEndpoint(String blobEndpoint) {
        this.blobEndpoint = blobEndpoint;
        return this;
    }

    /**
     * Get the accountResourceId property: Storage account ResourceId for the Azure blob. Required when
     * AuthenticationType is SystemAssignedIdentity.
     *
     * @return the accountResourceId value.
     */
    public String accountResourceId() {
        return this.accountResourceId;
    }

    /**
     * Set the accountResourceId property: Storage account ResourceId for the Azure blob. Required when
     * AuthenticationType is SystemAssignedIdentity.
     *
     * @param accountResourceId the accountResourceId value to set.
     * @return the StorageSourceAzureBlob object itself.
     */
    public StorageSourceAzureBlob withAccountResourceId(String accountResourceId) {
        this.accountResourceId = accountResourceId;
        return this;
    }

    /**
     * Get the userAssignedIdentity property: User assigned managed identity. Required when AuthenticationType is
     * UserAssignedIdentity.
     *
     * @return the userAssignedIdentity value.
     */
    public String userAssignedIdentity() {
        return this.userAssignedIdentity;
    }

    /**
     * Set the userAssignedIdentity property: User assigned managed identity. Required when AuthenticationType is
     * UserAssignedIdentity.
     *
     * @param userAssignedIdentity the userAssignedIdentity value to set.
     * @return the StorageSourceAzureBlob object itself.
     */
    public StorageSourceAzureBlob withUserAssignedIdentity(String userAssignedIdentity) {
        this.userAssignedIdentity = userAssignedIdentity;
        return this;
    }

    /**
     * Get the authenticationType property: The authenticationType property.
     *
     * @return the authenticationType value.
     */
    public StorageAuthenticationType authenticationType() {
        return this.authenticationType;
    }

    /**
     * Set the authenticationType property: The authenticationType property.
     *
     * @param authenticationType the authenticationType value to set.
     * @return the StorageSourceAzureBlob object itself.
     */
    public StorageSourceAzureBlob withAuthenticationType(StorageAuthenticationType authenticationType) {
        this.authenticationType = authenticationType;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (blobEndpoint() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property blobEndpoint in model StorageSourceAzureBlob"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(StorageSourceAzureBlob.class);
}
