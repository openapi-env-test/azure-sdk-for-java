// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.singularity.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/** Describes probe settings based on HTTP request. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "kind")
@JsonTypeName("Http")
@Fluent
public final class HttpProbeSetting extends ProbeSetting {
    /*
     * The path relative to the endpoint domain name used to probe.
     */
    @JsonProperty(value = "path")
    private String path;

    /**
     * Get the path property: The path relative to the endpoint domain name used to probe.
     *
     * @return the path value.
     */
    public String path() {
        return this.path;
    }

    /**
     * Set the path property: The path relative to the endpoint domain name used to probe.
     *
     * @param path the path value to set.
     * @return the HttpProbeSetting object itself.
     */
    public HttpProbeSetting withPath(String path) {
        this.path = path;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public HttpProbeSetting withInitialDelayInSeconds(Integer initialDelayInSeconds) {
        super.withInitialDelayInSeconds(initialDelayInSeconds);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public HttpProbeSetting withSuccessThreshold(Integer successThreshold) {
        super.withSuccessThreshold(successThreshold);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public HttpProbeSetting withFailureThreshold(Integer failureThreshold) {
        super.withFailureThreshold(failureThreshold);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public HttpProbeSetting withFrequencyInSeconds(Integer frequencyInSeconds) {
        super.withFrequencyInSeconds(frequencyInSeconds);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public HttpProbeSetting withTimeoutInSeconds(Integer timeoutInSeconds) {
        super.withTimeoutInSeconds(timeoutInSeconds);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
