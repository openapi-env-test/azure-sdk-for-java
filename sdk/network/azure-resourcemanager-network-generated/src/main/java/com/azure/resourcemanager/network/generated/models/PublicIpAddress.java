// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.models;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.network.generated.fluent.models.PublicIpAddressInner;
import java.util.List;
import java.util.Map;

/** An immutable client-side representation of PublicIpAddress. */
public interface PublicIpAddress {
    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the sku property: The public IP address SKU.
     *
     * @return the sku value.
     */
    PublicIpAddressSku sku();

    /**
     * Gets the etag property: A unique read-only string that changes whenever the resource is updated.
     *
     * @return the etag value.
     */
    String etag();

    /**
     * Gets the zones property: A list of availability zones denoting the IP allocated for the resource needs to come
     * from.
     *
     * @return the zones value.
     */
    List<String> zones();

    /**
     * Gets the publicIpAllocationMethod property: The public IP allocation method. Possible values are: 'Static' and
     * 'Dynamic'.
     *
     * @return the publicIpAllocationMethod value.
     */
    IpAllocationMethod publicIpAllocationMethod();

    /**
     * Gets the publicIpAddressVersion property: The public IP address version. Possible values are: 'IPv4' and 'IPv6'.
     *
     * @return the publicIpAddressVersion value.
     */
    IpVersion publicIpAddressVersion();

    /**
     * Gets the ipConfiguration property: The IP configuration associated with the public IP address.
     *
     * @return the ipConfiguration value.
     */
    IpConfiguration ipConfiguration();

    /**
     * Gets the dnsSettings property: The FQDN of the DNS record associated with the public IP address.
     *
     * @return the dnsSettings value.
     */
    PublicIpAddressDnsSettings dnsSettings();

    /**
     * Gets the ipAddress property: The IP address associated with the public IP address resource.
     *
     * @return the ipAddress value.
     */
    String ipAddress();

    /**
     * Gets the idleTimeoutInMinutes property: The idle timeout of the public IP address.
     *
     * @return the idleTimeoutInMinutes value.
     */
    Integer idleTimeoutInMinutes();

    /**
     * Gets the resourceGuid property: The resource GUID property of the public IP resource.
     *
     * @return the resourceGuid value.
     */
    String resourceGuid();

    /**
     * Gets the provisioningState property: The provisioning state of the PublicIP resource. Possible values are:
     * 'Updating', 'Deleting', and 'Failed'.
     *
     * @return the provisioningState value.
     */
    String provisioningState();

    /**
     * Gets the id property: Resource ID.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the inner com.azure.resourcemanager.network.generated.fluent.models.PublicIpAddressInner object.
     *
     * @return the inner object.
     */
    PublicIpAddressInner innerModel();

    /** The entirety of the PublicIpAddress definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithResourceGroup,
            DefinitionStages.WithCreate {
    }
    /** The PublicIpAddress definition stages. */
    interface DefinitionStages {
        /** The first stage of the PublicIpAddress definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the PublicIpAddress definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }
        /** The stage of the PublicIpAddress definition allowing to specify parent resource. */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             *
             * @param resourceGroupName The name of the resource group.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceGroup(String resourceGroupName);
        }
        /**
         * The stage of the PublicIpAddress definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags,
                DefinitionStages.WithSku,
                DefinitionStages.WithEtag,
                DefinitionStages.WithZones,
                DefinitionStages.WithPublicIpAllocationMethod,
                DefinitionStages.WithPublicIpAddressVersion,
                DefinitionStages.WithDnsSettings,
                DefinitionStages.WithIpAddress,
                DefinitionStages.WithIdleTimeoutInMinutes,
                DefinitionStages.WithResourceGuid,
                DefinitionStages.WithProvisioningState {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            PublicIpAddress create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            PublicIpAddress create(Context context);
        }
        /** The stage of the PublicIpAddress definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the PublicIpAddress definition allowing to specify sku. */
        interface WithSku {
            /**
             * Specifies the sku property: The public IP address SKU..
             *
             * @param sku The public IP address SKU.
             * @return the next definition stage.
             */
            WithCreate withSku(PublicIpAddressSku sku);
        }
        /** The stage of the PublicIpAddress definition allowing to specify etag. */
        interface WithEtag {
            /**
             * Specifies the etag property: A unique read-only string that changes whenever the resource is updated..
             *
             * @param etag A unique read-only string that changes whenever the resource is updated.
             * @return the next definition stage.
             */
            WithCreate withEtag(String etag);
        }
        /** The stage of the PublicIpAddress definition allowing to specify zones. */
        interface WithZones {
            /**
             * Specifies the zones property: A list of availability zones denoting the IP allocated for the resource
             * needs to come from..
             *
             * @param zones A list of availability zones denoting the IP allocated for the resource needs to come from.
             * @return the next definition stage.
             */
            WithCreate withZones(List<String> zones);
        }
        /** The stage of the PublicIpAddress definition allowing to specify publicIpAllocationMethod. */
        interface WithPublicIpAllocationMethod {
            /**
             * Specifies the publicIpAllocationMethod property: The public IP allocation method. Possible values are:
             * 'Static' and 'Dynamic'..
             *
             * @param publicIpAllocationMethod The public IP allocation method. Possible values are: 'Static' and
             *     'Dynamic'.
             * @return the next definition stage.
             */
            WithCreate withPublicIpAllocationMethod(IpAllocationMethod publicIpAllocationMethod);
        }
        /** The stage of the PublicIpAddress definition allowing to specify publicIpAddressVersion. */
        interface WithPublicIpAddressVersion {
            /**
             * Specifies the publicIpAddressVersion property: The public IP address version. Possible values are: 'IPv4'
             * and 'IPv6'..
             *
             * @param publicIpAddressVersion The public IP address version. Possible values are: 'IPv4' and 'IPv6'.
             * @return the next definition stage.
             */
            WithCreate withPublicIpAddressVersion(IpVersion publicIpAddressVersion);
        }
        /** The stage of the PublicIpAddress definition allowing to specify dnsSettings. */
        interface WithDnsSettings {
            /**
             * Specifies the dnsSettings property: The FQDN of the DNS record associated with the public IP address..
             *
             * @param dnsSettings The FQDN of the DNS record associated with the public IP address.
             * @return the next definition stage.
             */
            WithCreate withDnsSettings(PublicIpAddressDnsSettings dnsSettings);
        }
        /** The stage of the PublicIpAddress definition allowing to specify ipAddress. */
        interface WithIpAddress {
            /**
             * Specifies the ipAddress property: The IP address associated with the public IP address resource..
             *
             * @param ipAddress The IP address associated with the public IP address resource.
             * @return the next definition stage.
             */
            WithCreate withIpAddress(String ipAddress);
        }
        /** The stage of the PublicIpAddress definition allowing to specify idleTimeoutInMinutes. */
        interface WithIdleTimeoutInMinutes {
            /**
             * Specifies the idleTimeoutInMinutes property: The idle timeout of the public IP address..
             *
             * @param idleTimeoutInMinutes The idle timeout of the public IP address.
             * @return the next definition stage.
             */
            WithCreate withIdleTimeoutInMinutes(Integer idleTimeoutInMinutes);
        }
        /** The stage of the PublicIpAddress definition allowing to specify resourceGuid. */
        interface WithResourceGuid {
            /**
             * Specifies the resourceGuid property: The resource GUID property of the public IP resource..
             *
             * @param resourceGuid The resource GUID property of the public IP resource.
             * @return the next definition stage.
             */
            WithCreate withResourceGuid(String resourceGuid);
        }
        /** The stage of the PublicIpAddress definition allowing to specify provisioningState. */
        interface WithProvisioningState {
            /**
             * Specifies the provisioningState property: The provisioning state of the PublicIP resource. Possible
             * values are: 'Updating', 'Deleting', and 'Failed'..
             *
             * @param provisioningState The provisioning state of the PublicIP resource. Possible values are:
             *     'Updating', 'Deleting', and 'Failed'.
             * @return the next definition stage.
             */
            WithCreate withProvisioningState(String provisioningState);
        }
    }
    /**
     * Begins update for the PublicIpAddress resource.
     *
     * @return the stage of resource update.
     */
    PublicIpAddress.Update update();

    /** The template for PublicIpAddress update. */
    interface Update
        extends UpdateStages.WithTags,
            UpdateStages.WithSku,
            UpdateStages.WithEtag,
            UpdateStages.WithZones,
            UpdateStages.WithPublicIpAllocationMethod,
            UpdateStages.WithPublicIpAddressVersion,
            UpdateStages.WithDnsSettings,
            UpdateStages.WithIpAddress,
            UpdateStages.WithIdleTimeoutInMinutes,
            UpdateStages.WithResourceGuid,
            UpdateStages.WithProvisioningState {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        PublicIpAddress apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        PublicIpAddress apply(Context context);
    }
    /** The PublicIpAddress update stages. */
    interface UpdateStages {
        /** The stage of the PublicIpAddress update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
        /** The stage of the PublicIpAddress update allowing to specify sku. */
        interface WithSku {
            /**
             * Specifies the sku property: The public IP address SKU..
             *
             * @param sku The public IP address SKU.
             * @return the next definition stage.
             */
            Update withSku(PublicIpAddressSku sku);
        }
        /** The stage of the PublicIpAddress update allowing to specify etag. */
        interface WithEtag {
            /**
             * Specifies the etag property: A unique read-only string that changes whenever the resource is updated..
             *
             * @param etag A unique read-only string that changes whenever the resource is updated.
             * @return the next definition stage.
             */
            Update withEtag(String etag);
        }
        /** The stage of the PublicIpAddress update allowing to specify zones. */
        interface WithZones {
            /**
             * Specifies the zones property: A list of availability zones denoting the IP allocated for the resource
             * needs to come from..
             *
             * @param zones A list of availability zones denoting the IP allocated for the resource needs to come from.
             * @return the next definition stage.
             */
            Update withZones(List<String> zones);
        }
        /** The stage of the PublicIpAddress update allowing to specify publicIpAllocationMethod. */
        interface WithPublicIpAllocationMethod {
            /**
             * Specifies the publicIpAllocationMethod property: The public IP allocation method. Possible values are:
             * 'Static' and 'Dynamic'..
             *
             * @param publicIpAllocationMethod The public IP allocation method. Possible values are: 'Static' and
             *     'Dynamic'.
             * @return the next definition stage.
             */
            Update withPublicIpAllocationMethod(IpAllocationMethod publicIpAllocationMethod);
        }
        /** The stage of the PublicIpAddress update allowing to specify publicIpAddressVersion. */
        interface WithPublicIpAddressVersion {
            /**
             * Specifies the publicIpAddressVersion property: The public IP address version. Possible values are: 'IPv4'
             * and 'IPv6'..
             *
             * @param publicIpAddressVersion The public IP address version. Possible values are: 'IPv4' and 'IPv6'.
             * @return the next definition stage.
             */
            Update withPublicIpAddressVersion(IpVersion publicIpAddressVersion);
        }
        /** The stage of the PublicIpAddress update allowing to specify dnsSettings. */
        interface WithDnsSettings {
            /**
             * Specifies the dnsSettings property: The FQDN of the DNS record associated with the public IP address..
             *
             * @param dnsSettings The FQDN of the DNS record associated with the public IP address.
             * @return the next definition stage.
             */
            Update withDnsSettings(PublicIpAddressDnsSettings dnsSettings);
        }
        /** The stage of the PublicIpAddress update allowing to specify ipAddress. */
        interface WithIpAddress {
            /**
             * Specifies the ipAddress property: The IP address associated with the public IP address resource..
             *
             * @param ipAddress The IP address associated with the public IP address resource.
             * @return the next definition stage.
             */
            Update withIpAddress(String ipAddress);
        }
        /** The stage of the PublicIpAddress update allowing to specify idleTimeoutInMinutes. */
        interface WithIdleTimeoutInMinutes {
            /**
             * Specifies the idleTimeoutInMinutes property: The idle timeout of the public IP address..
             *
             * @param idleTimeoutInMinutes The idle timeout of the public IP address.
             * @return the next definition stage.
             */
            Update withIdleTimeoutInMinutes(Integer idleTimeoutInMinutes);
        }
        /** The stage of the PublicIpAddress update allowing to specify resourceGuid. */
        interface WithResourceGuid {
            /**
             * Specifies the resourceGuid property: The resource GUID property of the public IP resource..
             *
             * @param resourceGuid The resource GUID property of the public IP resource.
             * @return the next definition stage.
             */
            Update withResourceGuid(String resourceGuid);
        }
        /** The stage of the PublicIpAddress update allowing to specify provisioningState. */
        interface WithProvisioningState {
            /**
             * Specifies the provisioningState property: The provisioning state of the PublicIP resource. Possible
             * values are: 'Updating', 'Deleting', and 'Failed'..
             *
             * @param provisioningState The provisioning state of the PublicIP resource. Possible values are:
             *     'Updating', 'Deleting', and 'Failed'.
             * @return the next definition stage.
             */
            Update withProvisioningState(String provisioningState);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    PublicIpAddress refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    PublicIpAddress refresh(Context context);
}
