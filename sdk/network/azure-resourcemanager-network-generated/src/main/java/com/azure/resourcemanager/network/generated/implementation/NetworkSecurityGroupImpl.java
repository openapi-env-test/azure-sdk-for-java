// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SubResource;
import com.azure.core.util.Context;
import com.azure.resourcemanager.network.generated.NetworkManager;
import com.azure.resourcemanager.network.generated.fluent.models.NetworkSecurityGroupInner;
import com.azure.resourcemanager.network.generated.fluent.models.SecurityRuleInner;
import com.azure.resourcemanager.network.generated.models.NetworkSecurityGroup;
import com.azure.resourcemanager.network.generated.models.SecurityRule;
import java.util.Collections;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

public final class NetworkSecurityGroupImpl
    implements NetworkSecurityGroup, NetworkSecurityGroup.Definition, NetworkSecurityGroup.Update {
    private NetworkSecurityGroupInner innerObject;

    private final NetworkManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public String etag() {
        return this.innerModel().etag();
    }

    public List<SecurityRule> securityRules() {
        List<SecurityRuleInner> inner = this.innerModel().securityRules();
        if (inner != null) {
            return Collections
                .unmodifiableList(
                    inner
                        .stream()
                        .map(inner1 -> new SecurityRuleImpl(inner1, this.manager()))
                        .collect(Collectors.toList()));
        } else {
            return Collections.emptyList();
        }
    }

    public List<SecurityRule> defaultSecurityRules() {
        List<SecurityRuleInner> inner = this.innerModel().defaultSecurityRules();
        if (inner != null) {
            return Collections
                .unmodifiableList(
                    inner
                        .stream()
                        .map(inner1 -> new SecurityRuleImpl(inner1, this.manager()))
                        .collect(Collectors.toList()));
        } else {
            return Collections.emptyList();
        }
    }

    public List<SubResource> networkInterfaces() {
        List<SubResource> inner = this.innerModel().networkInterfaces();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<SubResource> subnets() {
        List<SubResource> inner = this.innerModel().subnets();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public String resourceGuid() {
        return this.innerModel().resourceGuid();
    }

    public String provisioningState() {
        return this.innerModel().provisioningState();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public NetworkSecurityGroupInner innerModel() {
        return this.innerObject;
    }

    private NetworkManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String networkSecurityGroupName;

    public NetworkSecurityGroupImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public NetworkSecurityGroup create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getNetworkSecurityGroups()
                .createOrUpdate(resourceGroupName, networkSecurityGroupName, this.innerModel(), Context.NONE);
        return this;
    }

    public NetworkSecurityGroup create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getNetworkSecurityGroups()
                .createOrUpdate(resourceGroupName, networkSecurityGroupName, this.innerModel(), context);
        return this;
    }

    NetworkSecurityGroupImpl(String name, NetworkManager serviceManager) {
        this.innerObject = new NetworkSecurityGroupInner();
        this.serviceManager = serviceManager;
        this.networkSecurityGroupName = name;
    }

    public NetworkSecurityGroupImpl update() {
        return this;
    }

    public NetworkSecurityGroup apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getNetworkSecurityGroups()
                .createOrUpdate(resourceGroupName, networkSecurityGroupName, this.innerModel(), Context.NONE);
        return this;
    }

    public NetworkSecurityGroup apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getNetworkSecurityGroups()
                .createOrUpdate(resourceGroupName, networkSecurityGroupName, this.innerModel(), context);
        return this;
    }

    NetworkSecurityGroupImpl(NetworkSecurityGroupInner innerObject, NetworkManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.networkSecurityGroupName = Utils.getValueFromIdByName(innerObject.id(), "networkSecurityGroups");
    }

    public NetworkSecurityGroup refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getNetworkSecurityGroups()
                .getByResourceGroupWithResponse(resourceGroupName, networkSecurityGroupName, Context.NONE)
                .getValue();
        return this;
    }

    public NetworkSecurityGroup refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getNetworkSecurityGroups()
                .getByResourceGroupWithResponse(resourceGroupName, networkSecurityGroupName, context)
                .getValue();
        return this;
    }

    public NetworkSecurityGroupImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public NetworkSecurityGroupImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public NetworkSecurityGroupImpl withTags(Map<String, String> tags) {
        this.innerModel().withTags(tags);
        return this;
    }

    public NetworkSecurityGroupImpl withEtag(String etag) {
        this.innerModel().withEtag(etag);
        return this;
    }

    public NetworkSecurityGroupImpl withSecurityRules(List<SecurityRuleInner> securityRules) {
        this.innerModel().withSecurityRules(securityRules);
        return this;
    }

    public NetworkSecurityGroupImpl withDefaultSecurityRules(List<SecurityRuleInner> defaultSecurityRules) {
        this.innerModel().withDefaultSecurityRules(defaultSecurityRules);
        return this;
    }

    public NetworkSecurityGroupImpl withNetworkInterfaces(List<SubResource> networkInterfaces) {
        this.innerModel().withNetworkInterfaces(networkInterfaces);
        return this;
    }

    public NetworkSecurityGroupImpl withSubnets(List<SubResource> subnets) {
        this.innerModel().withSubnets(subnets);
        return this;
    }

    public NetworkSecurityGroupImpl withResourceGuid(String resourceGuid) {
        this.innerModel().withResourceGuid(resourceGuid);
        return this;
    }

    public NetworkSecurityGroupImpl withProvisioningState(String provisioningState) {
        this.innerModel().withProvisioningState(provisioningState);
        return this;
    }
}
