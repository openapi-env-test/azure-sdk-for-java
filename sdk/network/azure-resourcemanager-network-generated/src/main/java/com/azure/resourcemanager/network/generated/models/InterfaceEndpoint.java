// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.models;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.network.generated.fluent.models.InterfaceEndpointInner;
import com.azure.resourcemanager.network.generated.fluent.models.SubnetInner;
import java.util.List;
import java.util.Map;

/** An immutable client-side representation of InterfaceEndpoint. */
public interface InterfaceEndpoint {
    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the etag property: Gets a unique read-only string that changes whenever the resource is updated.
     *
     * @return the etag value.
     */
    String etag();

    /**
     * Gets the fqdn property: A first-party service's FQDN that is mapped to the private IP allocated via this
     * interface endpoint.
     *
     * @return the fqdn value.
     */
    String fqdn();

    /**
     * Gets the endpointService property: A reference to the service being brought into the virtual network.
     *
     * @return the endpointService value.
     */
    EndpointService endpointService();

    /**
     * Gets the subnet property: The ID of the subnet from which the private IP will be allocated.
     *
     * @return the subnet value.
     */
    Subnet subnet();

    /**
     * Gets the networkInterfaces property: Gets an array of references to the network interfaces created for this
     * interface endpoint.
     *
     * @return the networkInterfaces value.
     */
    List<NetworkInterface> networkInterfaces();

    /**
     * Gets the owner property: A read-only property that identifies who created this interface endpoint.
     *
     * @return the owner value.
     */
    String owner();

    /**
     * Gets the provisioningState property: The provisioning state of the interface endpoint. Possible values are:
     * 'Updating', 'Deleting', and 'Failed'.
     *
     * @return the provisioningState value.
     */
    String provisioningState();

    /**
     * Gets the id property: Resource ID.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the inner com.azure.resourcemanager.network.generated.fluent.models.InterfaceEndpointInner object.
     *
     * @return the inner object.
     */
    InterfaceEndpointInner innerModel();

    /** The entirety of the InterfaceEndpoint definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithResourceGroup,
            DefinitionStages.WithCreate {
    }
    /** The InterfaceEndpoint definition stages. */
    interface DefinitionStages {
        /** The first stage of the InterfaceEndpoint definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the InterfaceEndpoint definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }
        /** The stage of the InterfaceEndpoint definition allowing to specify parent resource. */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             *
             * @param resourceGroupName The name of the resource group.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceGroup(String resourceGroupName);
        }
        /**
         * The stage of the InterfaceEndpoint definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags,
                DefinitionStages.WithEtag,
                DefinitionStages.WithFqdn,
                DefinitionStages.WithEndpointService,
                DefinitionStages.WithSubnet {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            InterfaceEndpoint create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            InterfaceEndpoint create(Context context);
        }
        /** The stage of the InterfaceEndpoint definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the InterfaceEndpoint definition allowing to specify etag. */
        interface WithEtag {
            /**
             * Specifies the etag property: Gets a unique read-only string that changes whenever the resource is
             * updated..
             *
             * @param etag Gets a unique read-only string that changes whenever the resource is updated.
             * @return the next definition stage.
             */
            WithCreate withEtag(String etag);
        }
        /** The stage of the InterfaceEndpoint definition allowing to specify fqdn. */
        interface WithFqdn {
            /**
             * Specifies the fqdn property: A first-party service's FQDN that is mapped to the private IP allocated via
             * this interface endpoint..
             *
             * @param fqdn A first-party service's FQDN that is mapped to the private IP allocated via this interface
             *     endpoint.
             * @return the next definition stage.
             */
            WithCreate withFqdn(String fqdn);
        }
        /** The stage of the InterfaceEndpoint definition allowing to specify endpointService. */
        interface WithEndpointService {
            /**
             * Specifies the endpointService property: A reference to the service being brought into the virtual
             * network..
             *
             * @param endpointService A reference to the service being brought into the virtual network.
             * @return the next definition stage.
             */
            WithCreate withEndpointService(EndpointService endpointService);
        }
        /** The stage of the InterfaceEndpoint definition allowing to specify subnet. */
        interface WithSubnet {
            /**
             * Specifies the subnet property: The ID of the subnet from which the private IP will be allocated..
             *
             * @param subnet The ID of the subnet from which the private IP will be allocated.
             * @return the next definition stage.
             */
            WithCreate withSubnet(SubnetInner subnet);
        }
    }
    /**
     * Begins update for the InterfaceEndpoint resource.
     *
     * @return the stage of resource update.
     */
    InterfaceEndpoint.Update update();

    /** The template for InterfaceEndpoint update. */
    interface Update
        extends UpdateStages.WithTags,
            UpdateStages.WithEtag,
            UpdateStages.WithFqdn,
            UpdateStages.WithEndpointService,
            UpdateStages.WithSubnet {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        InterfaceEndpoint apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        InterfaceEndpoint apply(Context context);
    }
    /** The InterfaceEndpoint update stages. */
    interface UpdateStages {
        /** The stage of the InterfaceEndpoint update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
        /** The stage of the InterfaceEndpoint update allowing to specify etag. */
        interface WithEtag {
            /**
             * Specifies the etag property: Gets a unique read-only string that changes whenever the resource is
             * updated..
             *
             * @param etag Gets a unique read-only string that changes whenever the resource is updated.
             * @return the next definition stage.
             */
            Update withEtag(String etag);
        }
        /** The stage of the InterfaceEndpoint update allowing to specify fqdn. */
        interface WithFqdn {
            /**
             * Specifies the fqdn property: A first-party service's FQDN that is mapped to the private IP allocated via
             * this interface endpoint..
             *
             * @param fqdn A first-party service's FQDN that is mapped to the private IP allocated via this interface
             *     endpoint.
             * @return the next definition stage.
             */
            Update withFqdn(String fqdn);
        }
        /** The stage of the InterfaceEndpoint update allowing to specify endpointService. */
        interface WithEndpointService {
            /**
             * Specifies the endpointService property: A reference to the service being brought into the virtual
             * network..
             *
             * @param endpointService A reference to the service being brought into the virtual network.
             * @return the next definition stage.
             */
            Update withEndpointService(EndpointService endpointService);
        }
        /** The stage of the InterfaceEndpoint update allowing to specify subnet. */
        interface WithSubnet {
            /**
             * Specifies the subnet property: The ID of the subnet from which the private IP will be allocated..
             *
             * @param subnet The ID of the subnet from which the private IP will be allocated.
             * @return the next definition stage.
             */
            Update withSubnet(SubnetInner subnet);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    InterfaceEndpoint refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    InterfaceEndpoint refresh(Context context);
}
