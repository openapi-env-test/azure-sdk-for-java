// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.models;

import com.azure.core.management.Region;
import com.azure.core.management.SubResource;
import com.azure.core.util.Context;
import com.azure.resourcemanager.network.generated.fluent.models.LocalNetworkGatewayInner;
import com.azure.resourcemanager.network.generated.fluent.models.VirtualNetworkGatewayConnectionInner;
import com.azure.resourcemanager.network.generated.fluent.models.VirtualNetworkGatewayInner;
import java.util.Map;

/** An immutable client-side representation of VirtualNetworkGatewayConnection. */
public interface VirtualNetworkGatewayConnection {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the etag property: Gets a unique read-only string that changes whenever the resource is updated.
     *
     * @return the etag value.
     */
    String etag();

    /**
     * Gets the virtualNetworkGateway1 property: A common class for general resource information.
     *
     * @return the virtualNetworkGateway1 value.
     */
    VirtualNetworkGateway virtualNetworkGateway1();

    /**
     * Gets the virtualNetworkGateway2 property: A common class for general resource information.
     *
     * @return the virtualNetworkGateway2 value.
     */
    VirtualNetworkGateway virtualNetworkGateway2();

    /**
     * Gets the localNetworkGateway2 property: A common class for general resource information.
     *
     * @return the localNetworkGateway2 value.
     */
    LocalNetworkGateway localNetworkGateway2();

    /**
     * Gets the connectionType property: Gateway connection type IPsec/Dedicated/VpnClient/Vnet2Vnet.
     *
     * @return the connectionType value.
     */
    VirtualNetworkGatewayConnectionType connectionType();

    /**
     * Gets the routingWeight property: The Routing weight.
     *
     * @return the routingWeight value.
     */
    Integer routingWeight();

    /**
     * Gets the sharedKey property: The IPsec share key.
     *
     * @return the sharedKey value.
     */
    String sharedKey();

    /**
     * Gets the connectionStatus property: Virtual network Gateway connection status.
     *
     * @return the connectionStatus value.
     */
    VirtualNetworkGatewayConnectionStatus connectionStatus();

    /**
     * Gets the egressBytesTransferred property: The Egress Bytes Transferred in this connection.
     *
     * @return the egressBytesTransferred value.
     */
    Long egressBytesTransferred();

    /**
     * Gets the ingressBytesTransferred property: The Ingress Bytes Transferred in this connection.
     *
     * @return the ingressBytesTransferred value.
     */
    Long ingressBytesTransferred();

    /**
     * Gets the peer property: The reference to peerings resource.
     *
     * @return the peer value.
     */
    SubResource peer();

    /**
     * Gets the resourceGuid property: Gets or sets resource guid property of the VirtualNetworkGatewayConnection
     * resource.
     *
     * @return the resourceGuid value.
     */
    String resourceGuid();

    /**
     * Gets the provisioningState property: Gets or sets Provisioning state of the VirtualNetworkGatewayConnection
     * resource Updating/Deleting/Failed.
     *
     * @return the provisioningState value.
     */
    String provisioningState();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the inner com.azure.resourcemanager.network.generated.fluent.models.VirtualNetworkGatewayConnectionInner
     * object.
     *
     * @return the inner object.
     */
    VirtualNetworkGatewayConnectionInner innerModel();

    /** The entirety of the VirtualNetworkGatewayConnection definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithResourceGroup,
            DefinitionStages.WithCreate {
    }
    /** The VirtualNetworkGatewayConnection definition stages. */
    interface DefinitionStages {
        /** The first stage of the VirtualNetworkGatewayConnection definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the VirtualNetworkGatewayConnection definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }
        /** The stage of the VirtualNetworkGatewayConnection definition allowing to specify parent resource. */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             *
             * @param resourceGroupName The name of the resource group.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceGroup(String resourceGroupName);
        }
        /**
         * The stage of the VirtualNetworkGatewayConnection definition which contains all the minimum required
         * properties for the resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags,
                DefinitionStages.WithEtag,
                DefinitionStages.WithVirtualNetworkGateway1,
                DefinitionStages.WithVirtualNetworkGateway2,
                DefinitionStages.WithLocalNetworkGateway2,
                DefinitionStages.WithConnectionType,
                DefinitionStages.WithRoutingWeight,
                DefinitionStages.WithSharedKey,
                DefinitionStages.WithConnectionStatus,
                DefinitionStages.WithEgressBytesTransferred,
                DefinitionStages.WithIngressBytesTransferred,
                DefinitionStages.WithPeer,
                DefinitionStages.WithResourceGuid,
                DefinitionStages.WithProvisioningState {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            VirtualNetworkGatewayConnection create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            VirtualNetworkGatewayConnection create(Context context);
        }
        /** The stage of the VirtualNetworkGatewayConnection definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the VirtualNetworkGatewayConnection definition allowing to specify etag. */
        interface WithEtag {
            /**
             * Specifies the etag property: Gets a unique read-only string that changes whenever the resource is
             * updated.
             *
             * @param etag Gets a unique read-only string that changes whenever the resource is updated.
             * @return the next definition stage.
             */
            WithCreate withEtag(String etag);
        }
        /** The stage of the VirtualNetworkGatewayConnection definition allowing to specify virtualNetworkGateway1. */
        interface WithVirtualNetworkGateway1 {
            /**
             * Specifies the virtualNetworkGateway1 property: A common class for general resource information.
             *
             * @param virtualNetworkGateway1 A common class for general resource information.
             * @return the next definition stage.
             */
            WithCreate withVirtualNetworkGateway1(VirtualNetworkGatewayInner virtualNetworkGateway1);
        }
        /** The stage of the VirtualNetworkGatewayConnection definition allowing to specify virtualNetworkGateway2. */
        interface WithVirtualNetworkGateway2 {
            /**
             * Specifies the virtualNetworkGateway2 property: A common class for general resource information.
             *
             * @param virtualNetworkGateway2 A common class for general resource information.
             * @return the next definition stage.
             */
            WithCreate withVirtualNetworkGateway2(VirtualNetworkGatewayInner virtualNetworkGateway2);
        }
        /** The stage of the VirtualNetworkGatewayConnection definition allowing to specify localNetworkGateway2. */
        interface WithLocalNetworkGateway2 {
            /**
             * Specifies the localNetworkGateway2 property: A common class for general resource information.
             *
             * @param localNetworkGateway2 A common class for general resource information.
             * @return the next definition stage.
             */
            WithCreate withLocalNetworkGateway2(LocalNetworkGatewayInner localNetworkGateway2);
        }
        /** The stage of the VirtualNetworkGatewayConnection definition allowing to specify connectionType. */
        interface WithConnectionType {
            /**
             * Specifies the connectionType property: Gateway connection type IPsec/Dedicated/VpnClient/Vnet2Vnet.
             *
             * @param connectionType Gateway connection type IPsec/Dedicated/VpnClient/Vnet2Vnet.
             * @return the next definition stage.
             */
            WithCreate withConnectionType(VirtualNetworkGatewayConnectionType connectionType);
        }
        /** The stage of the VirtualNetworkGatewayConnection definition allowing to specify routingWeight. */
        interface WithRoutingWeight {
            /**
             * Specifies the routingWeight property: The Routing weight..
             *
             * @param routingWeight The Routing weight.
             * @return the next definition stage.
             */
            WithCreate withRoutingWeight(Integer routingWeight);
        }
        /** The stage of the VirtualNetworkGatewayConnection definition allowing to specify sharedKey. */
        interface WithSharedKey {
            /**
             * Specifies the sharedKey property: The IPsec share key..
             *
             * @param sharedKey The IPsec share key.
             * @return the next definition stage.
             */
            WithCreate withSharedKey(String sharedKey);
        }
        /** The stage of the VirtualNetworkGatewayConnection definition allowing to specify connectionStatus. */
        interface WithConnectionStatus {
            /**
             * Specifies the connectionStatus property: Virtual network Gateway connection status.
             *
             * @param connectionStatus Virtual network Gateway connection status.
             * @return the next definition stage.
             */
            WithCreate withConnectionStatus(VirtualNetworkGatewayConnectionStatus connectionStatus);
        }
        /** The stage of the VirtualNetworkGatewayConnection definition allowing to specify egressBytesTransferred. */
        interface WithEgressBytesTransferred {
            /**
             * Specifies the egressBytesTransferred property: The Egress Bytes Transferred in this connection.
             *
             * @param egressBytesTransferred The Egress Bytes Transferred in this connection.
             * @return the next definition stage.
             */
            WithCreate withEgressBytesTransferred(Long egressBytesTransferred);
        }
        /** The stage of the VirtualNetworkGatewayConnection definition allowing to specify ingressBytesTransferred. */
        interface WithIngressBytesTransferred {
            /**
             * Specifies the ingressBytesTransferred property: The Ingress Bytes Transferred in this connection.
             *
             * @param ingressBytesTransferred The Ingress Bytes Transferred in this connection.
             * @return the next definition stage.
             */
            WithCreate withIngressBytesTransferred(Long ingressBytesTransferred);
        }
        /** The stage of the VirtualNetworkGatewayConnection definition allowing to specify peer. */
        interface WithPeer {
            /**
             * Specifies the peer property: The reference to peerings resource..
             *
             * @param peer The reference to peerings resource.
             * @return the next definition stage.
             */
            WithCreate withPeer(SubResource peer);
        }
        /** The stage of the VirtualNetworkGatewayConnection definition allowing to specify resourceGuid. */
        interface WithResourceGuid {
            /**
             * Specifies the resourceGuid property: Gets or sets resource guid property of the
             * VirtualNetworkGatewayConnection resource.
             *
             * @param resourceGuid Gets or sets resource guid property of the VirtualNetworkGatewayConnection resource.
             * @return the next definition stage.
             */
            WithCreate withResourceGuid(String resourceGuid);
        }
        /** The stage of the VirtualNetworkGatewayConnection definition allowing to specify provisioningState. */
        interface WithProvisioningState {
            /**
             * Specifies the provisioningState property: Gets or sets Provisioning state of the
             * VirtualNetworkGatewayConnection resource Updating/Deleting/Failed.
             *
             * @param provisioningState Gets or sets Provisioning state of the VirtualNetworkGatewayConnection resource
             *     Updating/Deleting/Failed.
             * @return the next definition stage.
             */
            WithCreate withProvisioningState(String provisioningState);
        }
    }
    /**
     * Begins update for the VirtualNetworkGatewayConnection resource.
     *
     * @return the stage of resource update.
     */
    VirtualNetworkGatewayConnection.Update update();

    /** The template for VirtualNetworkGatewayConnection update. */
    interface Update
        extends UpdateStages.WithTags,
            UpdateStages.WithEtag,
            UpdateStages.WithVirtualNetworkGateway1,
            UpdateStages.WithVirtualNetworkGateway2,
            UpdateStages.WithLocalNetworkGateway2,
            UpdateStages.WithConnectionType,
            UpdateStages.WithRoutingWeight,
            UpdateStages.WithSharedKey,
            UpdateStages.WithConnectionStatus,
            UpdateStages.WithEgressBytesTransferred,
            UpdateStages.WithIngressBytesTransferred,
            UpdateStages.WithPeer,
            UpdateStages.WithResourceGuid,
            UpdateStages.WithProvisioningState {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        VirtualNetworkGatewayConnection apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        VirtualNetworkGatewayConnection apply(Context context);
    }
    /** The VirtualNetworkGatewayConnection update stages. */
    interface UpdateStages {
        /** The stage of the VirtualNetworkGatewayConnection update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
        /** The stage of the VirtualNetworkGatewayConnection update allowing to specify etag. */
        interface WithEtag {
            /**
             * Specifies the etag property: Gets a unique read-only string that changes whenever the resource is
             * updated.
             *
             * @param etag Gets a unique read-only string that changes whenever the resource is updated.
             * @return the next definition stage.
             */
            Update withEtag(String etag);
        }
        /** The stage of the VirtualNetworkGatewayConnection update allowing to specify virtualNetworkGateway1. */
        interface WithVirtualNetworkGateway1 {
            /**
             * Specifies the virtualNetworkGateway1 property: A common class for general resource information.
             *
             * @param virtualNetworkGateway1 A common class for general resource information.
             * @return the next definition stage.
             */
            Update withVirtualNetworkGateway1(VirtualNetworkGatewayInner virtualNetworkGateway1);
        }
        /** The stage of the VirtualNetworkGatewayConnection update allowing to specify virtualNetworkGateway2. */
        interface WithVirtualNetworkGateway2 {
            /**
             * Specifies the virtualNetworkGateway2 property: A common class for general resource information.
             *
             * @param virtualNetworkGateway2 A common class for general resource information.
             * @return the next definition stage.
             */
            Update withVirtualNetworkGateway2(VirtualNetworkGatewayInner virtualNetworkGateway2);
        }
        /** The stage of the VirtualNetworkGatewayConnection update allowing to specify localNetworkGateway2. */
        interface WithLocalNetworkGateway2 {
            /**
             * Specifies the localNetworkGateway2 property: A common class for general resource information.
             *
             * @param localNetworkGateway2 A common class for general resource information.
             * @return the next definition stage.
             */
            Update withLocalNetworkGateway2(LocalNetworkGatewayInner localNetworkGateway2);
        }
        /** The stage of the VirtualNetworkGatewayConnection update allowing to specify connectionType. */
        interface WithConnectionType {
            /**
             * Specifies the connectionType property: Gateway connection type IPsec/Dedicated/VpnClient/Vnet2Vnet.
             *
             * @param connectionType Gateway connection type IPsec/Dedicated/VpnClient/Vnet2Vnet.
             * @return the next definition stage.
             */
            Update withConnectionType(VirtualNetworkGatewayConnectionType connectionType);
        }
        /** The stage of the VirtualNetworkGatewayConnection update allowing to specify routingWeight. */
        interface WithRoutingWeight {
            /**
             * Specifies the routingWeight property: The Routing weight..
             *
             * @param routingWeight The Routing weight.
             * @return the next definition stage.
             */
            Update withRoutingWeight(Integer routingWeight);
        }
        /** The stage of the VirtualNetworkGatewayConnection update allowing to specify sharedKey. */
        interface WithSharedKey {
            /**
             * Specifies the sharedKey property: The IPsec share key..
             *
             * @param sharedKey The IPsec share key.
             * @return the next definition stage.
             */
            Update withSharedKey(String sharedKey);
        }
        /** The stage of the VirtualNetworkGatewayConnection update allowing to specify connectionStatus. */
        interface WithConnectionStatus {
            /**
             * Specifies the connectionStatus property: Virtual network Gateway connection status.
             *
             * @param connectionStatus Virtual network Gateway connection status.
             * @return the next definition stage.
             */
            Update withConnectionStatus(VirtualNetworkGatewayConnectionStatus connectionStatus);
        }
        /** The stage of the VirtualNetworkGatewayConnection update allowing to specify egressBytesTransferred. */
        interface WithEgressBytesTransferred {
            /**
             * Specifies the egressBytesTransferred property: The Egress Bytes Transferred in this connection.
             *
             * @param egressBytesTransferred The Egress Bytes Transferred in this connection.
             * @return the next definition stage.
             */
            Update withEgressBytesTransferred(Long egressBytesTransferred);
        }
        /** The stage of the VirtualNetworkGatewayConnection update allowing to specify ingressBytesTransferred. */
        interface WithIngressBytesTransferred {
            /**
             * Specifies the ingressBytesTransferred property: The Ingress Bytes Transferred in this connection.
             *
             * @param ingressBytesTransferred The Ingress Bytes Transferred in this connection.
             * @return the next definition stage.
             */
            Update withIngressBytesTransferred(Long ingressBytesTransferred);
        }
        /** The stage of the VirtualNetworkGatewayConnection update allowing to specify peer. */
        interface WithPeer {
            /**
             * Specifies the peer property: The reference to peerings resource..
             *
             * @param peer The reference to peerings resource.
             * @return the next definition stage.
             */
            Update withPeer(SubResource peer);
        }
        /** The stage of the VirtualNetworkGatewayConnection update allowing to specify resourceGuid. */
        interface WithResourceGuid {
            /**
             * Specifies the resourceGuid property: Gets or sets resource guid property of the
             * VirtualNetworkGatewayConnection resource.
             *
             * @param resourceGuid Gets or sets resource guid property of the VirtualNetworkGatewayConnection resource.
             * @return the next definition stage.
             */
            Update withResourceGuid(String resourceGuid);
        }
        /** The stage of the VirtualNetworkGatewayConnection update allowing to specify provisioningState. */
        interface WithProvisioningState {
            /**
             * Specifies the provisioningState property: Gets or sets Provisioning state of the
             * VirtualNetworkGatewayConnection resource Updating/Deleting/Failed.
             *
             * @param provisioningState Gets or sets Provisioning state of the VirtualNetworkGatewayConnection resource
             *     Updating/Deleting/Failed.
             * @return the next definition stage.
             */
            Update withProvisioningState(String provisioningState);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    VirtualNetworkGatewayConnection refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    VirtualNetworkGatewayConnection refresh(Context context);
}
