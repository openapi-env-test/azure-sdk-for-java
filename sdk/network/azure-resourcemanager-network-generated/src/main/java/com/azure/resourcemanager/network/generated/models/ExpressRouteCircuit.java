// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.models;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.network.generated.fluent.models.ExpressRouteCircuitAuthorizationInner;
import com.azure.resourcemanager.network.generated.fluent.models.ExpressRouteCircuitInner;
import com.azure.resourcemanager.network.generated.fluent.models.ExpressRouteCircuitPeeringInner;
import java.util.List;
import java.util.Map;

/** An immutable client-side representation of ExpressRouteCircuit. */
public interface ExpressRouteCircuit {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the sku property: Gets or sets sku.
     *
     * @return the sku value.
     */
    ExpressRouteCircuitSku sku();

    /**
     * Gets the etag property: Gets a unique read-only string that changes whenever the resource is updated.
     *
     * @return the etag value.
     */
    String etag();

    /**
     * Gets the circuitProvisioningState property: Gets or sets CircuitProvisioningState state of the resource.
     *
     * @return the circuitProvisioningState value.
     */
    String circuitProvisioningState();

    /**
     * Gets the serviceProviderProvisioningState property: Gets or sets ServiceProviderProvisioningState state of the
     * resource.
     *
     * @return the serviceProviderProvisioningState value.
     */
    ServiceProviderProvisioningState serviceProviderProvisioningState();

    /**
     * Gets the authorizations property: Gets or sets list of authorizations.
     *
     * @return the authorizations value.
     */
    List<ExpressRouteCircuitAuthorization> authorizations();

    /**
     * Gets the peerings property: Gets or sets list of peerings.
     *
     * @return the peerings value.
     */
    List<ExpressRouteCircuitPeering> peerings();

    /**
     * Gets the serviceKey property: Gets or sets ServiceKey.
     *
     * @return the serviceKey value.
     */
    String serviceKey();

    /**
     * Gets the serviceProviderNotes property: Gets or sets ServiceProviderNotes.
     *
     * @return the serviceProviderNotes value.
     */
    String serviceProviderNotes();

    /**
     * Gets the serviceProviderProperties property: Gets or sets ServiceProviderProperties.
     *
     * @return the serviceProviderProperties value.
     */
    ExpressRouteCircuitServiceProviderProperties serviceProviderProperties();

    /**
     * Gets the provisioningState property: Gets or sets Provisioning state of the PublicIP resource
     * Updating/Deleting/Failed.
     *
     * @return the provisioningState value.
     */
    String provisioningState();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the inner com.azure.resourcemanager.network.generated.fluent.models.ExpressRouteCircuitInner object.
     *
     * @return the inner object.
     */
    ExpressRouteCircuitInner innerModel();

    /** The entirety of the ExpressRouteCircuit definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithResourceGroup,
            DefinitionStages.WithCreate {
    }
    /** The ExpressRouteCircuit definition stages. */
    interface DefinitionStages {
        /** The first stage of the ExpressRouteCircuit definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the ExpressRouteCircuit definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }
        /** The stage of the ExpressRouteCircuit definition allowing to specify parent resource. */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             *
             * @param resourceGroupName The name of the resource group.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceGroup(String resourceGroupName);
        }
        /**
         * The stage of the ExpressRouteCircuit definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags,
                DefinitionStages.WithSku,
                DefinitionStages.WithEtag,
                DefinitionStages.WithCircuitProvisioningState,
                DefinitionStages.WithServiceProviderProvisioningState,
                DefinitionStages.WithAuthorizations,
                DefinitionStages.WithPeerings,
                DefinitionStages.WithServiceKey,
                DefinitionStages.WithServiceProviderNotes,
                DefinitionStages.WithServiceProviderProperties,
                DefinitionStages.WithProvisioningState {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            ExpressRouteCircuit create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            ExpressRouteCircuit create(Context context);
        }
        /** The stage of the ExpressRouteCircuit definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the ExpressRouteCircuit definition allowing to specify sku. */
        interface WithSku {
            /**
             * Specifies the sku property: Gets or sets sku.
             *
             * @param sku Gets or sets sku.
             * @return the next definition stage.
             */
            WithCreate withSku(ExpressRouteCircuitSku sku);
        }
        /** The stage of the ExpressRouteCircuit definition allowing to specify etag. */
        interface WithEtag {
            /**
             * Specifies the etag property: Gets a unique read-only string that changes whenever the resource is
             * updated.
             *
             * @param etag Gets a unique read-only string that changes whenever the resource is updated.
             * @return the next definition stage.
             */
            WithCreate withEtag(String etag);
        }
        /** The stage of the ExpressRouteCircuit definition allowing to specify circuitProvisioningState. */
        interface WithCircuitProvisioningState {
            /**
             * Specifies the circuitProvisioningState property: Gets or sets CircuitProvisioningState state of the
             * resource .
             *
             * @param circuitProvisioningState Gets or sets CircuitProvisioningState state of the resource.
             * @return the next definition stage.
             */
            WithCreate withCircuitProvisioningState(String circuitProvisioningState);
        }
        /** The stage of the ExpressRouteCircuit definition allowing to specify serviceProviderProvisioningState. */
        interface WithServiceProviderProvisioningState {
            /**
             * Specifies the serviceProviderProvisioningState property: Gets or sets ServiceProviderProvisioningState
             * state of the resource .
             *
             * @param serviceProviderProvisioningState Gets or sets ServiceProviderProvisioningState state of the
             *     resource.
             * @return the next definition stage.
             */
            WithCreate withServiceProviderProvisioningState(
                ServiceProviderProvisioningState serviceProviderProvisioningState);
        }
        /** The stage of the ExpressRouteCircuit definition allowing to specify authorizations. */
        interface WithAuthorizations {
            /**
             * Specifies the authorizations property: Gets or sets list of authorizations.
             *
             * @param authorizations Gets or sets list of authorizations.
             * @return the next definition stage.
             */
            WithCreate withAuthorizations(List<ExpressRouteCircuitAuthorizationInner> authorizations);
        }
        /** The stage of the ExpressRouteCircuit definition allowing to specify peerings. */
        interface WithPeerings {
            /**
             * Specifies the peerings property: Gets or sets list of peerings.
             *
             * @param peerings Gets or sets list of peerings.
             * @return the next definition stage.
             */
            WithCreate withPeerings(List<ExpressRouteCircuitPeeringInner> peerings);
        }
        /** The stage of the ExpressRouteCircuit definition allowing to specify serviceKey. */
        interface WithServiceKey {
            /**
             * Specifies the serviceKey property: Gets or sets ServiceKey.
             *
             * @param serviceKey Gets or sets ServiceKey.
             * @return the next definition stage.
             */
            WithCreate withServiceKey(String serviceKey);
        }
        /** The stage of the ExpressRouteCircuit definition allowing to specify serviceProviderNotes. */
        interface WithServiceProviderNotes {
            /**
             * Specifies the serviceProviderNotes property: Gets or sets ServiceProviderNotes.
             *
             * @param serviceProviderNotes Gets or sets ServiceProviderNotes.
             * @return the next definition stage.
             */
            WithCreate withServiceProviderNotes(String serviceProviderNotes);
        }
        /** The stage of the ExpressRouteCircuit definition allowing to specify serviceProviderProperties. */
        interface WithServiceProviderProperties {
            /**
             * Specifies the serviceProviderProperties property: Gets or sets ServiceProviderProperties.
             *
             * @param serviceProviderProperties Gets or sets ServiceProviderProperties.
             * @return the next definition stage.
             */
            WithCreate withServiceProviderProperties(
                ExpressRouteCircuitServiceProviderProperties serviceProviderProperties);
        }
        /** The stage of the ExpressRouteCircuit definition allowing to specify provisioningState. */
        interface WithProvisioningState {
            /**
             * Specifies the provisioningState property: Gets or sets Provisioning state of the PublicIP resource
             * Updating/Deleting/Failed.
             *
             * @param provisioningState Gets or sets Provisioning state of the PublicIP resource
             *     Updating/Deleting/Failed.
             * @return the next definition stage.
             */
            WithCreate withProvisioningState(String provisioningState);
        }
    }
    /**
     * Begins update for the ExpressRouteCircuit resource.
     *
     * @return the stage of resource update.
     */
    ExpressRouteCircuit.Update update();

    /** The template for ExpressRouteCircuit update. */
    interface Update
        extends UpdateStages.WithTags,
            UpdateStages.WithSku,
            UpdateStages.WithEtag,
            UpdateStages.WithCircuitProvisioningState,
            UpdateStages.WithServiceProviderProvisioningState,
            UpdateStages.WithAuthorizations,
            UpdateStages.WithPeerings,
            UpdateStages.WithServiceKey,
            UpdateStages.WithServiceProviderNotes,
            UpdateStages.WithServiceProviderProperties,
            UpdateStages.WithProvisioningState {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        ExpressRouteCircuit apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        ExpressRouteCircuit apply(Context context);
    }
    /** The ExpressRouteCircuit update stages. */
    interface UpdateStages {
        /** The stage of the ExpressRouteCircuit update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
        /** The stage of the ExpressRouteCircuit update allowing to specify sku. */
        interface WithSku {
            /**
             * Specifies the sku property: Gets or sets sku.
             *
             * @param sku Gets or sets sku.
             * @return the next definition stage.
             */
            Update withSku(ExpressRouteCircuitSku sku);
        }
        /** The stage of the ExpressRouteCircuit update allowing to specify etag. */
        interface WithEtag {
            /**
             * Specifies the etag property: Gets a unique read-only string that changes whenever the resource is
             * updated.
             *
             * @param etag Gets a unique read-only string that changes whenever the resource is updated.
             * @return the next definition stage.
             */
            Update withEtag(String etag);
        }
        /** The stage of the ExpressRouteCircuit update allowing to specify circuitProvisioningState. */
        interface WithCircuitProvisioningState {
            /**
             * Specifies the circuitProvisioningState property: Gets or sets CircuitProvisioningState state of the
             * resource .
             *
             * @param circuitProvisioningState Gets or sets CircuitProvisioningState state of the resource.
             * @return the next definition stage.
             */
            Update withCircuitProvisioningState(String circuitProvisioningState);
        }
        /** The stage of the ExpressRouteCircuit update allowing to specify serviceProviderProvisioningState. */
        interface WithServiceProviderProvisioningState {
            /**
             * Specifies the serviceProviderProvisioningState property: Gets or sets ServiceProviderProvisioningState
             * state of the resource .
             *
             * @param serviceProviderProvisioningState Gets or sets ServiceProviderProvisioningState state of the
             *     resource.
             * @return the next definition stage.
             */
            Update withServiceProviderProvisioningState(
                ServiceProviderProvisioningState serviceProviderProvisioningState);
        }
        /** The stage of the ExpressRouteCircuit update allowing to specify authorizations. */
        interface WithAuthorizations {
            /**
             * Specifies the authorizations property: Gets or sets list of authorizations.
             *
             * @param authorizations Gets or sets list of authorizations.
             * @return the next definition stage.
             */
            Update withAuthorizations(List<ExpressRouteCircuitAuthorizationInner> authorizations);
        }
        /** The stage of the ExpressRouteCircuit update allowing to specify peerings. */
        interface WithPeerings {
            /**
             * Specifies the peerings property: Gets or sets list of peerings.
             *
             * @param peerings Gets or sets list of peerings.
             * @return the next definition stage.
             */
            Update withPeerings(List<ExpressRouteCircuitPeeringInner> peerings);
        }
        /** The stage of the ExpressRouteCircuit update allowing to specify serviceKey. */
        interface WithServiceKey {
            /**
             * Specifies the serviceKey property: Gets or sets ServiceKey.
             *
             * @param serviceKey Gets or sets ServiceKey.
             * @return the next definition stage.
             */
            Update withServiceKey(String serviceKey);
        }
        /** The stage of the ExpressRouteCircuit update allowing to specify serviceProviderNotes. */
        interface WithServiceProviderNotes {
            /**
             * Specifies the serviceProviderNotes property: Gets or sets ServiceProviderNotes.
             *
             * @param serviceProviderNotes Gets or sets ServiceProviderNotes.
             * @return the next definition stage.
             */
            Update withServiceProviderNotes(String serviceProviderNotes);
        }
        /** The stage of the ExpressRouteCircuit update allowing to specify serviceProviderProperties. */
        interface WithServiceProviderProperties {
            /**
             * Specifies the serviceProviderProperties property: Gets or sets ServiceProviderProperties.
             *
             * @param serviceProviderProperties Gets or sets ServiceProviderProperties.
             * @return the next definition stage.
             */
            Update withServiceProviderProperties(
                ExpressRouteCircuitServiceProviderProperties serviceProviderProperties);
        }
        /** The stage of the ExpressRouteCircuit update allowing to specify provisioningState. */
        interface WithProvisioningState {
            /**
             * Specifies the provisioningState property: Gets or sets Provisioning state of the PublicIP resource
             * Updating/Deleting/Failed.
             *
             * @param provisioningState Gets or sets Provisioning state of the PublicIP resource
             *     Updating/Deleting/Failed.
             * @return the next definition stage.
             */
            Update withProvisioningState(String provisioningState);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    ExpressRouteCircuit refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    ExpressRouteCircuit refresh(Context context);
}
