// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SubResource;
import com.azure.core.util.Context;
import com.azure.resourcemanager.network.generated.NetworkManager;
import com.azure.resourcemanager.network.generated.fluent.models.LocalNetworkGatewayInner;
import com.azure.resourcemanager.network.generated.fluent.models.VirtualNetworkGatewayConnectionInner;
import com.azure.resourcemanager.network.generated.fluent.models.VirtualNetworkGatewayInner;
import com.azure.resourcemanager.network.generated.models.LocalNetworkGateway;
import com.azure.resourcemanager.network.generated.models.VirtualNetworkGateway;
import com.azure.resourcemanager.network.generated.models.VirtualNetworkGatewayConnection;
import com.azure.resourcemanager.network.generated.models.VirtualNetworkGatewayConnectionStatus;
import com.azure.resourcemanager.network.generated.models.VirtualNetworkGatewayConnectionType;
import java.util.Collections;
import java.util.Map;

public final class VirtualNetworkGatewayConnectionImpl
    implements VirtualNetworkGatewayConnection,
        VirtualNetworkGatewayConnection.Definition,
        VirtualNetworkGatewayConnection.Update {
    private VirtualNetworkGatewayConnectionInner innerObject;

    private final NetworkManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public String etag() {
        return this.innerModel().etag();
    }

    public VirtualNetworkGateway virtualNetworkGateway1() {
        VirtualNetworkGatewayInner inner = this.innerModel().virtualNetworkGateway1();
        if (inner != null) {
            return new VirtualNetworkGatewayImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public VirtualNetworkGateway virtualNetworkGateway2() {
        VirtualNetworkGatewayInner inner = this.innerModel().virtualNetworkGateway2();
        if (inner != null) {
            return new VirtualNetworkGatewayImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public LocalNetworkGateway localNetworkGateway2() {
        LocalNetworkGatewayInner inner = this.innerModel().localNetworkGateway2();
        if (inner != null) {
            return new LocalNetworkGatewayImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public VirtualNetworkGatewayConnectionType connectionType() {
        return this.innerModel().connectionType();
    }

    public Integer routingWeight() {
        return this.innerModel().routingWeight();
    }

    public String sharedKey() {
        return this.innerModel().sharedKey();
    }

    public VirtualNetworkGatewayConnectionStatus connectionStatus() {
        return this.innerModel().connectionStatus();
    }

    public Long egressBytesTransferred() {
        return this.innerModel().egressBytesTransferred();
    }

    public Long ingressBytesTransferred() {
        return this.innerModel().ingressBytesTransferred();
    }

    public SubResource peer() {
        return this.innerModel().peer();
    }

    public String resourceGuid() {
        return this.innerModel().resourceGuid();
    }

    public String provisioningState() {
        return this.innerModel().provisioningState();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public VirtualNetworkGatewayConnectionInner innerModel() {
        return this.innerObject;
    }

    private NetworkManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String virtualNetworkGatewayConnectionName;

    public VirtualNetworkGatewayConnectionImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public VirtualNetworkGatewayConnection create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getVirtualNetworkGatewayConnections()
                .createOrUpdate(
                    resourceGroupName, virtualNetworkGatewayConnectionName, this.innerModel(), Context.NONE);
        return this;
    }

    public VirtualNetworkGatewayConnection create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getVirtualNetworkGatewayConnections()
                .createOrUpdate(resourceGroupName, virtualNetworkGatewayConnectionName, this.innerModel(), context);
        return this;
    }

    VirtualNetworkGatewayConnectionImpl(String name, NetworkManager serviceManager) {
        this.innerObject = new VirtualNetworkGatewayConnectionInner();
        this.serviceManager = serviceManager;
        this.virtualNetworkGatewayConnectionName = name;
    }

    public VirtualNetworkGatewayConnectionImpl update() {
        return this;
    }

    public VirtualNetworkGatewayConnection apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getVirtualNetworkGatewayConnections()
                .createOrUpdate(
                    resourceGroupName, virtualNetworkGatewayConnectionName, this.innerModel(), Context.NONE);
        return this;
    }

    public VirtualNetworkGatewayConnection apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getVirtualNetworkGatewayConnections()
                .createOrUpdate(resourceGroupName, virtualNetworkGatewayConnectionName, this.innerModel(), context);
        return this;
    }

    VirtualNetworkGatewayConnectionImpl(
        VirtualNetworkGatewayConnectionInner innerObject, NetworkManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.virtualNetworkGatewayConnectionName = Utils.getValueFromIdByName(innerObject.id(), "connections");
    }

    public VirtualNetworkGatewayConnection refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getVirtualNetworkGatewayConnections()
                .getByResourceGroupWithResponse(resourceGroupName, virtualNetworkGatewayConnectionName, Context.NONE)
                .getValue();
        return this;
    }

    public VirtualNetworkGatewayConnection refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getVirtualNetworkGatewayConnections()
                .getByResourceGroupWithResponse(resourceGroupName, virtualNetworkGatewayConnectionName, context)
                .getValue();
        return this;
    }

    public VirtualNetworkGatewayConnectionImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public VirtualNetworkGatewayConnectionImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public VirtualNetworkGatewayConnectionImpl withTags(Map<String, String> tags) {
        this.innerModel().withTags(tags);
        return this;
    }

    public VirtualNetworkGatewayConnectionImpl withEtag(String etag) {
        this.innerModel().withEtag(etag);
        return this;
    }

    public VirtualNetworkGatewayConnectionImpl withVirtualNetworkGateway1(
        VirtualNetworkGatewayInner virtualNetworkGateway1) {
        this.innerModel().withVirtualNetworkGateway1(virtualNetworkGateway1);
        return this;
    }

    public VirtualNetworkGatewayConnectionImpl withVirtualNetworkGateway2(
        VirtualNetworkGatewayInner virtualNetworkGateway2) {
        this.innerModel().withVirtualNetworkGateway2(virtualNetworkGateway2);
        return this;
    }

    public VirtualNetworkGatewayConnectionImpl withLocalNetworkGateway2(LocalNetworkGatewayInner localNetworkGateway2) {
        this.innerModel().withLocalNetworkGateway2(localNetworkGateway2);
        return this;
    }

    public VirtualNetworkGatewayConnectionImpl withConnectionType(VirtualNetworkGatewayConnectionType connectionType) {
        this.innerModel().withConnectionType(connectionType);
        return this;
    }

    public VirtualNetworkGatewayConnectionImpl withRoutingWeight(Integer routingWeight) {
        this.innerModel().withRoutingWeight(routingWeight);
        return this;
    }

    public VirtualNetworkGatewayConnectionImpl withSharedKey(String sharedKey) {
        this.innerModel().withSharedKey(sharedKey);
        return this;
    }

    public VirtualNetworkGatewayConnectionImpl withConnectionStatus(
        VirtualNetworkGatewayConnectionStatus connectionStatus) {
        this.innerModel().withConnectionStatus(connectionStatus);
        return this;
    }

    public VirtualNetworkGatewayConnectionImpl withEgressBytesTransferred(Long egressBytesTransferred) {
        this.innerModel().withEgressBytesTransferred(egressBytesTransferred);
        return this;
    }

    public VirtualNetworkGatewayConnectionImpl withIngressBytesTransferred(Long ingressBytesTransferred) {
        this.innerModel().withIngressBytesTransferred(ingressBytesTransferred);
        return this;
    }

    public VirtualNetworkGatewayConnectionImpl withPeer(SubResource peer) {
        this.innerModel().withPeer(peer);
        return this;
    }

    public VirtualNetworkGatewayConnectionImpl withResourceGuid(String resourceGuid) {
        this.innerModel().withResourceGuid(resourceGuid);
        return this;
    }

    public VirtualNetworkGatewayConnectionImpl withProvisioningState(String provisioningState) {
        this.innerModel().withProvisioningState(provisioningState);
        return this;
    }
}
