// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.implementation;

import com.azure.resourcemanager.network.generated.NetworkManager;
import com.azure.resourcemanager.network.generated.fluent.models.Ipv6ExpressRouteCircuitPeeringConfigInner;
import com.azure.resourcemanager.network.generated.fluent.models.RouteFilterInner;
import com.azure.resourcemanager.network.generated.models.ExpressRouteCircuitPeeringConfig;
import com.azure.resourcemanager.network.generated.models.ExpressRouteCircuitPeeringState;
import com.azure.resourcemanager.network.generated.models.Ipv6ExpressRouteCircuitPeeringConfig;
import com.azure.resourcemanager.network.generated.models.RouteFilter;

public final class Ipv6ExpressRouteCircuitPeeringConfigImpl implements Ipv6ExpressRouteCircuitPeeringConfig {
    private Ipv6ExpressRouteCircuitPeeringConfigInner innerObject;

    private final NetworkManager serviceManager;

    Ipv6ExpressRouteCircuitPeeringConfigImpl(
        Ipv6ExpressRouteCircuitPeeringConfigInner innerObject, NetworkManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String primaryPeerAddressPrefix() {
        return this.innerModel().primaryPeerAddressPrefix();
    }

    public String secondaryPeerAddressPrefix() {
        return this.innerModel().secondaryPeerAddressPrefix();
    }

    public ExpressRouteCircuitPeeringConfig microsoftPeeringConfig() {
        return this.innerModel().microsoftPeeringConfig();
    }

    public RouteFilter routeFilter() {
        RouteFilterInner inner = this.innerModel().routeFilter();
        if (inner != null) {
            return new RouteFilterImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public ExpressRouteCircuitPeeringState state() {
        return this.innerModel().state();
    }

    public Ipv6ExpressRouteCircuitPeeringConfigInner innerModel() {
        return this.innerObject;
    }

    private NetworkManager manager() {
        return this.serviceManager;
    }
}
