// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Vpn Client Parameters for package generation. */
@Fluent
public final class VpnClientParameters {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(VpnClientParameters.class);

    /*
     * VPN client Processor Architecture. Possible values are: 'AMD64' and
     * 'X86'.
     */
    @JsonProperty(value = "processorArchitecture", required = true)
    private ProcessorArchitecture processorArchitecture;

    /**
     * Get the processorArchitecture property: VPN client Processor Architecture. Possible values are: 'AMD64' and
     * 'X86'.
     *
     * @return the processorArchitecture value.
     */
    public ProcessorArchitecture processorArchitecture() {
        return this.processorArchitecture;
    }

    /**
     * Set the processorArchitecture property: VPN client Processor Architecture. Possible values are: 'AMD64' and
     * 'X86'.
     *
     * @param processorArchitecture the processorArchitecture value to set.
     * @return the VpnClientParameters object itself.
     */
    public VpnClientParameters withProcessorArchitecture(ProcessorArchitecture processorArchitecture) {
        this.processorArchitecture = processorArchitecture;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (processorArchitecture() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property processorArchitecture in model VpnClientParameters"));
        }
    }
}
