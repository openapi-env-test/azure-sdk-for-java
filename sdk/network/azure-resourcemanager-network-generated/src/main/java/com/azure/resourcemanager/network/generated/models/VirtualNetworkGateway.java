// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.models;

import com.azure.core.management.Region;
import com.azure.core.management.SubResource;
import com.azure.core.util.Context;
import com.azure.resourcemanager.network.generated.fluent.models.VirtualNetworkGatewayInner;
import java.util.List;
import java.util.Map;

/** An immutable client-side representation of VirtualNetworkGateway. */
public interface VirtualNetworkGateway {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the etag property: Gets a unique read-only string that changes whenever the resource is updated.
     *
     * @return the etag value.
     */
    String etag();

    /**
     * Gets the ipConfigurations property: IpConfigurations for Virtual network gateway.
     *
     * @return the ipConfigurations value.
     */
    List<VirtualNetworkGatewayIpConfiguration> ipConfigurations();

    /**
     * Gets the gatewayType property: The type of this virtual network gateway.
     *
     * @return the gatewayType value.
     */
    VirtualNetworkGatewayType gatewayType();

    /**
     * Gets the vpnType property: The type of this virtual network gateway.
     *
     * @return the vpnType value.
     */
    VpnType vpnType();

    /**
     * Gets the enableBgp property: EnableBgp Flag.
     *
     * @return the enableBgp value.
     */
    Boolean enableBgp();

    /**
     * Gets the gatewayDefaultSite property: Gets or sets the reference of the LocalNetworkGateway resource which
     * represents Local network site having default routes. Assign Null value in case of removing existing default site
     * setting.
     *
     * @return the gatewayDefaultSite value.
     */
    SubResource gatewayDefaultSite();

    /**
     * Gets the resourceGuid property: Gets or sets resource guid property of the VirtualNetworkGateway resource.
     *
     * @return the resourceGuid value.
     */
    String resourceGuid();

    /**
     * Gets the provisioningState property: Gets or sets Provisioning state of the VirtualNetworkGateway resource
     * Updating/Deleting/Failed.
     *
     * @return the provisioningState value.
     */
    String provisioningState();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the inner com.azure.resourcemanager.network.generated.fluent.models.VirtualNetworkGatewayInner object.
     *
     * @return the inner object.
     */
    VirtualNetworkGatewayInner innerModel();

    /** The entirety of the VirtualNetworkGateway definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithResourceGroup,
            DefinitionStages.WithCreate {
    }
    /** The VirtualNetworkGateway definition stages. */
    interface DefinitionStages {
        /** The first stage of the VirtualNetworkGateway definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the VirtualNetworkGateway definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }
        /** The stage of the VirtualNetworkGateway definition allowing to specify parent resource. */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             *
             * @param resourceGroupName The name of the resource group.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceGroup(String resourceGroupName);
        }
        /**
         * The stage of the VirtualNetworkGateway definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags,
                DefinitionStages.WithEtag,
                DefinitionStages.WithIpConfigurations,
                DefinitionStages.WithGatewayType,
                DefinitionStages.WithVpnType,
                DefinitionStages.WithEnableBgp,
                DefinitionStages.WithGatewayDefaultSite,
                DefinitionStages.WithResourceGuid,
                DefinitionStages.WithProvisioningState {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            VirtualNetworkGateway create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            VirtualNetworkGateway create(Context context);
        }
        /** The stage of the VirtualNetworkGateway definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the VirtualNetworkGateway definition allowing to specify etag. */
        interface WithEtag {
            /**
             * Specifies the etag property: Gets a unique read-only string that changes whenever the resource is
             * updated.
             *
             * @param etag Gets a unique read-only string that changes whenever the resource is updated.
             * @return the next definition stage.
             */
            WithCreate withEtag(String etag);
        }
        /** The stage of the VirtualNetworkGateway definition allowing to specify ipConfigurations. */
        interface WithIpConfigurations {
            /**
             * Specifies the ipConfigurations property: IpConfigurations for Virtual network gateway..
             *
             * @param ipConfigurations IpConfigurations for Virtual network gateway.
             * @return the next definition stage.
             */
            WithCreate withIpConfigurations(List<VirtualNetworkGatewayIpConfiguration> ipConfigurations);
        }
        /** The stage of the VirtualNetworkGateway definition allowing to specify gatewayType. */
        interface WithGatewayType {
            /**
             * Specifies the gatewayType property: The type of this virtual network gateway..
             *
             * @param gatewayType The type of this virtual network gateway.
             * @return the next definition stage.
             */
            WithCreate withGatewayType(VirtualNetworkGatewayType gatewayType);
        }
        /** The stage of the VirtualNetworkGateway definition allowing to specify vpnType. */
        interface WithVpnType {
            /**
             * Specifies the vpnType property: The type of this virtual network gateway..
             *
             * @param vpnType The type of this virtual network gateway.
             * @return the next definition stage.
             */
            WithCreate withVpnType(VpnType vpnType);
        }
        /** The stage of the VirtualNetworkGateway definition allowing to specify enableBgp. */
        interface WithEnableBgp {
            /**
             * Specifies the enableBgp property: EnableBgp Flag.
             *
             * @param enableBgp EnableBgp Flag.
             * @return the next definition stage.
             */
            WithCreate withEnableBgp(Boolean enableBgp);
        }
        /** The stage of the VirtualNetworkGateway definition allowing to specify gatewayDefaultSite. */
        interface WithGatewayDefaultSite {
            /**
             * Specifies the gatewayDefaultSite property: Gets or sets the reference of the LocalNetworkGateway resource
             * which represents Local network site having default routes. Assign Null value in case of removing existing
             * default site setting..
             *
             * @param gatewayDefaultSite Gets or sets the reference of the LocalNetworkGateway resource which represents
             *     Local network site having default routes. Assign Null value in case of removing existing default site
             *     setting.
             * @return the next definition stage.
             */
            WithCreate withGatewayDefaultSite(SubResource gatewayDefaultSite);
        }
        /** The stage of the VirtualNetworkGateway definition allowing to specify resourceGuid. */
        interface WithResourceGuid {
            /**
             * Specifies the resourceGuid property: Gets or sets resource guid property of the VirtualNetworkGateway
             * resource.
             *
             * @param resourceGuid Gets or sets resource guid property of the VirtualNetworkGateway resource.
             * @return the next definition stage.
             */
            WithCreate withResourceGuid(String resourceGuid);
        }
        /** The stage of the VirtualNetworkGateway definition allowing to specify provisioningState. */
        interface WithProvisioningState {
            /**
             * Specifies the provisioningState property: Gets or sets Provisioning state of the VirtualNetworkGateway
             * resource Updating/Deleting/Failed.
             *
             * @param provisioningState Gets or sets Provisioning state of the VirtualNetworkGateway resource
             *     Updating/Deleting/Failed.
             * @return the next definition stage.
             */
            WithCreate withProvisioningState(String provisioningState);
        }
    }
    /**
     * Begins update for the VirtualNetworkGateway resource.
     *
     * @return the stage of resource update.
     */
    VirtualNetworkGateway.Update update();

    /** The template for VirtualNetworkGateway update. */
    interface Update
        extends UpdateStages.WithTags,
            UpdateStages.WithEtag,
            UpdateStages.WithIpConfigurations,
            UpdateStages.WithGatewayType,
            UpdateStages.WithVpnType,
            UpdateStages.WithEnableBgp,
            UpdateStages.WithGatewayDefaultSite,
            UpdateStages.WithResourceGuid,
            UpdateStages.WithProvisioningState {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        VirtualNetworkGateway apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        VirtualNetworkGateway apply(Context context);
    }
    /** The VirtualNetworkGateway update stages. */
    interface UpdateStages {
        /** The stage of the VirtualNetworkGateway update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
        /** The stage of the VirtualNetworkGateway update allowing to specify etag. */
        interface WithEtag {
            /**
             * Specifies the etag property: Gets a unique read-only string that changes whenever the resource is
             * updated.
             *
             * @param etag Gets a unique read-only string that changes whenever the resource is updated.
             * @return the next definition stage.
             */
            Update withEtag(String etag);
        }
        /** The stage of the VirtualNetworkGateway update allowing to specify ipConfigurations. */
        interface WithIpConfigurations {
            /**
             * Specifies the ipConfigurations property: IpConfigurations for Virtual network gateway..
             *
             * @param ipConfigurations IpConfigurations for Virtual network gateway.
             * @return the next definition stage.
             */
            Update withIpConfigurations(List<VirtualNetworkGatewayIpConfiguration> ipConfigurations);
        }
        /** The stage of the VirtualNetworkGateway update allowing to specify gatewayType. */
        interface WithGatewayType {
            /**
             * Specifies the gatewayType property: The type of this virtual network gateway..
             *
             * @param gatewayType The type of this virtual network gateway.
             * @return the next definition stage.
             */
            Update withGatewayType(VirtualNetworkGatewayType gatewayType);
        }
        /** The stage of the VirtualNetworkGateway update allowing to specify vpnType. */
        interface WithVpnType {
            /**
             * Specifies the vpnType property: The type of this virtual network gateway..
             *
             * @param vpnType The type of this virtual network gateway.
             * @return the next definition stage.
             */
            Update withVpnType(VpnType vpnType);
        }
        /** The stage of the VirtualNetworkGateway update allowing to specify enableBgp. */
        interface WithEnableBgp {
            /**
             * Specifies the enableBgp property: EnableBgp Flag.
             *
             * @param enableBgp EnableBgp Flag.
             * @return the next definition stage.
             */
            Update withEnableBgp(Boolean enableBgp);
        }
        /** The stage of the VirtualNetworkGateway update allowing to specify gatewayDefaultSite. */
        interface WithGatewayDefaultSite {
            /**
             * Specifies the gatewayDefaultSite property: Gets or sets the reference of the LocalNetworkGateway resource
             * which represents Local network site having default routes. Assign Null value in case of removing existing
             * default site setting..
             *
             * @param gatewayDefaultSite Gets or sets the reference of the LocalNetworkGateway resource which represents
             *     Local network site having default routes. Assign Null value in case of removing existing default site
             *     setting.
             * @return the next definition stage.
             */
            Update withGatewayDefaultSite(SubResource gatewayDefaultSite);
        }
        /** The stage of the VirtualNetworkGateway update allowing to specify resourceGuid. */
        interface WithResourceGuid {
            /**
             * Specifies the resourceGuid property: Gets or sets resource guid property of the VirtualNetworkGateway
             * resource.
             *
             * @param resourceGuid Gets or sets resource guid property of the VirtualNetworkGateway resource.
             * @return the next definition stage.
             */
            Update withResourceGuid(String resourceGuid);
        }
        /** The stage of the VirtualNetworkGateway update allowing to specify provisioningState. */
        interface WithProvisioningState {
            /**
             * Specifies the provisioningState property: Gets or sets Provisioning state of the VirtualNetworkGateway
             * resource Updating/Deleting/Failed.
             *
             * @param provisioningState Gets or sets Provisioning state of the VirtualNetworkGateway resource
             *     Updating/Deleting/Failed.
             * @return the next definition stage.
             */
            Update withProvisioningState(String provisioningState);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    VirtualNetworkGateway refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    VirtualNetworkGateway refresh(Context context);

    /**
     * The Reset VirtualNetworkGateway operation resets the primary of the virtual network gateway in the specified
     * resource group through Network resource provider.
     *
     * @param parameters Parameters supplied to the Begin Reset Virtual Network Gateway operation through Network
     *     resource provider.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a common class for general resource information.
     */
    VirtualNetworkGateway reset(VirtualNetworkGatewayInner parameters);

    /**
     * The Reset VirtualNetworkGateway operation resets the primary of the virtual network gateway in the specified
     * resource group through Network resource provider.
     *
     * @param parameters Parameters supplied to the Begin Reset Virtual Network Gateway operation through Network
     *     resource provider.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a common class for general resource information.
     */
    VirtualNetworkGateway reset(VirtualNetworkGatewayInner parameters, Context context);
}
