// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.network.generated.NetworkManager;
import com.azure.resourcemanager.network.generated.fluent.models.FirewallPolicyRuleGroupInner;
import com.azure.resourcemanager.network.generated.models.FirewallPolicyRule;
import com.azure.resourcemanager.network.generated.models.FirewallPolicyRuleGroup;
import com.azure.resourcemanager.network.generated.models.ProvisioningState;
import java.util.Collections;
import java.util.List;

public final class FirewallPolicyRuleGroupImpl
    implements FirewallPolicyRuleGroup, FirewallPolicyRuleGroup.Definition, FirewallPolicyRuleGroup.Update {
    private FirewallPolicyRuleGroupInner innerObject;

    private final NetworkManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String etag() {
        return this.innerModel().etag();
    }

    public String type() {
        return this.innerModel().type();
    }

    public Integer priority() {
        return this.innerModel().priority();
    }

    public List<FirewallPolicyRule> rules() {
        List<FirewallPolicyRule> inner = this.innerModel().rules();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public FirewallPolicyRuleGroupInner innerModel() {
        return this.innerObject;
    }

    private NetworkManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String firewallPolicyName;

    private String ruleGroupName;

    public FirewallPolicyRuleGroupImpl withExistingFirewallPolicy(String resourceGroupName, String firewallPolicyName) {
        this.resourceGroupName = resourceGroupName;
        this.firewallPolicyName = firewallPolicyName;
        return this;
    }

    public FirewallPolicyRuleGroup create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getFirewallPolicyRuleGroups()
                .createOrUpdate(resourceGroupName, firewallPolicyName, ruleGroupName, this.innerModel(), Context.NONE);
        return this;
    }

    public FirewallPolicyRuleGroup create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getFirewallPolicyRuleGroups()
                .createOrUpdate(resourceGroupName, firewallPolicyName, ruleGroupName, this.innerModel(), context);
        return this;
    }

    FirewallPolicyRuleGroupImpl(String name, NetworkManager serviceManager) {
        this.innerObject = new FirewallPolicyRuleGroupInner();
        this.serviceManager = serviceManager;
        this.ruleGroupName = name;
    }

    public FirewallPolicyRuleGroupImpl update() {
        return this;
    }

    public FirewallPolicyRuleGroup apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getFirewallPolicyRuleGroups()
                .createOrUpdate(resourceGroupName, firewallPolicyName, ruleGroupName, this.innerModel(), Context.NONE);
        return this;
    }

    public FirewallPolicyRuleGroup apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getFirewallPolicyRuleGroups()
                .createOrUpdate(resourceGroupName, firewallPolicyName, ruleGroupName, this.innerModel(), context);
        return this;
    }

    FirewallPolicyRuleGroupImpl(FirewallPolicyRuleGroupInner innerObject, NetworkManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.firewallPolicyName = Utils.getValueFromIdByName(innerObject.id(), "firewallPolicies");
        this.ruleGroupName = Utils.getValueFromIdByName(innerObject.id(), "ruleGroups");
    }

    public FirewallPolicyRuleGroup refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getFirewallPolicyRuleGroups()
                .getWithResponse(resourceGroupName, firewallPolicyName, ruleGroupName, Context.NONE)
                .getValue();
        return this;
    }

    public FirewallPolicyRuleGroup refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getFirewallPolicyRuleGroups()
                .getWithResponse(resourceGroupName, firewallPolicyName, ruleGroupName, context)
                .getValue();
        return this;
    }

    public FirewallPolicyRuleGroupImpl withName(String name) {
        this.innerModel().withName(name);
        return this;
    }

    public FirewallPolicyRuleGroupImpl withPriority(Integer priority) {
        this.innerModel().withPriority(priority);
        return this;
    }

    public FirewallPolicyRuleGroupImpl withRules(List<FirewallPolicyRule> rules) {
        this.innerModel().withRules(rules);
        return this;
    }
}
