// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.dataprotection.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.dataprotection.fluent.models.BackupInstanceResourceInner;
import com.azure.resourcemanager.dataprotection.models.AzureBackupRehydrationRequest;
import com.azure.resourcemanager.dataprotection.models.AzureBackupRestoreRequest;
import com.azure.resourcemanager.dataprotection.models.BackupInstanceResource;
import com.azure.resourcemanager.dataprotection.models.CurrentProtectionState;
import com.azure.resourcemanager.dataprotection.models.Datasource;
import com.azure.resourcemanager.dataprotection.models.DatasourceSet;
import com.azure.resourcemanager.dataprotection.models.OperationJobExtendedInfo;
import com.azure.resourcemanager.dataprotection.models.PolicyInfo;
import com.azure.resourcemanager.dataprotection.models.ProtectionStatusDetails;
import com.azure.resourcemanager.dataprotection.models.TriggerBackupRequest;
import com.azure.resourcemanager.dataprotection.models.UserFacingError;
import com.azure.resourcemanager.dataprotection.models.ValidateRestoreRequestObject;

public final class BackupInstanceResourceImpl
    implements BackupInstanceResource, BackupInstanceResource.Definition, BackupInstanceResource.Update {
    private BackupInstanceResourceInner innerObject;

    private final com.azure.resourcemanager.dataprotection.DataProtectionManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String friendlyName() {
        return this.innerModel().friendlyName();
    }

    public Datasource dataSourceInfo() {
        return this.innerModel().dataSourceInfo();
    }

    public DatasourceSet dataSourceSetInfo() {
        return this.innerModel().dataSourceSetInfo();
    }

    public PolicyInfo policyInfo() {
        return this.innerModel().policyInfo();
    }

    public ProtectionStatusDetails protectionStatus() {
        return this.innerModel().protectionStatus();
    }

    public CurrentProtectionState currentProtectionState() {
        return this.innerModel().currentProtectionState();
    }

    public UserFacingError protectionErrorDetails() {
        return this.innerModel().protectionErrorDetails();
    }

    public String provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String objectType() {
        return this.innerModel().objectType();
    }

    public BackupInstanceResourceInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.dataprotection.DataProtectionManager manager() {
        return this.serviceManager;
    }

    private String vaultName;

    private String resourceGroupName;

    private String backupInstanceName;

    public BackupInstanceResourceImpl withExistingBackupVault(String vaultName, String resourceGroupName) {
        this.vaultName = vaultName;
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public BackupInstanceResource create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getBackupInstances()
                .createOrUpdate(vaultName, resourceGroupName, backupInstanceName, this.innerModel(), Context.NONE);
        return this;
    }

    public BackupInstanceResource create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getBackupInstances()
                .createOrUpdate(vaultName, resourceGroupName, backupInstanceName, this.innerModel(), context);
        return this;
    }

    BackupInstanceResourceImpl(
        String name, com.azure.resourcemanager.dataprotection.DataProtectionManager serviceManager) {
        this.innerObject = new BackupInstanceResourceInner();
        this.serviceManager = serviceManager;
        this.backupInstanceName = name;
    }

    public BackupInstanceResourceImpl update() {
        return this;
    }

    public BackupInstanceResource apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getBackupInstances()
                .createOrUpdate(vaultName, resourceGroupName, backupInstanceName, this.innerModel(), Context.NONE);
        return this;
    }

    public BackupInstanceResource apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getBackupInstances()
                .createOrUpdate(vaultName, resourceGroupName, backupInstanceName, this.innerModel(), context);
        return this;
    }

    BackupInstanceResourceImpl(
        BackupInstanceResourceInner innerObject,
        com.azure.resourcemanager.dataprotection.DataProtectionManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.vaultName = Utils.getValueFromIdByName(innerObject.id(), "backupVaults");
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.backupInstanceName = Utils.getValueFromIdByName(innerObject.id(), "backupInstances");
    }

    public BackupInstanceResource refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getBackupInstances()
                .getWithResponse(vaultName, resourceGroupName, backupInstanceName, Context.NONE)
                .getValue();
        return this;
    }

    public BackupInstanceResource refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getBackupInstances()
                .getWithResponse(vaultName, resourceGroupName, backupInstanceName, context)
                .getValue();
        return this;
    }

    public OperationJobExtendedInfo adhocBackup(TriggerBackupRequest parameters) {
        return serviceManager
            .backupInstances()
            .adhocBackup(vaultName, resourceGroupName, backupInstanceName, parameters);
    }

    public OperationJobExtendedInfo adhocBackup(TriggerBackupRequest parameters, Context context) {
        return serviceManager
            .backupInstances()
            .adhocBackup(vaultName, resourceGroupName, backupInstanceName, parameters, context);
    }

    public void triggerRehydrate(AzureBackupRehydrationRequest parameters) {
        serviceManager.backupInstances().triggerRehydrate(resourceGroupName, vaultName, backupInstanceName, parameters);
    }

    public void triggerRehydrate(AzureBackupRehydrationRequest parameters, Context context) {
        serviceManager
            .backupInstances()
            .triggerRehydrate(resourceGroupName, vaultName, backupInstanceName, parameters, context);
    }

    public OperationJobExtendedInfo triggerRestore(AzureBackupRestoreRequest parameters) {
        return serviceManager
            .backupInstances()
            .triggerRestore(vaultName, resourceGroupName, backupInstanceName, parameters);
    }

    public OperationJobExtendedInfo triggerRestore(AzureBackupRestoreRequest parameters, Context context) {
        return serviceManager
            .backupInstances()
            .triggerRestore(vaultName, resourceGroupName, backupInstanceName, parameters, context);
    }

    public OperationJobExtendedInfo validateRestore(ValidateRestoreRequestObject parameters) {
        return serviceManager
            .backupInstances()
            .validateRestore(vaultName, resourceGroupName, backupInstanceName, parameters);
    }

    public OperationJobExtendedInfo validateRestore(ValidateRestoreRequestObject parameters, Context context) {
        return serviceManager
            .backupInstances()
            .validateRestore(vaultName, resourceGroupName, backupInstanceName, parameters, context);
    }

    public BackupInstanceResourceImpl withFriendlyName(String friendlyName) {
        this.innerModel().withFriendlyName(friendlyName);
        return this;
    }

    public BackupInstanceResourceImpl withDataSourceInfo(Datasource dataSourceInfo) {
        this.innerModel().withDataSourceInfo(dataSourceInfo);
        return this;
    }

    public BackupInstanceResourceImpl withDataSourceSetInfo(DatasourceSet dataSourceSetInfo) {
        this.innerModel().withDataSourceSetInfo(dataSourceSetInfo);
        return this;
    }

    public BackupInstanceResourceImpl withPolicyInfo(PolicyInfo policyInfo) {
        this.innerModel().withPolicyInfo(policyInfo);
        return this;
    }

    public BackupInstanceResourceImpl withObjectType(String objectType) {
        this.innerModel().withObjectType(objectType);
        return this;
    }
}
