// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.desktopvirtualization.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanPooledScheduleInner;
import com.azure.resourcemanager.desktopvirtualization.models.ScalingPlanPooledSchedulePatch;

/** An instance of this class provides access to all the operations defined in ScalingPlanPooledSchedulesClient. */
public interface ScalingPlanPooledSchedulesClient {
    /**
     * Get a ScalingPlanPooledSchedule.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scalingPlanName The name of the scaling plan.
     * @param scalingPlanScheduleName The name of the ScalingPlanSchedule.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a ScalingPlanPooledSchedule.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ScalingPlanPooledScheduleInner get(
        String resourceGroupName, String scalingPlanName, String scalingPlanScheduleName);

    /**
     * Get a ScalingPlanPooledSchedule.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scalingPlanName The name of the scaling plan.
     * @param scalingPlanScheduleName The name of the ScalingPlanSchedule.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a ScalingPlanPooledSchedule along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ScalingPlanPooledScheduleInner> getWithResponse(
        String resourceGroupName, String scalingPlanName, String scalingPlanScheduleName, Context context);

    /**
     * Create or update a ScalingPlanPooledSchedule.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scalingPlanName The name of the scaling plan.
     * @param scalingPlanScheduleName The name of the ScalingPlanSchedule.
     * @param scalingPlanSchedule Object containing ScalingPlanPooledSchedule definitions.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a ScalingPlanPooledSchedule definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ScalingPlanPooledScheduleInner create(
        String resourceGroupName,
        String scalingPlanName,
        String scalingPlanScheduleName,
        ScalingPlanPooledScheduleInner scalingPlanSchedule);

    /**
     * Create or update a ScalingPlanPooledSchedule.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scalingPlanName The name of the scaling plan.
     * @param scalingPlanScheduleName The name of the ScalingPlanSchedule.
     * @param scalingPlanSchedule Object containing ScalingPlanPooledSchedule definitions.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a ScalingPlanPooledSchedule definition along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ScalingPlanPooledScheduleInner> createWithResponse(
        String resourceGroupName,
        String scalingPlanName,
        String scalingPlanScheduleName,
        ScalingPlanPooledScheduleInner scalingPlanSchedule,
        Context context);

    /**
     * Remove a ScalingPlanPooledSchedule.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scalingPlanName The name of the scaling plan.
     * @param scalingPlanScheduleName The name of the ScalingPlanSchedule.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String scalingPlanName, String scalingPlanScheduleName);

    /**
     * Remove a ScalingPlanPooledSchedule.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scalingPlanName The name of the scaling plan.
     * @param scalingPlanScheduleName The name of the ScalingPlanSchedule.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(
        String resourceGroupName, String scalingPlanName, String scalingPlanScheduleName, Context context);

    /**
     * Update a ScalingPlanPooledSchedule.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scalingPlanName The name of the scaling plan.
     * @param scalingPlanScheduleName The name of the ScalingPlanSchedule.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a ScalingPlanPooledSchedule definition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ScalingPlanPooledScheduleInner update(
        String resourceGroupName, String scalingPlanName, String scalingPlanScheduleName);

    /**
     * Update a ScalingPlanPooledSchedule.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scalingPlanName The name of the scaling plan.
     * @param scalingPlanScheduleName The name of the ScalingPlanSchedule.
     * @param scalingPlanSchedule Object containing ScalingPlanPooledSchedule definitions.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a ScalingPlanPooledSchedule definition along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ScalingPlanPooledScheduleInner> updateWithResponse(
        String resourceGroupName,
        String scalingPlanName,
        String scalingPlanScheduleName,
        ScalingPlanPooledSchedulePatch scalingPlanSchedule,
        Context context);

    /**
     * List ScalingPlanPooledSchedules.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scalingPlanName The name of the scaling plan.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return scalingPlanPooledScheduleList as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ScalingPlanPooledScheduleInner> list(String resourceGroupName, String scalingPlanName);

    /**
     * List ScalingPlanPooledSchedules.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param scalingPlanName The name of the scaling plan.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return scalingPlanPooledScheduleList as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ScalingPlanPooledScheduleInner> list(
        String resourceGroupName, String scalingPlanName, Context context);
}
