// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerregistry.generated.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.containerregistry.generated.fluent.models.CacheRuleInner;
import com.azure.resourcemanager.containerregistry.generated.models.CacheRule;
import com.azure.resourcemanager.containerregistry.generated.models.CacheRuleUpdateParameters;
import com.azure.resourcemanager.containerregistry.generated.models.ProvisioningState;
import java.time.OffsetDateTime;

public final class CacheRuleImpl implements CacheRule, CacheRule.Definition, CacheRule.Update {
    private CacheRuleInner innerObject;

    private final com.azure.resourcemanager.containerregistry.generated.ContainerRegistryManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String credentialSetResourceId() {
        return this.innerModel().credentialSetResourceId();
    }

    public String sourceRepository() {
        return this.innerModel().sourceRepository();
    }

    public String targetRepository() {
        return this.innerModel().targetRepository();
    }

    public OffsetDateTime creationDate() {
        return this.innerModel().creationDate();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public CacheRuleInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.containerregistry.generated.ContainerRegistryManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String registryName;

    private String cacheRuleName;

    private CacheRuleUpdateParameters updateCacheRuleUpdateParameters;

    public CacheRuleImpl withExistingRegistry(String resourceGroupName, String registryName) {
        this.resourceGroupName = resourceGroupName;
        this.registryName = registryName;
        return this;
    }

    public CacheRule create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCacheRules()
                .create(resourceGroupName, registryName, cacheRuleName, this.innerModel(), Context.NONE);
        return this;
    }

    public CacheRule create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCacheRules()
                .create(resourceGroupName, registryName, cacheRuleName, this.innerModel(), context);
        return this;
    }

    CacheRuleImpl(
        String name, com.azure.resourcemanager.containerregistry.generated.ContainerRegistryManager serviceManager) {
        this.innerObject = new CacheRuleInner();
        this.serviceManager = serviceManager;
        this.cacheRuleName = name;
    }

    public CacheRuleImpl update() {
        this.updateCacheRuleUpdateParameters = new CacheRuleUpdateParameters();
        return this;
    }

    public CacheRule apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCacheRules()
                .update(resourceGroupName, registryName, cacheRuleName, updateCacheRuleUpdateParameters, Context.NONE);
        return this;
    }

    public CacheRule apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCacheRules()
                .update(resourceGroupName, registryName, cacheRuleName, updateCacheRuleUpdateParameters, context);
        return this;
    }

    CacheRuleImpl(
        CacheRuleInner innerObject,
        com.azure.resourcemanager.containerregistry.generated.ContainerRegistryManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.registryName = Utils.getValueFromIdByName(innerObject.id(), "registries");
        this.cacheRuleName = Utils.getValueFromIdByName(innerObject.id(), "cacheRules");
    }

    public CacheRule refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCacheRules()
                .getWithResponse(resourceGroupName, registryName, cacheRuleName, Context.NONE)
                .getValue();
        return this;
    }

    public CacheRule refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCacheRules()
                .getWithResponse(resourceGroupName, registryName, cacheRuleName, context)
                .getValue();
        return this;
    }

    public CacheRuleImpl withCredentialSetResourceId(String credentialSetResourceId) {
        if (isInCreateMode()) {
            this.innerModel().withCredentialSetResourceId(credentialSetResourceId);
            return this;
        } else {
            this.updateCacheRuleUpdateParameters.withCredentialSetResourceId(credentialSetResourceId);
            return this;
        }
    }

    public CacheRuleImpl withSourceRepository(String sourceRepository) {
        this.innerModel().withSourceRepository(sourceRepository);
        return this;
    }

    public CacheRuleImpl withTargetRepository(String targetRepository) {
        this.innerModel().withTargetRepository(targetRepository);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
