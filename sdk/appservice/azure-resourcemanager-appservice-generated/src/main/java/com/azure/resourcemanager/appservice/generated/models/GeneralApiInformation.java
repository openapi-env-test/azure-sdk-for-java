// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.Resource;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** General API information. */
@JsonFlatten
@Fluent
public class GeneralApiInformation extends Resource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(GeneralApiInformation.class);

    /*
     * Icon Url
     */
    @JsonProperty(value = "properties.iconUrl")
    private String iconUrl;

    /*
     * Display Name
     */
    @JsonProperty(value = "properties.displayName")
    private String displayName;

    /*
     * Description
     */
    @JsonProperty(value = "properties.description")
    private String description;

    /*
     * a public accessible url of the Terms Of Use Url of this API
     */
    @JsonProperty(value = "properties.termsOfUseUrl")
    private String termsOfUseUrl;

    /*
     * DefaultConnectionNameTemplate
     */
    @JsonProperty(value = "properties.connectionDisplayName")
    private String connectionDisplayName;

    /*
     * ConnectionPortalUrl
     */
    @JsonProperty(value = "properties.connectionPortalUrl")
    private Object connectionPortalUrl;

    /*
     * Kind of resource
     */
    @JsonProperty(value = "kind")
    private String kind;

    /*
     * Resource Id
     */
    @JsonProperty(value = "id")
    private String id;

    /*
     * Resource Name
     */
    @JsonProperty(value = "name")
    private String name;

    /*
     * Resource type
     */
    @JsonProperty(value = "type")
    private String type;

    /**
     * Get the iconUrl property: Icon Url.
     *
     * @return the iconUrl value.
     */
    public String iconUrl() {
        return this.iconUrl;
    }

    /**
     * Set the iconUrl property: Icon Url.
     *
     * @param iconUrl the iconUrl value to set.
     * @return the GeneralApiInformation object itself.
     */
    public GeneralApiInformation withIconUrl(String iconUrl) {
        this.iconUrl = iconUrl;
        return this;
    }

    /**
     * Get the displayName property: Display Name.
     *
     * @return the displayName value.
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Set the displayName property: Display Name.
     *
     * @param displayName the displayName value to set.
     * @return the GeneralApiInformation object itself.
     */
    public GeneralApiInformation withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get the description property: Description.
     *
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: Description.
     *
     * @param description the description value to set.
     * @return the GeneralApiInformation object itself.
     */
    public GeneralApiInformation withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the termsOfUseUrl property: a public accessible url of the Terms Of Use Url of this API.
     *
     * @return the termsOfUseUrl value.
     */
    public String termsOfUseUrl() {
        return this.termsOfUseUrl;
    }

    /**
     * Set the termsOfUseUrl property: a public accessible url of the Terms Of Use Url of this API.
     *
     * @param termsOfUseUrl the termsOfUseUrl value to set.
     * @return the GeneralApiInformation object itself.
     */
    public GeneralApiInformation withTermsOfUseUrl(String termsOfUseUrl) {
        this.termsOfUseUrl = termsOfUseUrl;
        return this;
    }

    /**
     * Get the connectionDisplayName property: DefaultConnectionNameTemplate.
     *
     * @return the connectionDisplayName value.
     */
    public String connectionDisplayName() {
        return this.connectionDisplayName;
    }

    /**
     * Set the connectionDisplayName property: DefaultConnectionNameTemplate.
     *
     * @param connectionDisplayName the connectionDisplayName value to set.
     * @return the GeneralApiInformation object itself.
     */
    public GeneralApiInformation withConnectionDisplayName(String connectionDisplayName) {
        this.connectionDisplayName = connectionDisplayName;
        return this;
    }

    /**
     * Get the connectionPortalUrl property: ConnectionPortalUrl.
     *
     * @return the connectionPortalUrl value.
     */
    public Object connectionPortalUrl() {
        return this.connectionPortalUrl;
    }

    /**
     * Set the connectionPortalUrl property: ConnectionPortalUrl.
     *
     * @param connectionPortalUrl the connectionPortalUrl value to set.
     * @return the GeneralApiInformation object itself.
     */
    public GeneralApiInformation withConnectionPortalUrl(Object connectionPortalUrl) {
        this.connectionPortalUrl = connectionPortalUrl;
        return this;
    }

    /**
     * Get the kind property: Kind of resource.
     *
     * @return the kind value.
     */
    public String kind() {
        return this.kind;
    }

    /**
     * Set the kind property: Kind of resource.
     *
     * @param kind the kind value to set.
     * @return the GeneralApiInformation object itself.
     */
    public GeneralApiInformation withKind(String kind) {
        this.kind = kind;
        return this;
    }

    /**
     * Get the id property: Resource Id.
     *
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id property: Resource Id.
     *
     * @param id the id value to set.
     * @return the GeneralApiInformation object itself.
     */
    public GeneralApiInformation withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the name property: Resource Name.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Resource Name.
     *
     * @param name the name value to set.
     * @return the GeneralApiInformation object itself.
     */
    public GeneralApiInformation withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the type property: Resource type.
     *
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Set the type property: Resource type.
     *
     * @param type the type value to set.
     * @return the GeneralApiInformation object itself.
     */
    public GeneralApiInformation withType(String type) {
        this.type = type;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public GeneralApiInformation withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public GeneralApiInformation withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
