// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.models;

import com.azure.resourcemanager.appservice.generated.fluent.models.DeletedSiteInner;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Map;

/** An immutable client-side representation of DeletedSite. */
public interface DeletedSite {
    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the deletedTimestamp property: Time when the site was deleted.
     *
     * @return the deletedTimestamp value.
     */
    OffsetDateTime deletedTimestamp();

    /**
     * Gets the namePropertiesName property: Name of web app.
     *
     * @return the namePropertiesName value.
     */
    String namePropertiesName();

    /**
     * Gets the state property: State of the web app.
     *
     * @return the state value.
     */
    String state();

    /**
     * Gets the hostNames property: Hostnames associated with web app.
     *
     * @return the hostNames value.
     */
    List<String> hostNames();

    /**
     * Gets the repositorySiteName property: Name of repository site.
     *
     * @return the repositorySiteName value.
     */
    String repositorySiteName();

    /**
     * Gets the usageState property: State indicating whether web app has exceeded its quota usage.
     *
     * @return the usageState value.
     */
    UsageState usageState();

    /**
     * Gets the enabled property: True if the site is enabled; otherwise, false. Setting this value to false disables
     * the site (takes the site off line).
     *
     * @return the enabled value.
     */
    Boolean enabled();

    /**
     * Gets the enabledHostNames property: Hostnames for the web app that are enabled. Hostnames need to be assigned and
     * enabled. If some hostnames are assigned but not enabled the app is not served on those hostnames.
     *
     * @return the enabledHostNames value.
     */
    List<String> enabledHostNames();

    /**
     * Gets the availabilityState property: Management information availability state for the web app. Possible values
     * are Normal or Limited. Normal means that the site is running correctly and that management information for the
     * site is available. Limited means that only partial management information for the site is available and that
     * detailed site information is unavailable.
     *
     * @return the availabilityState value.
     */
    SiteAvailabilityState availabilityState();

    /**
     * Gets the hostnameSslStates property: Hostname SSL states are used to manage the SSL bindings for site's
     * hostnames.
     *
     * @return the hostnameSslStates value.
     */
    List<HostnameSslState> hostnameSslStates();

    /**
     * Gets the serverFarmId property: The serverFarmId property.
     *
     * @return the serverFarmId value.
     */
    String serverFarmId();

    /**
     * Gets the lastModifiedTimeUtc property: Last time web app was modified in UTC.
     *
     * @return the lastModifiedTimeUtc value.
     */
    OffsetDateTime lastModifiedTimeUtc();

    /**
     * Gets the siteConfig property: Configuration of web app.
     *
     * @return the siteConfig value.
     */
    SiteConfig siteConfig();

    /**
     * Gets the trafficManagerHostNames property: Read-only list of Azure Traffic manager hostnames associated with web
     * app.
     *
     * @return the trafficManagerHostNames value.
     */
    List<String> trafficManagerHostNames();

    /**
     * Gets the premiumAppDeployed property: If set indicates whether web app is deployed as a premium app.
     *
     * @return the premiumAppDeployed value.
     */
    Boolean premiumAppDeployed();

    /**
     * Gets the scmSiteAlsoStopped property: If set indicates whether to stop SCM (KUDU) site when the web app is
     * stopped. Default is false.
     *
     * @return the scmSiteAlsoStopped value.
     */
    Boolean scmSiteAlsoStopped();

    /**
     * Gets the targetSwapSlot property: Read-only property that specifies which slot this app will swap into.
     *
     * @return the targetSwapSlot value.
     */
    String targetSwapSlot();

    /**
     * Gets the hostingEnvironmentProfile property: Specification for the hosting environment (App Service Environment)
     * to use for the web app.
     *
     * @return the hostingEnvironmentProfile value.
     */
    HostingEnvironmentProfile hostingEnvironmentProfile();

    /**
     * Gets the microService property: The microService property.
     *
     * @return the microService value.
     */
    String microService();

    /**
     * Gets the gatewaySiteName property: Name of gateway app associated with web app.
     *
     * @return the gatewaySiteName value.
     */
    String gatewaySiteName();

    /**
     * Gets the clientAffinityEnabled property: Specifies if the client affinity is enabled when load balancing http
     * request for multiple instances of the web app.
     *
     * @return the clientAffinityEnabled value.
     */
    Boolean clientAffinityEnabled();

    /**
     * Gets the clientCertEnabled property: Specifies if the client certificate is enabled for the web app.
     *
     * @return the clientCertEnabled value.
     */
    Boolean clientCertEnabled();

    /**
     * Gets the hostNamesDisabled property: Specifies if the public hostnames are disabled the web app. If set to true
     * the app is only accessible via API Management process.
     *
     * @return the hostNamesDisabled value.
     */
    Boolean hostNamesDisabled();

    /**
     * Gets the outboundIpAddresses property: List of comma separated IP addresses that this web app uses for outbound
     * connections. Those can be used when configuring firewall rules for databases accessed by this web app.
     *
     * @return the outboundIpAddresses value.
     */
    String outboundIpAddresses();

    /**
     * Gets the containerSize property: Size of a function container.
     *
     * @return the containerSize value.
     */
    Integer containerSize();

    /**
     * Gets the maxNumberOfWorkers property: Maximum number of workers This only applies to function container.
     *
     * @return the maxNumberOfWorkers value.
     */
    Integer maxNumberOfWorkers();

    /**
     * Gets the cloningInfo property: This is only valid for web app creation. If specified, web app is cloned from a
     * source web app.
     *
     * @return the cloningInfo value.
     */
    CloningInfo cloningInfo();

    /**
     * Gets the resourceGroup property: Resource group web app belongs to.
     *
     * @return the resourceGroup value.
     */
    String resourceGroup();

    /**
     * Gets the isDefaultContainer property: Site is a default container.
     *
     * @return the isDefaultContainer value.
     */
    Boolean isDefaultContainer();

    /**
     * Gets the defaultHostname property: Default hostname of the web app.
     *
     * @return the defaultHostname value.
     */
    String defaultHostname();

    /**
     * Gets the kind property: Kind of resource.
     *
     * @return the kind value.
     */
    String kind();

    /**
     * Gets the id property: Resource Id.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: Resource Name.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: Resource type.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the inner com.azure.resourcemanager.appservice.generated.fluent.models.DeletedSiteInner object.
     *
     * @return the inner object.
     */
    DeletedSiteInner innerModel();
}
