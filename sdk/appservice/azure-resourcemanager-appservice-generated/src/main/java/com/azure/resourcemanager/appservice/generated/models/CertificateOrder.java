// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.models;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.appservice.generated.fluent.models.CertificateOrderCertificateInner;
import com.azure.resourcemanager.appservice.generated.fluent.models.CertificateOrderInner;
import java.time.OffsetDateTime;
import java.util.Map;

/** An immutable client-side representation of CertificateOrder. */
public interface CertificateOrder {
    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the certificates property: State of the Key Vault secret.
     *
     * @return the certificates value.
     */
    Map<String, CertificateOrderCertificate> certificates();

    /**
     * Gets the distinguishedName property: Certificate distinguished name.
     *
     * @return the distinguishedName value.
     */
    String distinguishedName();

    /**
     * Gets the domainVerificationToken property: Domain Verification Token.
     *
     * @return the domainVerificationToken value.
     */
    String domainVerificationToken();

    /**
     * Gets the validityInYears property: Duration in years (must be between 1 and 3).
     *
     * @return the validityInYears value.
     */
    Integer validityInYears();

    /**
     * Gets the keySize property: Certificate Key Size.
     *
     * @return the keySize value.
     */
    Integer keySize();

    /**
     * Gets the productType property: Certificate product type.
     *
     * @return the productType value.
     */
    CertificateProductType productType();

    /**
     * Gets the autoRenew property: Auto renew.
     *
     * @return the autoRenew value.
     */
    Boolean autoRenew();

    /**
     * Gets the provisioningState property: Status of certificate order.
     *
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the status property: Current order status.
     *
     * @return the status value.
     */
    CertificateOrderStatus status();

    /**
     * Gets the signedCertificate property: Signed certificate.
     *
     * @return the signedCertificate value.
     */
    CertificateDetails signedCertificate();

    /**
     * Gets the csr property: Last CSR that was created for this order.
     *
     * @return the csr value.
     */
    String csr();

    /**
     * Gets the intermediate property: Intermediate certificate.
     *
     * @return the intermediate value.
     */
    CertificateDetails intermediate();

    /**
     * Gets the root property: Root certificate.
     *
     * @return the root value.
     */
    CertificateDetails root();

    /**
     * Gets the serialNumber property: Current serial number of the certificate.
     *
     * @return the serialNumber value.
     */
    String serialNumber();

    /**
     * Gets the lastCertificateIssuanceTime property: Certificate last issuance time.
     *
     * @return the lastCertificateIssuanceTime value.
     */
    OffsetDateTime lastCertificateIssuanceTime();

    /**
     * Gets the expirationTime property: Certificate expiration time.
     *
     * @return the expirationTime value.
     */
    OffsetDateTime expirationTime();

    /**
     * Gets the kind property: Kind of resource.
     *
     * @return the kind value.
     */
    String kind();

    /**
     * Gets the id property: Resource Id.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: Resource Name.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: Resource type.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the inner com.azure.resourcemanager.appservice.generated.fluent.models.CertificateOrderInner object.
     *
     * @return the inner object.
     */
    CertificateOrderInner innerModel();

    /** The entirety of the CertificateOrder definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithResourceGroup,
            DefinitionStages.WithCreate {
    }
    /** The CertificateOrder definition stages. */
    interface DefinitionStages {
        /** The first stage of the CertificateOrder definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the CertificateOrder definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }
        /** The stage of the CertificateOrder definition allowing to specify parent resource. */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             *
             * @param resourceGroupName Azure resource group name.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceGroup(String resourceGroupName);
        }
        /**
         * The stage of the CertificateOrder definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags,
                DefinitionStages.WithCertificates,
                DefinitionStages.WithDistinguishedName,
                DefinitionStages.WithDomainVerificationToken,
                DefinitionStages.WithValidityInYears,
                DefinitionStages.WithKeySize,
                DefinitionStages.WithProductType,
                DefinitionStages.WithAutoRenew,
                DefinitionStages.WithProvisioningState,
                DefinitionStages.WithStatus,
                DefinitionStages.WithSignedCertificate,
                DefinitionStages.WithCsr,
                DefinitionStages.WithIntermediate,
                DefinitionStages.WithRoot,
                DefinitionStages.WithSerialNumber,
                DefinitionStages.WithLastCertificateIssuanceTime,
                DefinitionStages.WithExpirationTime,
                DefinitionStages.WithKind,
                DefinitionStages.WithName,
                DefinitionStages.WithType {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            CertificateOrder create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            CertificateOrder create(Context context);
        }
        /** The stage of the CertificateOrder definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the CertificateOrder definition allowing to specify certificates. */
        interface WithCertificates {
            /**
             * Specifies the certificates property: State of the Key Vault secret.
             *
             * @param certificates State of the Key Vault secret.
             * @return the next definition stage.
             */
            WithCreate withCertificates(Map<String, CertificateOrderCertificateInner> certificates);
        }
        /** The stage of the CertificateOrder definition allowing to specify distinguishedName. */
        interface WithDistinguishedName {
            /**
             * Specifies the distinguishedName property: Certificate distinguished name.
             *
             * @param distinguishedName Certificate distinguished name.
             * @return the next definition stage.
             */
            WithCreate withDistinguishedName(String distinguishedName);
        }
        /** The stage of the CertificateOrder definition allowing to specify domainVerificationToken. */
        interface WithDomainVerificationToken {
            /**
             * Specifies the domainVerificationToken property: Domain Verification Token.
             *
             * @param domainVerificationToken Domain Verification Token.
             * @return the next definition stage.
             */
            WithCreate withDomainVerificationToken(String domainVerificationToken);
        }
        /** The stage of the CertificateOrder definition allowing to specify validityInYears. */
        interface WithValidityInYears {
            /**
             * Specifies the validityInYears property: Duration in years (must be between 1 and 3).
             *
             * @param validityInYears Duration in years (must be between 1 and 3).
             * @return the next definition stage.
             */
            WithCreate withValidityInYears(Integer validityInYears);
        }
        /** The stage of the CertificateOrder definition allowing to specify keySize. */
        interface WithKeySize {
            /**
             * Specifies the keySize property: Certificate Key Size.
             *
             * @param keySize Certificate Key Size.
             * @return the next definition stage.
             */
            WithCreate withKeySize(Integer keySize);
        }
        /** The stage of the CertificateOrder definition allowing to specify productType. */
        interface WithProductType {
            /**
             * Specifies the productType property: Certificate product type.
             *
             * @param productType Certificate product type.
             * @return the next definition stage.
             */
            WithCreate withProductType(CertificateProductType productType);
        }
        /** The stage of the CertificateOrder definition allowing to specify autoRenew. */
        interface WithAutoRenew {
            /**
             * Specifies the autoRenew property: Auto renew.
             *
             * @param autoRenew Auto renew.
             * @return the next definition stage.
             */
            WithCreate withAutoRenew(Boolean autoRenew);
        }
        /** The stage of the CertificateOrder definition allowing to specify provisioningState. */
        interface WithProvisioningState {
            /**
             * Specifies the provisioningState property: Status of certificate order.
             *
             * @param provisioningState Status of certificate order.
             * @return the next definition stage.
             */
            WithCreate withProvisioningState(ProvisioningState provisioningState);
        }
        /** The stage of the CertificateOrder definition allowing to specify status. */
        interface WithStatus {
            /**
             * Specifies the status property: Current order status.
             *
             * @param status Current order status.
             * @return the next definition stage.
             */
            WithCreate withStatus(CertificateOrderStatus status);
        }
        /** The stage of the CertificateOrder definition allowing to specify signedCertificate. */
        interface WithSignedCertificate {
            /**
             * Specifies the signedCertificate property: Signed certificate.
             *
             * @param signedCertificate Signed certificate.
             * @return the next definition stage.
             */
            WithCreate withSignedCertificate(CertificateDetails signedCertificate);
        }
        /** The stage of the CertificateOrder definition allowing to specify csr. */
        interface WithCsr {
            /**
             * Specifies the csr property: Last CSR that was created for this order.
             *
             * @param csr Last CSR that was created for this order.
             * @return the next definition stage.
             */
            WithCreate withCsr(String csr);
        }
        /** The stage of the CertificateOrder definition allowing to specify intermediate. */
        interface WithIntermediate {
            /**
             * Specifies the intermediate property: Intermediate certificate.
             *
             * @param intermediate Intermediate certificate.
             * @return the next definition stage.
             */
            WithCreate withIntermediate(CertificateDetails intermediate);
        }
        /** The stage of the CertificateOrder definition allowing to specify root. */
        interface WithRoot {
            /**
             * Specifies the root property: Root certificate.
             *
             * @param root Root certificate.
             * @return the next definition stage.
             */
            WithCreate withRoot(CertificateDetails root);
        }
        /** The stage of the CertificateOrder definition allowing to specify serialNumber. */
        interface WithSerialNumber {
            /**
             * Specifies the serialNumber property: Current serial number of the certificate.
             *
             * @param serialNumber Current serial number of the certificate.
             * @return the next definition stage.
             */
            WithCreate withSerialNumber(String serialNumber);
        }
        /** The stage of the CertificateOrder definition allowing to specify lastCertificateIssuanceTime. */
        interface WithLastCertificateIssuanceTime {
            /**
             * Specifies the lastCertificateIssuanceTime property: Certificate last issuance time.
             *
             * @param lastCertificateIssuanceTime Certificate last issuance time.
             * @return the next definition stage.
             */
            WithCreate withLastCertificateIssuanceTime(OffsetDateTime lastCertificateIssuanceTime);
        }
        /** The stage of the CertificateOrder definition allowing to specify expirationTime. */
        interface WithExpirationTime {
            /**
             * Specifies the expirationTime property: Certificate expiration time.
             *
             * @param expirationTime Certificate expiration time.
             * @return the next definition stage.
             */
            WithCreate withExpirationTime(OffsetDateTime expirationTime);
        }
        /** The stage of the CertificateOrder definition allowing to specify kind. */
        interface WithKind {
            /**
             * Specifies the kind property: Kind of resource.
             *
             * @param kind Kind of resource.
             * @return the next definition stage.
             */
            WithCreate withKind(String kind);
        }
        /** The stage of the CertificateOrder definition allowing to specify name. */
        interface WithName {
            /**
             * Specifies the name property: Resource Name.
             *
             * @param name Resource Name.
             * @return the next definition stage.
             */
            WithCreate withName(String name);
        }
        /** The stage of the CertificateOrder definition allowing to specify type. */
        interface WithType {
            /**
             * Specifies the type property: Resource type.
             *
             * @param type Resource type.
             * @return the next definition stage.
             */
            WithCreate withType(String type);
        }
    }
    /**
     * Begins update for the CertificateOrder resource.
     *
     * @return the stage of resource update.
     */
    CertificateOrder.Update update();

    /** The template for CertificateOrder update. */
    interface Update
        extends UpdateStages.WithTags,
            UpdateStages.WithCertificates,
            UpdateStages.WithDistinguishedName,
            UpdateStages.WithDomainVerificationToken,
            UpdateStages.WithValidityInYears,
            UpdateStages.WithKeySize,
            UpdateStages.WithProductType,
            UpdateStages.WithAutoRenew,
            UpdateStages.WithProvisioningState,
            UpdateStages.WithStatus,
            UpdateStages.WithSignedCertificate,
            UpdateStages.WithCsr,
            UpdateStages.WithIntermediate,
            UpdateStages.WithRoot,
            UpdateStages.WithSerialNumber,
            UpdateStages.WithLastCertificateIssuanceTime,
            UpdateStages.WithExpirationTime,
            UpdateStages.WithKind,
            UpdateStages.WithName,
            UpdateStages.WithType {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        CertificateOrder apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        CertificateOrder apply(Context context);
    }
    /** The CertificateOrder update stages. */
    interface UpdateStages {
        /** The stage of the CertificateOrder update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
        /** The stage of the CertificateOrder update allowing to specify certificates. */
        interface WithCertificates {
            /**
             * Specifies the certificates property: State of the Key Vault secret.
             *
             * @param certificates State of the Key Vault secret.
             * @return the next definition stage.
             */
            Update withCertificates(Map<String, CertificateOrderCertificateInner> certificates);
        }
        /** The stage of the CertificateOrder update allowing to specify distinguishedName. */
        interface WithDistinguishedName {
            /**
             * Specifies the distinguishedName property: Certificate distinguished name.
             *
             * @param distinguishedName Certificate distinguished name.
             * @return the next definition stage.
             */
            Update withDistinguishedName(String distinguishedName);
        }
        /** The stage of the CertificateOrder update allowing to specify domainVerificationToken. */
        interface WithDomainVerificationToken {
            /**
             * Specifies the domainVerificationToken property: Domain Verification Token.
             *
             * @param domainVerificationToken Domain Verification Token.
             * @return the next definition stage.
             */
            Update withDomainVerificationToken(String domainVerificationToken);
        }
        /** The stage of the CertificateOrder update allowing to specify validityInYears. */
        interface WithValidityInYears {
            /**
             * Specifies the validityInYears property: Duration in years (must be between 1 and 3).
             *
             * @param validityInYears Duration in years (must be between 1 and 3).
             * @return the next definition stage.
             */
            Update withValidityInYears(Integer validityInYears);
        }
        /** The stage of the CertificateOrder update allowing to specify keySize. */
        interface WithKeySize {
            /**
             * Specifies the keySize property: Certificate Key Size.
             *
             * @param keySize Certificate Key Size.
             * @return the next definition stage.
             */
            Update withKeySize(Integer keySize);
        }
        /** The stage of the CertificateOrder update allowing to specify productType. */
        interface WithProductType {
            /**
             * Specifies the productType property: Certificate product type.
             *
             * @param productType Certificate product type.
             * @return the next definition stage.
             */
            Update withProductType(CertificateProductType productType);
        }
        /** The stage of the CertificateOrder update allowing to specify autoRenew. */
        interface WithAutoRenew {
            /**
             * Specifies the autoRenew property: Auto renew.
             *
             * @param autoRenew Auto renew.
             * @return the next definition stage.
             */
            Update withAutoRenew(Boolean autoRenew);
        }
        /** The stage of the CertificateOrder update allowing to specify provisioningState. */
        interface WithProvisioningState {
            /**
             * Specifies the provisioningState property: Status of certificate order.
             *
             * @param provisioningState Status of certificate order.
             * @return the next definition stage.
             */
            Update withProvisioningState(ProvisioningState provisioningState);
        }
        /** The stage of the CertificateOrder update allowing to specify status. */
        interface WithStatus {
            /**
             * Specifies the status property: Current order status.
             *
             * @param status Current order status.
             * @return the next definition stage.
             */
            Update withStatus(CertificateOrderStatus status);
        }
        /** The stage of the CertificateOrder update allowing to specify signedCertificate. */
        interface WithSignedCertificate {
            /**
             * Specifies the signedCertificate property: Signed certificate.
             *
             * @param signedCertificate Signed certificate.
             * @return the next definition stage.
             */
            Update withSignedCertificate(CertificateDetails signedCertificate);
        }
        /** The stage of the CertificateOrder update allowing to specify csr. */
        interface WithCsr {
            /**
             * Specifies the csr property: Last CSR that was created for this order.
             *
             * @param csr Last CSR that was created for this order.
             * @return the next definition stage.
             */
            Update withCsr(String csr);
        }
        /** The stage of the CertificateOrder update allowing to specify intermediate. */
        interface WithIntermediate {
            /**
             * Specifies the intermediate property: Intermediate certificate.
             *
             * @param intermediate Intermediate certificate.
             * @return the next definition stage.
             */
            Update withIntermediate(CertificateDetails intermediate);
        }
        /** The stage of the CertificateOrder update allowing to specify root. */
        interface WithRoot {
            /**
             * Specifies the root property: Root certificate.
             *
             * @param root Root certificate.
             * @return the next definition stage.
             */
            Update withRoot(CertificateDetails root);
        }
        /** The stage of the CertificateOrder update allowing to specify serialNumber. */
        interface WithSerialNumber {
            /**
             * Specifies the serialNumber property: Current serial number of the certificate.
             *
             * @param serialNumber Current serial number of the certificate.
             * @return the next definition stage.
             */
            Update withSerialNumber(String serialNumber);
        }
        /** The stage of the CertificateOrder update allowing to specify lastCertificateIssuanceTime. */
        interface WithLastCertificateIssuanceTime {
            /**
             * Specifies the lastCertificateIssuanceTime property: Certificate last issuance time.
             *
             * @param lastCertificateIssuanceTime Certificate last issuance time.
             * @return the next definition stage.
             */
            Update withLastCertificateIssuanceTime(OffsetDateTime lastCertificateIssuanceTime);
        }
        /** The stage of the CertificateOrder update allowing to specify expirationTime. */
        interface WithExpirationTime {
            /**
             * Specifies the expirationTime property: Certificate expiration time.
             *
             * @param expirationTime Certificate expiration time.
             * @return the next definition stage.
             */
            Update withExpirationTime(OffsetDateTime expirationTime);
        }
        /** The stage of the CertificateOrder update allowing to specify kind. */
        interface WithKind {
            /**
             * Specifies the kind property: Kind of resource.
             *
             * @param kind Kind of resource.
             * @return the next definition stage.
             */
            Update withKind(String kind);
        }
        /** The stage of the CertificateOrder update allowing to specify name. */
        interface WithName {
            /**
             * Specifies the name property: Resource Name.
             *
             * @param name Resource Name.
             * @return the next definition stage.
             */
            Update withName(String name);
        }
        /** The stage of the CertificateOrder update allowing to specify type. */
        interface WithType {
            /**
             * Specifies the type property: Resource type.
             *
             * @param type Resource type.
             * @return the next definition stage.
             */
            Update withType(String type);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    CertificateOrder refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    CertificateOrder refresh(Context context);
}
