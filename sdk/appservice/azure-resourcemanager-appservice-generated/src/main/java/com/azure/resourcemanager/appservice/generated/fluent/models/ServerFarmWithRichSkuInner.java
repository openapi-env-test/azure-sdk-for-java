// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.Resource;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.appservice.generated.models.HostingEnvironmentProfile;
import com.azure.resourcemanager.appservice.generated.models.SkuDescription;
import com.azure.resourcemanager.appservice.generated.models.StatusOptions;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** App Service Plan Model. */
@JsonFlatten
@Fluent
public class ServerFarmWithRichSkuInner extends Resource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ServerFarmWithRichSkuInner.class);

    /*
     * Describes a sku for a scalable resource
     */
    @JsonProperty(value = "sku")
    private SkuDescription sku;

    /*
     * Name for the App Service Plan
     */
    @JsonProperty(value = "properties.name")
    private String namePropertiesName;

    /*
     * Target worker tier assigned to the App Service Plan
     */
    @JsonProperty(value = "properties.workerTierName")
    private String workerTierName;

    /*
     * App Service Plan Status
     */
    @JsonProperty(value = "properties.status", access = JsonProperty.Access.WRITE_ONLY)
    private StatusOptions status;

    /*
     * App Service Plan Subscription
     */
    @JsonProperty(value = "properties.subscription", access = JsonProperty.Access.WRITE_ONLY)
    private String subscription;

    /*
     * App Service Plan administration site
     */
    @JsonProperty(value = "properties.adminSiteName")
    private String adminSiteName;

    /*
     * Specification for the hosting environment (App Service Environment) to
     * use for the App Service Plan
     */
    @JsonProperty(value = "properties.hostingEnvironmentProfile")
    private HostingEnvironmentProfile hostingEnvironmentProfile;

    /*
     * Maximum number of instances that can be assigned to this App Service
     * Plan
     */
    @JsonProperty(value = "properties.maximumNumberOfWorkers")
    private Integer maximumNumberOfWorkers;

    /*
     * Geographical location for the App Service Plan
     */
    @JsonProperty(value = "properties.geoRegion", access = JsonProperty.Access.WRITE_ONLY)
    private String geoRegion;

    /*
     * If True apps assigned to this App Service Plan can be scaled
     * independently
     * If False apps assigned to this App Service Plan will scale to all
     * instances of the plan
     */
    @JsonProperty(value = "properties.perSiteScaling")
    private Boolean perSiteScaling;

    /*
     * Number of web apps assigned to this App Service Plan
     */
    @JsonProperty(value = "properties.numberOfSites", access = JsonProperty.Access.WRITE_ONLY)
    private Integer numberOfSites;

    /*
     * Resource group of the server farm
     */
    @JsonProperty(value = "properties.resourceGroup", access = JsonProperty.Access.WRITE_ONLY)
    private String resourceGroup;

    /*
     * Enables creation of a Linux App Service Plan
     */
    @JsonProperty(value = "properties.reserved")
    private Boolean reserved;

    /*
     * Kind of resource
     */
    @JsonProperty(value = "kind")
    private String kind;

    /*
     * Resource Id
     */
    @JsonProperty(value = "id")
    private String id;

    /*
     * Resource Name
     */
    @JsonProperty(value = "name")
    private String name;

    /*
     * Resource type
     */
    @JsonProperty(value = "type")
    private String type;

    /**
     * Get the sku property: Describes a sku for a scalable resource.
     *
     * @return the sku value.
     */
    public SkuDescription sku() {
        return this.sku;
    }

    /**
     * Set the sku property: Describes a sku for a scalable resource.
     *
     * @param sku the sku value to set.
     * @return the ServerFarmWithRichSkuInner object itself.
     */
    public ServerFarmWithRichSkuInner withSku(SkuDescription sku) {
        this.sku = sku;
        return this;
    }

    /**
     * Get the namePropertiesName property: Name for the App Service Plan.
     *
     * @return the namePropertiesName value.
     */
    public String namePropertiesName() {
        return this.namePropertiesName;
    }

    /**
     * Set the namePropertiesName property: Name for the App Service Plan.
     *
     * @param namePropertiesName the namePropertiesName value to set.
     * @return the ServerFarmWithRichSkuInner object itself.
     */
    public ServerFarmWithRichSkuInner withNamePropertiesName(String namePropertiesName) {
        this.namePropertiesName = namePropertiesName;
        return this;
    }

    /**
     * Get the workerTierName property: Target worker tier assigned to the App Service Plan.
     *
     * @return the workerTierName value.
     */
    public String workerTierName() {
        return this.workerTierName;
    }

    /**
     * Set the workerTierName property: Target worker tier assigned to the App Service Plan.
     *
     * @param workerTierName the workerTierName value to set.
     * @return the ServerFarmWithRichSkuInner object itself.
     */
    public ServerFarmWithRichSkuInner withWorkerTierName(String workerTierName) {
        this.workerTierName = workerTierName;
        return this;
    }

    /**
     * Get the status property: App Service Plan Status.
     *
     * @return the status value.
     */
    public StatusOptions status() {
        return this.status;
    }

    /**
     * Get the subscription property: App Service Plan Subscription.
     *
     * @return the subscription value.
     */
    public String subscription() {
        return this.subscription;
    }

    /**
     * Get the adminSiteName property: App Service Plan administration site.
     *
     * @return the adminSiteName value.
     */
    public String adminSiteName() {
        return this.adminSiteName;
    }

    /**
     * Set the adminSiteName property: App Service Plan administration site.
     *
     * @param adminSiteName the adminSiteName value to set.
     * @return the ServerFarmWithRichSkuInner object itself.
     */
    public ServerFarmWithRichSkuInner withAdminSiteName(String adminSiteName) {
        this.adminSiteName = adminSiteName;
        return this;
    }

    /**
     * Get the hostingEnvironmentProfile property: Specification for the hosting environment (App Service Environment)
     * to use for the App Service Plan.
     *
     * @return the hostingEnvironmentProfile value.
     */
    public HostingEnvironmentProfile hostingEnvironmentProfile() {
        return this.hostingEnvironmentProfile;
    }

    /**
     * Set the hostingEnvironmentProfile property: Specification for the hosting environment (App Service Environment)
     * to use for the App Service Plan.
     *
     * @param hostingEnvironmentProfile the hostingEnvironmentProfile value to set.
     * @return the ServerFarmWithRichSkuInner object itself.
     */
    public ServerFarmWithRichSkuInner withHostingEnvironmentProfile(
        HostingEnvironmentProfile hostingEnvironmentProfile) {
        this.hostingEnvironmentProfile = hostingEnvironmentProfile;
        return this;
    }

    /**
     * Get the maximumNumberOfWorkers property: Maximum number of instances that can be assigned to this App Service
     * Plan.
     *
     * @return the maximumNumberOfWorkers value.
     */
    public Integer maximumNumberOfWorkers() {
        return this.maximumNumberOfWorkers;
    }

    /**
     * Set the maximumNumberOfWorkers property: Maximum number of instances that can be assigned to this App Service
     * Plan.
     *
     * @param maximumNumberOfWorkers the maximumNumberOfWorkers value to set.
     * @return the ServerFarmWithRichSkuInner object itself.
     */
    public ServerFarmWithRichSkuInner withMaximumNumberOfWorkers(Integer maximumNumberOfWorkers) {
        this.maximumNumberOfWorkers = maximumNumberOfWorkers;
        return this;
    }

    /**
     * Get the geoRegion property: Geographical location for the App Service Plan.
     *
     * @return the geoRegion value.
     */
    public String geoRegion() {
        return this.geoRegion;
    }

    /**
     * Get the perSiteScaling property: If True apps assigned to this App Service Plan can be scaled independently If
     * False apps assigned to this App Service Plan will scale to all instances of the plan.
     *
     * @return the perSiteScaling value.
     */
    public Boolean perSiteScaling() {
        return this.perSiteScaling;
    }

    /**
     * Set the perSiteScaling property: If True apps assigned to this App Service Plan can be scaled independently If
     * False apps assigned to this App Service Plan will scale to all instances of the plan.
     *
     * @param perSiteScaling the perSiteScaling value to set.
     * @return the ServerFarmWithRichSkuInner object itself.
     */
    public ServerFarmWithRichSkuInner withPerSiteScaling(Boolean perSiteScaling) {
        this.perSiteScaling = perSiteScaling;
        return this;
    }

    /**
     * Get the numberOfSites property: Number of web apps assigned to this App Service Plan.
     *
     * @return the numberOfSites value.
     */
    public Integer numberOfSites() {
        return this.numberOfSites;
    }

    /**
     * Get the resourceGroup property: Resource group of the server farm.
     *
     * @return the resourceGroup value.
     */
    public String resourceGroup() {
        return this.resourceGroup;
    }

    /**
     * Get the reserved property: Enables creation of a Linux App Service Plan.
     *
     * @return the reserved value.
     */
    public Boolean reserved() {
        return this.reserved;
    }

    /**
     * Set the reserved property: Enables creation of a Linux App Service Plan.
     *
     * @param reserved the reserved value to set.
     * @return the ServerFarmWithRichSkuInner object itself.
     */
    public ServerFarmWithRichSkuInner withReserved(Boolean reserved) {
        this.reserved = reserved;
        return this;
    }

    /**
     * Get the kind property: Kind of resource.
     *
     * @return the kind value.
     */
    public String kind() {
        return this.kind;
    }

    /**
     * Set the kind property: Kind of resource.
     *
     * @param kind the kind value to set.
     * @return the ServerFarmWithRichSkuInner object itself.
     */
    public ServerFarmWithRichSkuInner withKind(String kind) {
        this.kind = kind;
        return this;
    }

    /**
     * Get the id property: Resource Id.
     *
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id property: Resource Id.
     *
     * @param id the id value to set.
     * @return the ServerFarmWithRichSkuInner object itself.
     */
    public ServerFarmWithRichSkuInner withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the name property: Resource Name.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Resource Name.
     *
     * @param name the name value to set.
     * @return the ServerFarmWithRichSkuInner object itself.
     */
    public ServerFarmWithRichSkuInner withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the type property: Resource type.
     *
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Set the type property: Resource type.
     *
     * @param type the type value to set.
     * @return the ServerFarmWithRichSkuInner object itself.
     */
    public ServerFarmWithRichSkuInner withType(String type) {
        this.type = type;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ServerFarmWithRichSkuInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ServerFarmWithRichSkuInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (sku() != null) {
            sku().validate();
        }
        if (hostingEnvironmentProfile() != null) {
            hostingEnvironmentProfile().validate();
        }
    }
}
