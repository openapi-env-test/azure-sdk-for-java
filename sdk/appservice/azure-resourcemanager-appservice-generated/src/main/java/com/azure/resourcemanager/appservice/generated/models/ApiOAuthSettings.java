// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.Map;

/** OAuth settings for the connection provider. */
@Fluent
public final class ApiOAuthSettings {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ApiOAuthSettings.class);

    /*
     * Identity provider
     */
    @JsonProperty(value = "identityProvider")
    private String identityProvider;

    /*
     * Resource provider client id
     */
    @JsonProperty(value = "clientId")
    private String clientId;

    /*
     * Client Secret needed for OAuth
     */
    @JsonProperty(value = "clientSecret")
    private String clientSecret;

    /*
     * OAuth scopes
     */
    @JsonProperty(value = "scopes")
    private List<String> scopes;

    /*
     * Url
     */
    @JsonProperty(value = "redirectUrl")
    private String redirectUrl;

    /*
     * Read only properties for this oauth setting.
     */
    @JsonProperty(value = "properties")
    private Object properties;

    /*
     * OAuth parameters key is the name of parameter
     */
    @JsonProperty(value = "customParameters")
    private Map<String, ApiOAuthSettingsParameter> customParameters;

    /**
     * Get the identityProvider property: Identity provider.
     *
     * @return the identityProvider value.
     */
    public String identityProvider() {
        return this.identityProvider;
    }

    /**
     * Set the identityProvider property: Identity provider.
     *
     * @param identityProvider the identityProvider value to set.
     * @return the ApiOAuthSettings object itself.
     */
    public ApiOAuthSettings withIdentityProvider(String identityProvider) {
        this.identityProvider = identityProvider;
        return this;
    }

    /**
     * Get the clientId property: Resource provider client id.
     *
     * @return the clientId value.
     */
    public String clientId() {
        return this.clientId;
    }

    /**
     * Set the clientId property: Resource provider client id.
     *
     * @param clientId the clientId value to set.
     * @return the ApiOAuthSettings object itself.
     */
    public ApiOAuthSettings withClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }

    /**
     * Get the clientSecret property: Client Secret needed for OAuth.
     *
     * @return the clientSecret value.
     */
    public String clientSecret() {
        return this.clientSecret;
    }

    /**
     * Set the clientSecret property: Client Secret needed for OAuth.
     *
     * @param clientSecret the clientSecret value to set.
     * @return the ApiOAuthSettings object itself.
     */
    public ApiOAuthSettings withClientSecret(String clientSecret) {
        this.clientSecret = clientSecret;
        return this;
    }

    /**
     * Get the scopes property: OAuth scopes.
     *
     * @return the scopes value.
     */
    public List<String> scopes() {
        return this.scopes;
    }

    /**
     * Set the scopes property: OAuth scopes.
     *
     * @param scopes the scopes value to set.
     * @return the ApiOAuthSettings object itself.
     */
    public ApiOAuthSettings withScopes(List<String> scopes) {
        this.scopes = scopes;
        return this;
    }

    /**
     * Get the redirectUrl property: Url.
     *
     * @return the redirectUrl value.
     */
    public String redirectUrl() {
        return this.redirectUrl;
    }

    /**
     * Set the redirectUrl property: Url.
     *
     * @param redirectUrl the redirectUrl value to set.
     * @return the ApiOAuthSettings object itself.
     */
    public ApiOAuthSettings withRedirectUrl(String redirectUrl) {
        this.redirectUrl = redirectUrl;
        return this;
    }

    /**
     * Get the properties property: Read only properties for this oauth setting.
     *
     * @return the properties value.
     */
    public Object properties() {
        return this.properties;
    }

    /**
     * Set the properties property: Read only properties for this oauth setting.
     *
     * @param properties the properties value to set.
     * @return the ApiOAuthSettings object itself.
     */
    public ApiOAuthSettings withProperties(Object properties) {
        this.properties = properties;
        return this;
    }

    /**
     * Get the customParameters property: OAuth parameters key is the name of parameter.
     *
     * @return the customParameters value.
     */
    public Map<String, ApiOAuthSettingsParameter> customParameters() {
        return this.customParameters;
    }

    /**
     * Set the customParameters property: OAuth parameters key is the name of parameter.
     *
     * @param customParameters the customParameters value to set.
     * @return the ApiOAuthSettings object itself.
     */
    public ApiOAuthSettings withCustomParameters(Map<String, ApiOAuthSettingsParameter> customParameters) {
        this.customParameters = customParameters;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (customParameters() != null) {
            customParameters()
                .values()
                .forEach(
                    e -> {
                        if (e != null) {
                            e.validate();
                        }
                    });
        }
    }
}
