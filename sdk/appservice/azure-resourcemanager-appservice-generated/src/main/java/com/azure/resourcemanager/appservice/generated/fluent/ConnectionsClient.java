// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.appservice.generated.fluent.models.ConnectionInner;
import com.azure.resourcemanager.appservice.generated.fluent.models.ConnectionSecretsInner;
import com.azure.resourcemanager.appservice.generated.fluent.models.ConsentLinkPayloadInner;
import com.azure.resourcemanager.appservice.generated.models.ConfirmConsentCodeInput;
import com.azure.resourcemanager.appservice.generated.models.ConsentLinkInput;
import com.azure.resourcemanager.appservice.generated.models.ListConnectionKeysInput;

/** An instance of this class provides access to all the operations defined in ConnectionsClient. */
public interface ConnectionsClient {
    /**
     * Gets a list of connections.
     *
     * @param resourceGroupName Resource Group Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of connections.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ConnectionInner> listByResourceGroup(String resourceGroupName);

    /**
     * Gets a list of connections.
     *
     * @param resourceGroupName Resource Group Name.
     * @param top The number of items to be included in the result.
     * @param filter The filter to apply on the operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of connections.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ConnectionInner> listByResourceGroup(
        String resourceGroupName, Integer top, String filter, Context context);

    /**
     * Gets a connection.
     *
     * @param resourceGroupName The resource group name.
     * @param connectionName The connection name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a connection.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ConnectionInner getByResourceGroup(String resourceGroupName, String connectionName);

    /**
     * Gets a connection.
     *
     * @param resourceGroupName The resource group name.
     * @param connectionName The connection name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a connection.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ConnectionInner> getByResourceGroupWithResponse(
        String resourceGroupName, String connectionName, Context context);

    /**
     * Creates or updates a connection.
     *
     * @param resourceGroupName The resource group name.
     * @param connectionName The connection name.
     * @param connection The connection.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return aPI Connection.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ConnectionInner createOrUpdate(String resourceGroupName, String connectionName, ConnectionInner connection);

    /**
     * Creates or updates a connection.
     *
     * @param resourceGroupName The resource group name.
     * @param connectionName The connection name.
     * @param connection The connection.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return aPI Connection.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ConnectionInner> createOrUpdateWithResponse(
        String resourceGroupName, String connectionName, ConnectionInner connection, Context context);

    /**
     * Deletes a connection.
     *
     * @param resourceGroupName The resource group name.
     * @param connectionName The connection name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String connectionName);

    /**
     * Deletes a connection.
     *
     * @param resourceGroupName The resource group name.
     * @param connectionName The connection name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(String resourceGroupName, String connectionName, Context context);

    /**
     * Lists consent links of a connection.
     *
     * @param resourceGroupName The resource group name.
     * @param connectionName The connection name.
     * @param content The content.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of consent links.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ConsentLinkPayloadInner listConsentLinks(String resourceGroupName, String connectionName, ConsentLinkInput content);

    /**
     * Lists consent links of a connection.
     *
     * @param resourceGroupName The resource group name.
     * @param connectionName The connection name.
     * @param content The content.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of consent links.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ConsentLinkPayloadInner> listConsentLinksWithResponse(
        String resourceGroupName, String connectionName, ConsentLinkInput content, Context context);

    /**
     * Confirms consent code of a connection.
     *
     * @param resourceGroupName The resource group name.
     * @param connectionName The connection name.
     * @param content The content.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return aPI Connection.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ConnectionInner confirmConsentCode(
        String resourceGroupName, String connectionName, ConfirmConsentCodeInput content);

    /**
     * Confirms consent code of a connection.
     *
     * @param resourceGroupName The resource group name.
     * @param connectionName The connection name.
     * @param content The content.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return aPI Connection.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ConnectionInner> confirmConsentCodeWithResponse(
        String resourceGroupName, String connectionName, ConfirmConsentCodeInput content, Context context);

    /**
     * Lists connection keys.
     *
     * @param resourceGroupName The resource group name.
     * @param connectionName The connection name.
     * @param content The content.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ConnectionSecretsInner listConnectionKeys(
        String resourceGroupName, String connectionName, ListConnectionKeysInput content);

    /**
     * Lists connection keys.
     *
     * @param resourceGroupName The resource group name.
     * @param connectionName The connection name.
     * @param content The content.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ConnectionSecretsInner> listConnectionKeysWithResponse(
        String resourceGroupName, String connectionName, ListConnectionKeysInput content, Context context);
}
