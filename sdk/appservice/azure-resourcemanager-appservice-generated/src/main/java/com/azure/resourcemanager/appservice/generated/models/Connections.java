// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of Connections. */
public interface Connections {
    /**
     * Gets a list of connections.
     *
     * @param resourceGroupName Resource Group Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of connections.
     */
    PagedIterable<Connection> listByResourceGroup(String resourceGroupName);

    /**
     * Gets a list of connections.
     *
     * @param resourceGroupName Resource Group Name.
     * @param top The number of items to be included in the result.
     * @param filter The filter to apply on the operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of connections.
     */
    PagedIterable<Connection> listByResourceGroup(
        String resourceGroupName, Integer top, String filter, Context context);

    /**
     * Gets a connection.
     *
     * @param resourceGroupName The resource group name.
     * @param connectionName The connection name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a connection.
     */
    Connection getByResourceGroup(String resourceGroupName, String connectionName);

    /**
     * Gets a connection.
     *
     * @param resourceGroupName The resource group name.
     * @param connectionName The connection name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a connection.
     */
    Response<Connection> getByResourceGroupWithResponse(
        String resourceGroupName, String connectionName, Context context);

    /**
     * Deletes a connection.
     *
     * @param resourceGroupName The resource group name.
     * @param connectionName The connection name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String connectionName);

    /**
     * Deletes a connection.
     *
     * @param resourceGroupName The resource group name.
     * @param connectionName The connection name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    Response<Void> deleteWithResponse(String resourceGroupName, String connectionName, Context context);

    /**
     * Lists consent links of a connection.
     *
     * @param resourceGroupName The resource group name.
     * @param connectionName The connection name.
     * @param content The content.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of consent links.
     */
    ConsentLinkPayload listConsentLinks(String resourceGroupName, String connectionName, ConsentLinkInput content);

    /**
     * Lists consent links of a connection.
     *
     * @param resourceGroupName The resource group name.
     * @param connectionName The connection name.
     * @param content The content.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of consent links.
     */
    Response<ConsentLinkPayload> listConsentLinksWithResponse(
        String resourceGroupName, String connectionName, ConsentLinkInput content, Context context);

    /**
     * Confirms consent code of a connection.
     *
     * @param resourceGroupName The resource group name.
     * @param connectionName The connection name.
     * @param content The content.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return aPI Connection.
     */
    Connection confirmConsentCode(String resourceGroupName, String connectionName, ConfirmConsentCodeInput content);

    /**
     * Confirms consent code of a connection.
     *
     * @param resourceGroupName The resource group name.
     * @param connectionName The connection name.
     * @param content The content.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return aPI Connection.
     */
    Response<Connection> confirmConsentCodeWithResponse(
        String resourceGroupName, String connectionName, ConfirmConsentCodeInput content, Context context);

    /**
     * Lists connection keys.
     *
     * @param resourceGroupName The resource group name.
     * @param connectionName The connection name.
     * @param content The content.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    ConnectionSecrets listConnectionKeys(
        String resourceGroupName, String connectionName, ListConnectionKeysInput content);

    /**
     * Lists connection keys.
     *
     * @param resourceGroupName The resource group name.
     * @param connectionName The connection name.
     * @param content The content.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    Response<ConnectionSecrets> listConnectionKeysWithResponse(
        String resourceGroupName, String connectionName, ListConnectionKeysInput content, Context context);

    /**
     * Gets a connection.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a connection.
     */
    Connection getById(String id);

    /**
     * Gets a connection.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a connection.
     */
    Response<Connection> getByIdWithResponse(String id, Context context);

    /**
     * Deletes a connection.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes a connection.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    Response<Void> deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new Connection resource.
     *
     * @param name resource name.
     * @return the first stage of the new Connection definition.
     */
    Connection.DefinitionStages.Blank define(String name);
}
