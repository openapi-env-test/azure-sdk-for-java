// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.Resource;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.appservice.generated.models.ConnectionStatus;
import com.azure.resourcemanager.appservice.generated.models.ParameterCustomLoginSettingValues;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Map;

/** API Connection. */
@JsonFlatten
@Fluent
public class ConnectionInner extends Resource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ConnectionInner.class);

    /*
     * connection name
     */
    @JsonProperty(value = "properties.name")
    private String namePropertiesName;

    /*
     * display name
     */
    @JsonProperty(value = "properties.displayName")
    private String displayName;

    /*
     * Status of the connection
     */
    @JsonProperty(value = "properties.statuses")
    private List<ConnectionStatus> statuses;

    /*
     * Custom login setting values.
     */
    @JsonProperty(value = "properties.customParameterValues")
    private Map<String, ParameterCustomLoginSettingValues> customParameterValues;

    /*
     * The tenantId property.
     */
    @JsonProperty(value = "properties.tenantId")
    private String tenantId;

    /*
     * Tokens/Claim
     */
    @JsonProperty(value = "properties.parameterValues")
    private Map<String, Object> parameterValues;

    /*
     * Tokens/Claim
     */
    @JsonProperty(value = "properties.nonSecretParameterValues")
    private Map<String, Object> nonSecretParameterValues;

    /*
     * Any object
     */
    @JsonProperty(value = "properties.metadata")
    private Object metadata;

    /*
     * Time in UTC when the first expiration of OAuth tokens
     */
    @JsonProperty(value = "properties.firstExpirationTime")
    private OffsetDateTime firstExpirationTime;

    /*
     * List of Keywords that tag the acl
     */
    @JsonProperty(value = "properties.keywords")
    private List<String> keywords;

    /*
     * Timestamp of the connection creation
     */
    @JsonProperty(value = "properties.createdTime")
    private OffsetDateTime createdTime;

    /*
     * Timestamp of last connection change.
     */
    @JsonProperty(value = "properties.changedTime")
    private OffsetDateTime changedTime;

    /*
     * expanded connection provider name
     */
    @JsonProperty(value = "properties.api")
    private ExpandedParentApiEntityInner api;

    /*
     * Kind of resource
     */
    @JsonProperty(value = "kind")
    private String kind;

    /*
     * Resource Id
     */
    @JsonProperty(value = "id")
    private String id;

    /*
     * Resource Name
     */
    @JsonProperty(value = "name")
    private String name;

    /*
     * Resource type
     */
    @JsonProperty(value = "type")
    private String type;

    /**
     * Get the namePropertiesName property: connection name.
     *
     * @return the namePropertiesName value.
     */
    public String namePropertiesName() {
        return this.namePropertiesName;
    }

    /**
     * Set the namePropertiesName property: connection name.
     *
     * @param namePropertiesName the namePropertiesName value to set.
     * @return the ConnectionInner object itself.
     */
    public ConnectionInner withNamePropertiesName(String namePropertiesName) {
        this.namePropertiesName = namePropertiesName;
        return this;
    }

    /**
     * Get the displayName property: display name.
     *
     * @return the displayName value.
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Set the displayName property: display name.
     *
     * @param displayName the displayName value to set.
     * @return the ConnectionInner object itself.
     */
    public ConnectionInner withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get the statuses property: Status of the connection.
     *
     * @return the statuses value.
     */
    public List<ConnectionStatus> statuses() {
        return this.statuses;
    }

    /**
     * Set the statuses property: Status of the connection.
     *
     * @param statuses the statuses value to set.
     * @return the ConnectionInner object itself.
     */
    public ConnectionInner withStatuses(List<ConnectionStatus> statuses) {
        this.statuses = statuses;
        return this;
    }

    /**
     * Get the customParameterValues property: Custom login setting values.
     *
     * @return the customParameterValues value.
     */
    public Map<String, ParameterCustomLoginSettingValues> customParameterValues() {
        return this.customParameterValues;
    }

    /**
     * Set the customParameterValues property: Custom login setting values.
     *
     * @param customParameterValues the customParameterValues value to set.
     * @return the ConnectionInner object itself.
     */
    public ConnectionInner withCustomParameterValues(
        Map<String, ParameterCustomLoginSettingValues> customParameterValues) {
        this.customParameterValues = customParameterValues;
        return this;
    }

    /**
     * Get the tenantId property: The tenantId property.
     *
     * @return the tenantId value.
     */
    public String tenantId() {
        return this.tenantId;
    }

    /**
     * Set the tenantId property: The tenantId property.
     *
     * @param tenantId the tenantId value to set.
     * @return the ConnectionInner object itself.
     */
    public ConnectionInner withTenantId(String tenantId) {
        this.tenantId = tenantId;
        return this;
    }

    /**
     * Get the parameterValues property: Tokens/Claim.
     *
     * @return the parameterValues value.
     */
    public Map<String, Object> parameterValues() {
        return this.parameterValues;
    }

    /**
     * Set the parameterValues property: Tokens/Claim.
     *
     * @param parameterValues the parameterValues value to set.
     * @return the ConnectionInner object itself.
     */
    public ConnectionInner withParameterValues(Map<String, Object> parameterValues) {
        this.parameterValues = parameterValues;
        return this;
    }

    /**
     * Get the nonSecretParameterValues property: Tokens/Claim.
     *
     * @return the nonSecretParameterValues value.
     */
    public Map<String, Object> nonSecretParameterValues() {
        return this.nonSecretParameterValues;
    }

    /**
     * Set the nonSecretParameterValues property: Tokens/Claim.
     *
     * @param nonSecretParameterValues the nonSecretParameterValues value to set.
     * @return the ConnectionInner object itself.
     */
    public ConnectionInner withNonSecretParameterValues(Map<String, Object> nonSecretParameterValues) {
        this.nonSecretParameterValues = nonSecretParameterValues;
        return this;
    }

    /**
     * Get the metadata property: Any object.
     *
     * @return the metadata value.
     */
    public Object metadata() {
        return this.metadata;
    }

    /**
     * Set the metadata property: Any object.
     *
     * @param metadata the metadata value to set.
     * @return the ConnectionInner object itself.
     */
    public ConnectionInner withMetadata(Object metadata) {
        this.metadata = metadata;
        return this;
    }

    /**
     * Get the firstExpirationTime property: Time in UTC when the first expiration of OAuth tokens.
     *
     * @return the firstExpirationTime value.
     */
    public OffsetDateTime firstExpirationTime() {
        return this.firstExpirationTime;
    }

    /**
     * Set the firstExpirationTime property: Time in UTC when the first expiration of OAuth tokens.
     *
     * @param firstExpirationTime the firstExpirationTime value to set.
     * @return the ConnectionInner object itself.
     */
    public ConnectionInner withFirstExpirationTime(OffsetDateTime firstExpirationTime) {
        this.firstExpirationTime = firstExpirationTime;
        return this;
    }

    /**
     * Get the keywords property: List of Keywords that tag the acl.
     *
     * @return the keywords value.
     */
    public List<String> keywords() {
        return this.keywords;
    }

    /**
     * Set the keywords property: List of Keywords that tag the acl.
     *
     * @param keywords the keywords value to set.
     * @return the ConnectionInner object itself.
     */
    public ConnectionInner withKeywords(List<String> keywords) {
        this.keywords = keywords;
        return this;
    }

    /**
     * Get the createdTime property: Timestamp of the connection creation.
     *
     * @return the createdTime value.
     */
    public OffsetDateTime createdTime() {
        return this.createdTime;
    }

    /**
     * Set the createdTime property: Timestamp of the connection creation.
     *
     * @param createdTime the createdTime value to set.
     * @return the ConnectionInner object itself.
     */
    public ConnectionInner withCreatedTime(OffsetDateTime createdTime) {
        this.createdTime = createdTime;
        return this;
    }

    /**
     * Get the changedTime property: Timestamp of last connection change.
     *
     * @return the changedTime value.
     */
    public OffsetDateTime changedTime() {
        return this.changedTime;
    }

    /**
     * Set the changedTime property: Timestamp of last connection change.
     *
     * @param changedTime the changedTime value to set.
     * @return the ConnectionInner object itself.
     */
    public ConnectionInner withChangedTime(OffsetDateTime changedTime) {
        this.changedTime = changedTime;
        return this;
    }

    /**
     * Get the api property: expanded connection provider name.
     *
     * @return the api value.
     */
    public ExpandedParentApiEntityInner api() {
        return this.api;
    }

    /**
     * Set the api property: expanded connection provider name.
     *
     * @param api the api value to set.
     * @return the ConnectionInner object itself.
     */
    public ConnectionInner withApi(ExpandedParentApiEntityInner api) {
        this.api = api;
        return this;
    }

    /**
     * Get the kind property: Kind of resource.
     *
     * @return the kind value.
     */
    public String kind() {
        return this.kind;
    }

    /**
     * Set the kind property: Kind of resource.
     *
     * @param kind the kind value to set.
     * @return the ConnectionInner object itself.
     */
    public ConnectionInner withKind(String kind) {
        this.kind = kind;
        return this;
    }

    /**
     * Get the id property: Resource Id.
     *
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id property: Resource Id.
     *
     * @param id the id value to set.
     * @return the ConnectionInner object itself.
     */
    public ConnectionInner withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the name property: Resource Name.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Resource Name.
     *
     * @param name the name value to set.
     * @return the ConnectionInner object itself.
     */
    public ConnectionInner withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the type property: Resource type.
     *
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Set the type property: Resource type.
     *
     * @param type the type value to set.
     * @return the ConnectionInner object itself.
     */
    public ConnectionInner withType(String type) {
        this.type = type;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ConnectionInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ConnectionInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (statuses() != null) {
            statuses().forEach(e -> e.validate());
        }
        if (customParameterValues() != null) {
            customParameterValues()
                .values()
                .forEach(
                    e -> {
                        if (e != null) {
                            e.validate();
                        }
                    });
        }
        if (api() != null) {
            api().validate();
        }
    }
}
