// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.appservice.generated.fluent.models.RecommendationRuleInner;

/** An instance of this class provides access to all the operations defined in RecommendationsClient. */
public interface RecommendationsClient {
    /**
     * Gets a list of recommendations associated with the specified subscription.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of recommendations associated with the specified subscription.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Object getRecommendationBySubscription();

    /**
     * Gets a list of recommendations associated with the specified subscription.
     *
     * @param featured If set, this API returns only the most critical recommendation among the others. Otherwise this
     *     API returns all recommendations available.
     * @param filter Return only channels specified in the filter. Filter is specified by using OData syntax. Example:
     *     $filter=channels eq 'Api' or channel eq 'Notification'.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of recommendations associated with the specified subscription.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Object> getRecommendationBySubscriptionWithResponse(Boolean featured, String filter, Context context);

    /**
     * Gets the detailed properties of the recommendation object for the specified web site.
     *
     * @param resourceGroupName Resource group name.
     * @param siteName Site name.
     * @param name Recommendation rule name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the detailed properties of the recommendation object for the specified web site.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    RecommendationRuleInner getRuleDetailsBySiteName(String resourceGroupName, String siteName, String name);

    /**
     * Gets the detailed properties of the recommendation object for the specified web site.
     *
     * @param resourceGroupName Resource group name.
     * @param siteName Site name.
     * @param name Recommendation rule name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the detailed properties of the recommendation object for the specified web site.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<RecommendationRuleInner> getRuleDetailsBySiteNameWithResponse(
        String resourceGroupName, String siteName, String name, Context context);

    /**
     * Gets a list of recommendations associated with the specified web site.
     *
     * @param resourceGroupName Resource group name.
     * @param siteName Site name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of recommendations associated with the specified web site.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Object getRecommendedRulesForSite(String resourceGroupName, String siteName);

    /**
     * Gets a list of recommendations associated with the specified web site.
     *
     * @param resourceGroupName Resource group name.
     * @param siteName Site name.
     * @param featured If set, this API returns only the most critical recommendation among the others. Otherwise this
     *     API returns all recommendations available.
     * @param siteSku The name of site SKU.
     * @param numSlots The number of site slots associated to the site.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of recommendations associated with the specified web site.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Object> getRecommendedRulesForSiteWithResponse(
        String resourceGroupName, String siteName, Boolean featured, String siteSku, Integer numSlots, Context context);

    /**
     * Gets the list of past recommendations optionally specified by the time range.
     *
     * @param resourceGroupName Resource group name.
     * @param siteName Site name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of past recommendations optionally specified by the time range.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Object getRecommendationHistoryForSite(String resourceGroupName, String siteName);

    /**
     * Gets the list of past recommendations optionally specified by the time range.
     *
     * @param resourceGroupName Resource group name.
     * @param siteName Site name.
     * @param startTime The start time of a time range to query, e.g. $filter=startTime eq '2015-01-01T00:00:00Z' and
     *     endTime eq '2015-01-02T00:00:00Z'.
     * @param endTime The end time of a time range to query, e.g. $filter=startTime eq '2015-01-01T00:00:00Z' and
     *     endTime eq '2015-01-02T00:00:00Z'.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the list of past recommendations optionally specified by the time range.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Object> getRecommendationHistoryForSiteWithResponse(
        String resourceGroupName, String siteName, String startTime, String endTime, Context context);
}
