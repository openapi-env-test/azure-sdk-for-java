// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.Resource;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.appservice.generated.models.ApiPolicies;
import com.azure.resourcemanager.appservice.generated.models.BackendServiceDefinition;
import com.azure.resourcemanager.appservice.generated.models.ConnectionParameter;
import com.azure.resourcemanager.appservice.generated.models.GeneralApiInformation;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Map;

/** API Management. */
@JsonFlatten
@Fluent
public class ApiEntityInner extends Resource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ApiEntityInner.class);

    /*
     * Name of the API
     * the URL path of this API when exposed via APIM
     */
    @JsonProperty(value = "properties.name")
    private String namePropertiesName;

    /*
     * the URL path of this API when exposed via APIM
     */
    @JsonProperty(value = "properties.generalInformation")
    private GeneralApiInformation generalInformation;

    /*
     * the URL path of this API when exposed via APIM
     */
    @JsonProperty(value = "properties.path")
    private String path;

    /*
     * Read only property returning the runtime endpoints where the API can be
     * called
     */
    @JsonProperty(value = "properties.runtimeUrls")
    private List<String> runtimeUrls;

    /*
     * Protocols supported by the front end - http/https
     */
    @JsonProperty(value = "properties.protocols")
    private List<String> protocols;

    /*
     * API policies
     */
    @JsonProperty(value = "properties.policies")
    private ApiPolicies policies;

    /*
     * Backend service definition
     */
    @JsonProperty(value = "properties.backendService")
    private BackendServiceDefinition backendService;

    /*
     * API definition Url - url where the swagger can be downloaded from
     */
    @JsonProperty(value = "properties.apiDefinitionUrl")
    private String apiDefinitionUrl;

    /*
     * Free form object for the data caller wants to store
     */
    @JsonProperty(value = "properties.metadata")
    private Object metadata;

    /*
     * Capabilities
     */
    @JsonProperty(value = "properties.capabilities")
    private List<String> capabilities;

    /*
     * Connection parameters
     */
    @JsonProperty(value = "properties.connectionParameters")
    private Map<String, ConnectionParameter> connectionParameters;

    /*
     * Timestamp of the connection creation
     */
    @JsonProperty(value = "properties.createdTime")
    private OffsetDateTime createdTime;

    /*
     * Timestamp of last connection change.
     */
    @JsonProperty(value = "properties.changedTime")
    private OffsetDateTime changedTime;

    /*
     * Kind of resource
     */
    @JsonProperty(value = "kind")
    private String kind;

    /*
     * Resource Id
     */
    @JsonProperty(value = "id")
    private String id;

    /*
     * Resource Name
     */
    @JsonProperty(value = "name")
    private String name;

    /*
     * Resource type
     */
    @JsonProperty(value = "type")
    private String type;

    /**
     * Get the namePropertiesName property: Name of the API the URL path of this API when exposed via APIM.
     *
     * @return the namePropertiesName value.
     */
    public String namePropertiesName() {
        return this.namePropertiesName;
    }

    /**
     * Set the namePropertiesName property: Name of the API the URL path of this API when exposed via APIM.
     *
     * @param namePropertiesName the namePropertiesName value to set.
     * @return the ApiEntityInner object itself.
     */
    public ApiEntityInner withNamePropertiesName(String namePropertiesName) {
        this.namePropertiesName = namePropertiesName;
        return this;
    }

    /**
     * Get the generalInformation property: the URL path of this API when exposed via APIM.
     *
     * @return the generalInformation value.
     */
    public GeneralApiInformation generalInformation() {
        return this.generalInformation;
    }

    /**
     * Set the generalInformation property: the URL path of this API when exposed via APIM.
     *
     * @param generalInformation the generalInformation value to set.
     * @return the ApiEntityInner object itself.
     */
    public ApiEntityInner withGeneralInformation(GeneralApiInformation generalInformation) {
        this.generalInformation = generalInformation;
        return this;
    }

    /**
     * Get the path property: the URL path of this API when exposed via APIM.
     *
     * @return the path value.
     */
    public String path() {
        return this.path;
    }

    /**
     * Set the path property: the URL path of this API when exposed via APIM.
     *
     * @param path the path value to set.
     * @return the ApiEntityInner object itself.
     */
    public ApiEntityInner withPath(String path) {
        this.path = path;
        return this;
    }

    /**
     * Get the runtimeUrls property: Read only property returning the runtime endpoints where the API can be called.
     *
     * @return the runtimeUrls value.
     */
    public List<String> runtimeUrls() {
        return this.runtimeUrls;
    }

    /**
     * Set the runtimeUrls property: Read only property returning the runtime endpoints where the API can be called.
     *
     * @param runtimeUrls the runtimeUrls value to set.
     * @return the ApiEntityInner object itself.
     */
    public ApiEntityInner withRuntimeUrls(List<String> runtimeUrls) {
        this.runtimeUrls = runtimeUrls;
        return this;
    }

    /**
     * Get the protocols property: Protocols supported by the front end - http/https.
     *
     * @return the protocols value.
     */
    public List<String> protocols() {
        return this.protocols;
    }

    /**
     * Set the protocols property: Protocols supported by the front end - http/https.
     *
     * @param protocols the protocols value to set.
     * @return the ApiEntityInner object itself.
     */
    public ApiEntityInner withProtocols(List<String> protocols) {
        this.protocols = protocols;
        return this;
    }

    /**
     * Get the policies property: API policies.
     *
     * @return the policies value.
     */
    public ApiPolicies policies() {
        return this.policies;
    }

    /**
     * Set the policies property: API policies.
     *
     * @param policies the policies value to set.
     * @return the ApiEntityInner object itself.
     */
    public ApiEntityInner withPolicies(ApiPolicies policies) {
        this.policies = policies;
        return this;
    }

    /**
     * Get the backendService property: Backend service definition.
     *
     * @return the backendService value.
     */
    public BackendServiceDefinition backendService() {
        return this.backendService;
    }

    /**
     * Set the backendService property: Backend service definition.
     *
     * @param backendService the backendService value to set.
     * @return the ApiEntityInner object itself.
     */
    public ApiEntityInner withBackendService(BackendServiceDefinition backendService) {
        this.backendService = backendService;
        return this;
    }

    /**
     * Get the apiDefinitionUrl property: API definition Url - url where the swagger can be downloaded from.
     *
     * @return the apiDefinitionUrl value.
     */
    public String apiDefinitionUrl() {
        return this.apiDefinitionUrl;
    }

    /**
     * Set the apiDefinitionUrl property: API definition Url - url where the swagger can be downloaded from.
     *
     * @param apiDefinitionUrl the apiDefinitionUrl value to set.
     * @return the ApiEntityInner object itself.
     */
    public ApiEntityInner withApiDefinitionUrl(String apiDefinitionUrl) {
        this.apiDefinitionUrl = apiDefinitionUrl;
        return this;
    }

    /**
     * Get the metadata property: Free form object for the data caller wants to store.
     *
     * @return the metadata value.
     */
    public Object metadata() {
        return this.metadata;
    }

    /**
     * Set the metadata property: Free form object for the data caller wants to store.
     *
     * @param metadata the metadata value to set.
     * @return the ApiEntityInner object itself.
     */
    public ApiEntityInner withMetadata(Object metadata) {
        this.metadata = metadata;
        return this;
    }

    /**
     * Get the capabilities property: Capabilities.
     *
     * @return the capabilities value.
     */
    public List<String> capabilities() {
        return this.capabilities;
    }

    /**
     * Set the capabilities property: Capabilities.
     *
     * @param capabilities the capabilities value to set.
     * @return the ApiEntityInner object itself.
     */
    public ApiEntityInner withCapabilities(List<String> capabilities) {
        this.capabilities = capabilities;
        return this;
    }

    /**
     * Get the connectionParameters property: Connection parameters.
     *
     * @return the connectionParameters value.
     */
    public Map<String, ConnectionParameter> connectionParameters() {
        return this.connectionParameters;
    }

    /**
     * Set the connectionParameters property: Connection parameters.
     *
     * @param connectionParameters the connectionParameters value to set.
     * @return the ApiEntityInner object itself.
     */
    public ApiEntityInner withConnectionParameters(Map<String, ConnectionParameter> connectionParameters) {
        this.connectionParameters = connectionParameters;
        return this;
    }

    /**
     * Get the createdTime property: Timestamp of the connection creation.
     *
     * @return the createdTime value.
     */
    public OffsetDateTime createdTime() {
        return this.createdTime;
    }

    /**
     * Set the createdTime property: Timestamp of the connection creation.
     *
     * @param createdTime the createdTime value to set.
     * @return the ApiEntityInner object itself.
     */
    public ApiEntityInner withCreatedTime(OffsetDateTime createdTime) {
        this.createdTime = createdTime;
        return this;
    }

    /**
     * Get the changedTime property: Timestamp of last connection change.
     *
     * @return the changedTime value.
     */
    public OffsetDateTime changedTime() {
        return this.changedTime;
    }

    /**
     * Set the changedTime property: Timestamp of last connection change.
     *
     * @param changedTime the changedTime value to set.
     * @return the ApiEntityInner object itself.
     */
    public ApiEntityInner withChangedTime(OffsetDateTime changedTime) {
        this.changedTime = changedTime;
        return this;
    }

    /**
     * Get the kind property: Kind of resource.
     *
     * @return the kind value.
     */
    public String kind() {
        return this.kind;
    }

    /**
     * Set the kind property: Kind of resource.
     *
     * @param kind the kind value to set.
     * @return the ApiEntityInner object itself.
     */
    public ApiEntityInner withKind(String kind) {
        this.kind = kind;
        return this;
    }

    /**
     * Get the id property: Resource Id.
     *
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id property: Resource Id.
     *
     * @param id the id value to set.
     * @return the ApiEntityInner object itself.
     */
    public ApiEntityInner withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the name property: Resource Name.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Resource Name.
     *
     * @param name the name value to set.
     * @return the ApiEntityInner object itself.
     */
    public ApiEntityInner withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the type property: Resource type.
     *
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Set the type property: Resource type.
     *
     * @param type the type value to set.
     * @return the ApiEntityInner object itself.
     */
    public ApiEntityInner withType(String type) {
        this.type = type;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ApiEntityInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ApiEntityInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (generalInformation() != null) {
            generalInformation().validate();
        }
        if (policies() != null) {
            policies().validate();
        }
        if (backendService() != null) {
            backendService().validate();
        }
        if (connectionParameters() != null) {
            connectionParameters()
                .values()
                .forEach(
                    e -> {
                        if (e != null) {
                            e.validate();
                        }
                    });
        }
    }
}
