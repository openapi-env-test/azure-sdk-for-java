// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.Resource;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** Certificate signing request object. */
@JsonFlatten
@Fluent
public class CsrInner extends Resource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(CsrInner.class);

    /*
     * Name used to locate CSR object
     */
    @JsonProperty(value = "properties.name")
    private String namePropertiesName;

    /*
     * Distinguished name of certificate to be created
     */
    @JsonProperty(value = "properties.distinguishedName")
    private String distinguishedName;

    /*
     * Actual CSR string created
     */
    @JsonProperty(value = "properties.csrString")
    private String csrString;

    /*
     * PFX certificate of created certificate
     */
    @JsonProperty(value = "properties.pfxBlob")
    private String pfxBlob;

    /*
     * PFX password
     */
    @JsonProperty(value = "properties.password")
    private String password;

    /*
     * Hash of the certificates public key
     */
    @JsonProperty(value = "properties.publicKeyHash")
    private String publicKeyHash;

    /*
     * Hosting environment
     */
    @JsonProperty(value = "properties.hostingEnvironment")
    private String hostingEnvironment;

    /*
     * Kind of resource
     */
    @JsonProperty(value = "kind")
    private String kind;

    /*
     * Resource Id
     */
    @JsonProperty(value = "id")
    private String id;

    /*
     * Resource Name
     */
    @JsonProperty(value = "name")
    private String name;

    /*
     * Resource type
     */
    @JsonProperty(value = "type")
    private String type;

    /**
     * Get the namePropertiesName property: Name used to locate CSR object.
     *
     * @return the namePropertiesName value.
     */
    public String namePropertiesName() {
        return this.namePropertiesName;
    }

    /**
     * Set the namePropertiesName property: Name used to locate CSR object.
     *
     * @param namePropertiesName the namePropertiesName value to set.
     * @return the CsrInner object itself.
     */
    public CsrInner withNamePropertiesName(String namePropertiesName) {
        this.namePropertiesName = namePropertiesName;
        return this;
    }

    /**
     * Get the distinguishedName property: Distinguished name of certificate to be created.
     *
     * @return the distinguishedName value.
     */
    public String distinguishedName() {
        return this.distinguishedName;
    }

    /**
     * Set the distinguishedName property: Distinguished name of certificate to be created.
     *
     * @param distinguishedName the distinguishedName value to set.
     * @return the CsrInner object itself.
     */
    public CsrInner withDistinguishedName(String distinguishedName) {
        this.distinguishedName = distinguishedName;
        return this;
    }

    /**
     * Get the csrString property: Actual CSR string created.
     *
     * @return the csrString value.
     */
    public String csrString() {
        return this.csrString;
    }

    /**
     * Set the csrString property: Actual CSR string created.
     *
     * @param csrString the csrString value to set.
     * @return the CsrInner object itself.
     */
    public CsrInner withCsrString(String csrString) {
        this.csrString = csrString;
        return this;
    }

    /**
     * Get the pfxBlob property: PFX certificate of created certificate.
     *
     * @return the pfxBlob value.
     */
    public String pfxBlob() {
        return this.pfxBlob;
    }

    /**
     * Set the pfxBlob property: PFX certificate of created certificate.
     *
     * @param pfxBlob the pfxBlob value to set.
     * @return the CsrInner object itself.
     */
    public CsrInner withPfxBlob(String pfxBlob) {
        this.pfxBlob = pfxBlob;
        return this;
    }

    /**
     * Get the password property: PFX password.
     *
     * @return the password value.
     */
    public String password() {
        return this.password;
    }

    /**
     * Set the password property: PFX password.
     *
     * @param password the password value to set.
     * @return the CsrInner object itself.
     */
    public CsrInner withPassword(String password) {
        this.password = password;
        return this;
    }

    /**
     * Get the publicKeyHash property: Hash of the certificates public key.
     *
     * @return the publicKeyHash value.
     */
    public String publicKeyHash() {
        return this.publicKeyHash;
    }

    /**
     * Set the publicKeyHash property: Hash of the certificates public key.
     *
     * @param publicKeyHash the publicKeyHash value to set.
     * @return the CsrInner object itself.
     */
    public CsrInner withPublicKeyHash(String publicKeyHash) {
        this.publicKeyHash = publicKeyHash;
        return this;
    }

    /**
     * Get the hostingEnvironment property: Hosting environment.
     *
     * @return the hostingEnvironment value.
     */
    public String hostingEnvironment() {
        return this.hostingEnvironment;
    }

    /**
     * Set the hostingEnvironment property: Hosting environment.
     *
     * @param hostingEnvironment the hostingEnvironment value to set.
     * @return the CsrInner object itself.
     */
    public CsrInner withHostingEnvironment(String hostingEnvironment) {
        this.hostingEnvironment = hostingEnvironment;
        return this;
    }

    /**
     * Get the kind property: Kind of resource.
     *
     * @return the kind value.
     */
    public String kind() {
        return this.kind;
    }

    /**
     * Set the kind property: Kind of resource.
     *
     * @param kind the kind value to set.
     * @return the CsrInner object itself.
     */
    public CsrInner withKind(String kind) {
        this.kind = kind;
        return this;
    }

    /**
     * Get the id property: Resource Id.
     *
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id property: Resource Id.
     *
     * @param id the id value to set.
     * @return the CsrInner object itself.
     */
    public CsrInner withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the name property: Resource Name.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Resource Name.
     *
     * @param name the name value to set.
     * @return the CsrInner object itself.
     */
    public CsrInner withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the type property: Resource type.
     *
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Set the type property: Resource type.
     *
     * @param type the type value to set.
     * @return the CsrInner object itself.
     */
    public CsrInner withType(String type) {
        this.type = type;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public CsrInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public CsrInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
