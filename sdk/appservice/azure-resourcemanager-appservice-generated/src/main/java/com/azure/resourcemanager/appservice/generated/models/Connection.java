// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.models;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.appservice.generated.fluent.models.ConnectionInner;
import com.azure.resourcemanager.appservice.generated.fluent.models.ExpandedParentApiEntityInner;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Map;

/** An immutable client-side representation of Connection. */
public interface Connection {
    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the namePropertiesName property: connection name.
     *
     * @return the namePropertiesName value.
     */
    String namePropertiesName();

    /**
     * Gets the displayName property: display name.
     *
     * @return the displayName value.
     */
    String displayName();

    /**
     * Gets the statuses property: Status of the connection.
     *
     * @return the statuses value.
     */
    List<ConnectionStatus> statuses();

    /**
     * Gets the customParameterValues property: Custom login setting values.
     *
     * @return the customParameterValues value.
     */
    Map<String, ParameterCustomLoginSettingValues> customParameterValues();

    /**
     * Gets the tenantId property: The tenantId property.
     *
     * @return the tenantId value.
     */
    String tenantId();

    /**
     * Gets the parameterValues property: Tokens/Claim.
     *
     * @return the parameterValues value.
     */
    Map<String, Object> parameterValues();

    /**
     * Gets the nonSecretParameterValues property: Tokens/Claim.
     *
     * @return the nonSecretParameterValues value.
     */
    Map<String, Object> nonSecretParameterValues();

    /**
     * Gets the metadata property: Any object.
     *
     * @return the metadata value.
     */
    Object metadata();

    /**
     * Gets the firstExpirationTime property: Time in UTC when the first expiration of OAuth tokens.
     *
     * @return the firstExpirationTime value.
     */
    OffsetDateTime firstExpirationTime();

    /**
     * Gets the keywords property: List of Keywords that tag the acl.
     *
     * @return the keywords value.
     */
    List<String> keywords();

    /**
     * Gets the createdTime property: Timestamp of the connection creation.
     *
     * @return the createdTime value.
     */
    OffsetDateTime createdTime();

    /**
     * Gets the changedTime property: Timestamp of last connection change.
     *
     * @return the changedTime value.
     */
    OffsetDateTime changedTime();

    /**
     * Gets the api property: expanded connection provider name.
     *
     * @return the api value.
     */
    ExpandedParentApiEntity api();

    /**
     * Gets the kind property: Kind of resource.
     *
     * @return the kind value.
     */
    String kind();

    /**
     * Gets the id property: Resource Id.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: Resource Name.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: Resource type.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the inner com.azure.resourcemanager.appservice.generated.fluent.models.ConnectionInner object.
     *
     * @return the inner object.
     */
    ConnectionInner innerModel();

    /** The entirety of the Connection definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithResourceGroup,
            DefinitionStages.WithCreate {
    }
    /** The Connection definition stages. */
    interface DefinitionStages {
        /** The first stage of the Connection definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the Connection definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }
        /** The stage of the Connection definition allowing to specify parent resource. */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             *
             * @param resourceGroupName The resource group name.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceGroup(String resourceGroupName);
        }
        /**
         * The stage of the Connection definition which contains all the minimum required properties for the resource to
         * be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags,
                DefinitionStages.WithNamePropertiesName,
                DefinitionStages.WithDisplayName,
                DefinitionStages.WithStatuses,
                DefinitionStages.WithCustomParameterValues,
                DefinitionStages.WithTenantId,
                DefinitionStages.WithParameterValues,
                DefinitionStages.WithNonSecretParameterValues,
                DefinitionStages.WithMetadata,
                DefinitionStages.WithFirstExpirationTime,
                DefinitionStages.WithKeywords,
                DefinitionStages.WithCreatedTime,
                DefinitionStages.WithChangedTime,
                DefinitionStages.WithApi,
                DefinitionStages.WithKind,
                DefinitionStages.WithName,
                DefinitionStages.WithType {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            Connection create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            Connection create(Context context);
        }
        /** The stage of the Connection definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the Connection definition allowing to specify namePropertiesName. */
        interface WithNamePropertiesName {
            /**
             * Specifies the namePropertiesName property: connection name.
             *
             * @param namePropertiesName connection name.
             * @return the next definition stage.
             */
            WithCreate withNamePropertiesName(String namePropertiesName);
        }
        /** The stage of the Connection definition allowing to specify displayName. */
        interface WithDisplayName {
            /**
             * Specifies the displayName property: display name.
             *
             * @param displayName display name.
             * @return the next definition stage.
             */
            WithCreate withDisplayName(String displayName);
        }
        /** The stage of the Connection definition allowing to specify statuses. */
        interface WithStatuses {
            /**
             * Specifies the statuses property: Status of the connection.
             *
             * @param statuses Status of the connection.
             * @return the next definition stage.
             */
            WithCreate withStatuses(List<ConnectionStatus> statuses);
        }
        /** The stage of the Connection definition allowing to specify customParameterValues. */
        interface WithCustomParameterValues {
            /**
             * Specifies the customParameterValues property: Custom login setting values..
             *
             * @param customParameterValues Custom login setting values.
             * @return the next definition stage.
             */
            WithCreate withCustomParameterValues(Map<String, ParameterCustomLoginSettingValues> customParameterValues);
        }
        /** The stage of the Connection definition allowing to specify tenantId. */
        interface WithTenantId {
            /**
             * Specifies the tenantId property: The tenantId property..
             *
             * @param tenantId The tenantId property.
             * @return the next definition stage.
             */
            WithCreate withTenantId(String tenantId);
        }
        /** The stage of the Connection definition allowing to specify parameterValues. */
        interface WithParameterValues {
            /**
             * Specifies the parameterValues property: Tokens/Claim.
             *
             * @param parameterValues Tokens/Claim.
             * @return the next definition stage.
             */
            WithCreate withParameterValues(Map<String, Object> parameterValues);
        }
        /** The stage of the Connection definition allowing to specify nonSecretParameterValues. */
        interface WithNonSecretParameterValues {
            /**
             * Specifies the nonSecretParameterValues property: Tokens/Claim.
             *
             * @param nonSecretParameterValues Tokens/Claim.
             * @return the next definition stage.
             */
            WithCreate withNonSecretParameterValues(Map<String, Object> nonSecretParameterValues);
        }
        /** The stage of the Connection definition allowing to specify metadata. */
        interface WithMetadata {
            /**
             * Specifies the metadata property: Any object.
             *
             * @param metadata Any object.
             * @return the next definition stage.
             */
            WithCreate withMetadata(Object metadata);
        }
        /** The stage of the Connection definition allowing to specify firstExpirationTime. */
        interface WithFirstExpirationTime {
            /**
             * Specifies the firstExpirationTime property: Time in UTC when the first expiration of OAuth tokens.
             *
             * @param firstExpirationTime Time in UTC when the first expiration of OAuth tokens.
             * @return the next definition stage.
             */
            WithCreate withFirstExpirationTime(OffsetDateTime firstExpirationTime);
        }
        /** The stage of the Connection definition allowing to specify keywords. */
        interface WithKeywords {
            /**
             * Specifies the keywords property: List of Keywords that tag the acl.
             *
             * @param keywords List of Keywords that tag the acl.
             * @return the next definition stage.
             */
            WithCreate withKeywords(List<String> keywords);
        }
        /** The stage of the Connection definition allowing to specify createdTime. */
        interface WithCreatedTime {
            /**
             * Specifies the createdTime property: Timestamp of the connection creation.
             *
             * @param createdTime Timestamp of the connection creation.
             * @return the next definition stage.
             */
            WithCreate withCreatedTime(OffsetDateTime createdTime);
        }
        /** The stage of the Connection definition allowing to specify changedTime. */
        interface WithChangedTime {
            /**
             * Specifies the changedTime property: Timestamp of last connection change..
             *
             * @param changedTime Timestamp of last connection change.
             * @return the next definition stage.
             */
            WithCreate withChangedTime(OffsetDateTime changedTime);
        }
        /** The stage of the Connection definition allowing to specify api. */
        interface WithApi {
            /**
             * Specifies the api property: expanded connection provider name.
             *
             * @param api expanded connection provider name.
             * @return the next definition stage.
             */
            WithCreate withApi(ExpandedParentApiEntityInner api);
        }
        /** The stage of the Connection definition allowing to specify kind. */
        interface WithKind {
            /**
             * Specifies the kind property: Kind of resource.
             *
             * @param kind Kind of resource.
             * @return the next definition stage.
             */
            WithCreate withKind(String kind);
        }
        /** The stage of the Connection definition allowing to specify name. */
        interface WithName {
            /**
             * Specifies the name property: Resource Name.
             *
             * @param name Resource Name.
             * @return the next definition stage.
             */
            WithCreate withName(String name);
        }
        /** The stage of the Connection definition allowing to specify type. */
        interface WithType {
            /**
             * Specifies the type property: Resource type.
             *
             * @param type Resource type.
             * @return the next definition stage.
             */
            WithCreate withType(String type);
        }
    }
    /**
     * Begins update for the Connection resource.
     *
     * @return the stage of resource update.
     */
    Connection.Update update();

    /** The template for Connection update. */
    interface Update
        extends UpdateStages.WithTags,
            UpdateStages.WithNamePropertiesName,
            UpdateStages.WithDisplayName,
            UpdateStages.WithStatuses,
            UpdateStages.WithCustomParameterValues,
            UpdateStages.WithTenantId,
            UpdateStages.WithParameterValues,
            UpdateStages.WithNonSecretParameterValues,
            UpdateStages.WithMetadata,
            UpdateStages.WithFirstExpirationTime,
            UpdateStages.WithKeywords,
            UpdateStages.WithCreatedTime,
            UpdateStages.WithChangedTime,
            UpdateStages.WithApi,
            UpdateStages.WithKind,
            UpdateStages.WithName,
            UpdateStages.WithType {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        Connection apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        Connection apply(Context context);
    }
    /** The Connection update stages. */
    interface UpdateStages {
        /** The stage of the Connection update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
        /** The stage of the Connection update allowing to specify namePropertiesName. */
        interface WithNamePropertiesName {
            /**
             * Specifies the namePropertiesName property: connection name.
             *
             * @param namePropertiesName connection name.
             * @return the next definition stage.
             */
            Update withNamePropertiesName(String namePropertiesName);
        }
        /** The stage of the Connection update allowing to specify displayName. */
        interface WithDisplayName {
            /**
             * Specifies the displayName property: display name.
             *
             * @param displayName display name.
             * @return the next definition stage.
             */
            Update withDisplayName(String displayName);
        }
        /** The stage of the Connection update allowing to specify statuses. */
        interface WithStatuses {
            /**
             * Specifies the statuses property: Status of the connection.
             *
             * @param statuses Status of the connection.
             * @return the next definition stage.
             */
            Update withStatuses(List<ConnectionStatus> statuses);
        }
        /** The stage of the Connection update allowing to specify customParameterValues. */
        interface WithCustomParameterValues {
            /**
             * Specifies the customParameterValues property: Custom login setting values..
             *
             * @param customParameterValues Custom login setting values.
             * @return the next definition stage.
             */
            Update withCustomParameterValues(Map<String, ParameterCustomLoginSettingValues> customParameterValues);
        }
        /** The stage of the Connection update allowing to specify tenantId. */
        interface WithTenantId {
            /**
             * Specifies the tenantId property: The tenantId property..
             *
             * @param tenantId The tenantId property.
             * @return the next definition stage.
             */
            Update withTenantId(String tenantId);
        }
        /** The stage of the Connection update allowing to specify parameterValues. */
        interface WithParameterValues {
            /**
             * Specifies the parameterValues property: Tokens/Claim.
             *
             * @param parameterValues Tokens/Claim.
             * @return the next definition stage.
             */
            Update withParameterValues(Map<String, Object> parameterValues);
        }
        /** The stage of the Connection update allowing to specify nonSecretParameterValues. */
        interface WithNonSecretParameterValues {
            /**
             * Specifies the nonSecretParameterValues property: Tokens/Claim.
             *
             * @param nonSecretParameterValues Tokens/Claim.
             * @return the next definition stage.
             */
            Update withNonSecretParameterValues(Map<String, Object> nonSecretParameterValues);
        }
        /** The stage of the Connection update allowing to specify metadata. */
        interface WithMetadata {
            /**
             * Specifies the metadata property: Any object.
             *
             * @param metadata Any object.
             * @return the next definition stage.
             */
            Update withMetadata(Object metadata);
        }
        /** The stage of the Connection update allowing to specify firstExpirationTime. */
        interface WithFirstExpirationTime {
            /**
             * Specifies the firstExpirationTime property: Time in UTC when the first expiration of OAuth tokens.
             *
             * @param firstExpirationTime Time in UTC when the first expiration of OAuth tokens.
             * @return the next definition stage.
             */
            Update withFirstExpirationTime(OffsetDateTime firstExpirationTime);
        }
        /** The stage of the Connection update allowing to specify keywords. */
        interface WithKeywords {
            /**
             * Specifies the keywords property: List of Keywords that tag the acl.
             *
             * @param keywords List of Keywords that tag the acl.
             * @return the next definition stage.
             */
            Update withKeywords(List<String> keywords);
        }
        /** The stage of the Connection update allowing to specify createdTime. */
        interface WithCreatedTime {
            /**
             * Specifies the createdTime property: Timestamp of the connection creation.
             *
             * @param createdTime Timestamp of the connection creation.
             * @return the next definition stage.
             */
            Update withCreatedTime(OffsetDateTime createdTime);
        }
        /** The stage of the Connection update allowing to specify changedTime. */
        interface WithChangedTime {
            /**
             * Specifies the changedTime property: Timestamp of last connection change..
             *
             * @param changedTime Timestamp of last connection change.
             * @return the next definition stage.
             */
            Update withChangedTime(OffsetDateTime changedTime);
        }
        /** The stage of the Connection update allowing to specify api. */
        interface WithApi {
            /**
             * Specifies the api property: expanded connection provider name.
             *
             * @param api expanded connection provider name.
             * @return the next definition stage.
             */
            Update withApi(ExpandedParentApiEntityInner api);
        }
        /** The stage of the Connection update allowing to specify kind. */
        interface WithKind {
            /**
             * Specifies the kind property: Kind of resource.
             *
             * @param kind Kind of resource.
             * @return the next definition stage.
             */
            Update withKind(String kind);
        }
        /** The stage of the Connection update allowing to specify name. */
        interface WithName {
            /**
             * Specifies the name property: Resource Name.
             *
             * @param name Resource Name.
             * @return the next definition stage.
             */
            Update withName(String name);
        }
        /** The stage of the Connection update allowing to specify type. */
        interface WithType {
            /**
             * Specifies the type property: Resource type.
             *
             * @param type Resource type.
             * @return the next definition stage.
             */
            Update withType(String type);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    Connection refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    Connection refresh(Context context);
}
