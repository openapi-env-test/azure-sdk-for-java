// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.implementation;

import com.azure.resourcemanager.appservice.generated.WebSiteManager;
import com.azure.resourcemanager.appservice.generated.fluent.models.ApiEntityInner;
import com.azure.resourcemanager.appservice.generated.models.ApiEntity;
import com.azure.resourcemanager.appservice.generated.models.ApiPolicies;
import com.azure.resourcemanager.appservice.generated.models.BackendServiceDefinition;
import com.azure.resourcemanager.appservice.generated.models.ConnectionParameter;
import com.azure.resourcemanager.appservice.generated.models.GeneralApiInformation;
import java.time.OffsetDateTime;
import java.util.Collections;
import java.util.List;
import java.util.Map;

public final class ApiEntityImpl implements ApiEntity {
    private ApiEntityInner innerObject;

    private final WebSiteManager serviceManager;

    ApiEntityImpl(ApiEntityInner innerObject, WebSiteManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public String namePropertiesName() {
        return this.innerModel().namePropertiesName();
    }

    public GeneralApiInformation generalInformation() {
        return this.innerModel().generalInformation();
    }

    public String path() {
        return this.innerModel().path();
    }

    public List<String> runtimeUrls() {
        List<String> inner = this.innerModel().runtimeUrls();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<String> protocols() {
        List<String> inner = this.innerModel().protocols();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public ApiPolicies policies() {
        return this.innerModel().policies();
    }

    public BackendServiceDefinition backendService() {
        return this.innerModel().backendService();
    }

    public String apiDefinitionUrl() {
        return this.innerModel().apiDefinitionUrl();
    }

    public Object metadata() {
        return this.innerModel().metadata();
    }

    public List<String> capabilities() {
        List<String> inner = this.innerModel().capabilities();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public Map<String, ConnectionParameter> connectionParameters() {
        Map<String, ConnectionParameter> inner = this.innerModel().connectionParameters();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public OffsetDateTime createdTime() {
        return this.innerModel().createdTime();
    }

    public OffsetDateTime changedTime() {
        return this.innerModel().changedTime();
    }

    public String kind() {
        return this.innerModel().kind();
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public ApiEntityInner innerModel() {
        return this.innerObject;
    }

    private WebSiteManager manager() {
        return this.serviceManager;
    }
}
