// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Class containing deployment slot parameters. */
@Fluent
public final class CsmSlotEntity {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(CsmSlotEntity.class);

    /*
     * Set the destination deployment slot during swap operation
     */
    @JsonProperty(value = "targetSlot")
    private String targetSlot;

    /*
     * Get or set the flag indicating it should preserve VNet to the slot
     * during swap
     */
    @JsonProperty(value = "preserveVnet")
    private Boolean preserveVnet;

    /**
     * Get the targetSlot property: Set the destination deployment slot during swap operation.
     *
     * @return the targetSlot value.
     */
    public String targetSlot() {
        return this.targetSlot;
    }

    /**
     * Set the targetSlot property: Set the destination deployment slot during swap operation.
     *
     * @param targetSlot the targetSlot value to set.
     * @return the CsmSlotEntity object itself.
     */
    public CsmSlotEntity withTargetSlot(String targetSlot) {
        this.targetSlot = targetSlot;
        return this;
    }

    /**
     * Get the preserveVnet property: Get or set the flag indicating it should preserve VNet to the slot during swap.
     *
     * @return the preserveVnet value.
     */
    public Boolean preserveVnet() {
        return this.preserveVnet;
    }

    /**
     * Set the preserveVnet property: Get or set the flag indicating it should preserve VNet to the slot during swap.
     *
     * @param preserveVnet the preserveVnet value to set.
     * @return the CsmSlotEntity object itself.
     */
    public CsmSlotEntity withPreserveVnet(Boolean preserveVnet) {
        this.preserveVnet = preserveVnet;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
