// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.Resource;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.appservice.generated.models.ComputeModeOptions;
import com.azure.resourcemanager.appservice.generated.models.SkuDescription;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.Map;

/** Worker pool of a hostingEnvironment (App Service Environment). */
@JsonFlatten
@Fluent
public class WorkerPoolInner extends Resource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(WorkerPoolInner.class);

    /*
     * Describes a sku for a scalable resource
     */
    @JsonProperty(value = "sku")
    private SkuDescription sku;

    /*
     * Worker size id for referencing this worker pool
     */
    @JsonProperty(value = "properties.workerSizeId")
    private Integer workerSizeId;

    /*
     * Shared or dedicated web app hosting
     */
    @JsonProperty(value = "properties.computeMode")
    private ComputeModeOptions computeMode;

    /*
     * VM size of the worker pool instances
     */
    @JsonProperty(value = "properties.workerSize")
    private String workerSize;

    /*
     * Number of instances in the worker pool
     */
    @JsonProperty(value = "properties.workerCount")
    private Integer workerCount;

    /*
     * Names of all instances in the worker pool (read only)
     */
    @JsonProperty(value = "properties.instanceNames")
    private List<String> instanceNames;

    /*
     * Kind of resource
     */
    @JsonProperty(value = "kind")
    private String kind;

    /*
     * Resource Id
     */
    @JsonProperty(value = "id")
    private String id;

    /*
     * Resource Name
     */
    @JsonProperty(value = "name")
    private String name;

    /*
     * Resource type
     */
    @JsonProperty(value = "type")
    private String type;

    /**
     * Get the sku property: Describes a sku for a scalable resource.
     *
     * @return the sku value.
     */
    public SkuDescription sku() {
        return this.sku;
    }

    /**
     * Set the sku property: Describes a sku for a scalable resource.
     *
     * @param sku the sku value to set.
     * @return the WorkerPoolInner object itself.
     */
    public WorkerPoolInner withSku(SkuDescription sku) {
        this.sku = sku;
        return this;
    }

    /**
     * Get the workerSizeId property: Worker size id for referencing this worker pool.
     *
     * @return the workerSizeId value.
     */
    public Integer workerSizeId() {
        return this.workerSizeId;
    }

    /**
     * Set the workerSizeId property: Worker size id for referencing this worker pool.
     *
     * @param workerSizeId the workerSizeId value to set.
     * @return the WorkerPoolInner object itself.
     */
    public WorkerPoolInner withWorkerSizeId(Integer workerSizeId) {
        this.workerSizeId = workerSizeId;
        return this;
    }

    /**
     * Get the computeMode property: Shared or dedicated web app hosting.
     *
     * @return the computeMode value.
     */
    public ComputeModeOptions computeMode() {
        return this.computeMode;
    }

    /**
     * Set the computeMode property: Shared or dedicated web app hosting.
     *
     * @param computeMode the computeMode value to set.
     * @return the WorkerPoolInner object itself.
     */
    public WorkerPoolInner withComputeMode(ComputeModeOptions computeMode) {
        this.computeMode = computeMode;
        return this;
    }

    /**
     * Get the workerSize property: VM size of the worker pool instances.
     *
     * @return the workerSize value.
     */
    public String workerSize() {
        return this.workerSize;
    }

    /**
     * Set the workerSize property: VM size of the worker pool instances.
     *
     * @param workerSize the workerSize value to set.
     * @return the WorkerPoolInner object itself.
     */
    public WorkerPoolInner withWorkerSize(String workerSize) {
        this.workerSize = workerSize;
        return this;
    }

    /**
     * Get the workerCount property: Number of instances in the worker pool.
     *
     * @return the workerCount value.
     */
    public Integer workerCount() {
        return this.workerCount;
    }

    /**
     * Set the workerCount property: Number of instances in the worker pool.
     *
     * @param workerCount the workerCount value to set.
     * @return the WorkerPoolInner object itself.
     */
    public WorkerPoolInner withWorkerCount(Integer workerCount) {
        this.workerCount = workerCount;
        return this;
    }

    /**
     * Get the instanceNames property: Names of all instances in the worker pool (read only).
     *
     * @return the instanceNames value.
     */
    public List<String> instanceNames() {
        return this.instanceNames;
    }

    /**
     * Set the instanceNames property: Names of all instances in the worker pool (read only).
     *
     * @param instanceNames the instanceNames value to set.
     * @return the WorkerPoolInner object itself.
     */
    public WorkerPoolInner withInstanceNames(List<String> instanceNames) {
        this.instanceNames = instanceNames;
        return this;
    }

    /**
     * Get the kind property: Kind of resource.
     *
     * @return the kind value.
     */
    public String kind() {
        return this.kind;
    }

    /**
     * Set the kind property: Kind of resource.
     *
     * @param kind the kind value to set.
     * @return the WorkerPoolInner object itself.
     */
    public WorkerPoolInner withKind(String kind) {
        this.kind = kind;
        return this;
    }

    /**
     * Get the id property: Resource Id.
     *
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id property: Resource Id.
     *
     * @param id the id value to set.
     * @return the WorkerPoolInner object itself.
     */
    public WorkerPoolInner withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the name property: Resource Name.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Resource Name.
     *
     * @param name the name value to set.
     * @return the WorkerPoolInner object itself.
     */
    public WorkerPoolInner withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the type property: Resource type.
     *
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Set the type property: Resource type.
     *
     * @param type the type value to set.
     * @return the WorkerPoolInner object itself.
     */
    public WorkerPoolInner withType(String type) {
        this.type = type;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public WorkerPoolInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public WorkerPoolInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (sku() != null) {
            sku().validate();
        }
    }
}
