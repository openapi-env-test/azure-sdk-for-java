// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.models;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.appservice.generated.fluent.models.VnetGatewayInner;
import java.util.Map;

/** An immutable client-side representation of VnetGateway. */
public interface VnetGateway {
    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the vnetName property: The VNET name.
     *
     * @return the vnetName value.
     */
    String vnetName();

    /**
     * Gets the vpnPackageUri property: The URI where the Vpn package can be downloaded.
     *
     * @return the vpnPackageUri value.
     */
    String vpnPackageUri();

    /**
     * Gets the kind property: Kind of resource.
     *
     * @return the kind value.
     */
    String kind();

    /**
     * Gets the id property: Resource Id.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: Resource Name.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: Resource type.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the inner com.azure.resourcemanager.appservice.generated.fluent.models.VnetGatewayInner object.
     *
     * @return the inner object.
     */
    VnetGatewayInner innerModel();

    /** The entirety of the VnetGateway definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithParentResource,
            DefinitionStages.WithCreate {
    }
    /** The VnetGateway definition stages. */
    interface DefinitionStages {
        /** The first stage of the VnetGateway definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the VnetGateway definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(String location);
        }
        /** The stage of the VnetGateway definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, name, vnetName, slot.
             *
             * @param resourceGroupName The resource group name.
             * @param name The name of the web app.
             * @param vnetName The name of the Virtual Network.
             * @param slot The name of the slot for this web app.
             * @return the next definition stage.
             */
            WithCreate withExistingVirtualNetworkConnection(
                String resourceGroupName, String name, String vnetName, String slot);
        }
        /**
         * The stage of the VnetGateway definition which contains all the minimum required properties for the resource
         * to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags,
                DefinitionStages.WithVnetName,
                DefinitionStages.WithVpnPackageUri,
                DefinitionStages.WithKind,
                DefinitionStages.WithName,
                DefinitionStages.WithType {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            VnetGateway create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            VnetGateway create(Context context);
        }
        /** The stage of the VnetGateway definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the VnetGateway definition allowing to specify vnetName. */
        interface WithVnetName {
            /**
             * Specifies the vnetName property: The VNET name..
             *
             * @param vnetName The VNET name.
             * @return the next definition stage.
             */
            WithCreate withVnetName(String vnetName);
        }
        /** The stage of the VnetGateway definition allowing to specify vpnPackageUri. */
        interface WithVpnPackageUri {
            /**
             * Specifies the vpnPackageUri property: The URI where the Vpn package can be downloaded.
             *
             * @param vpnPackageUri The URI where the Vpn package can be downloaded.
             * @return the next definition stage.
             */
            WithCreate withVpnPackageUri(String vpnPackageUri);
        }
        /** The stage of the VnetGateway definition allowing to specify kind. */
        interface WithKind {
            /**
             * Specifies the kind property: Kind of resource.
             *
             * @param kind Kind of resource.
             * @return the next definition stage.
             */
            WithCreate withKind(String kind);
        }
        /** The stage of the VnetGateway definition allowing to specify name. */
        interface WithName {
            /**
             * Specifies the name property: Resource Name.
             *
             * @param name Resource Name.
             * @return the next definition stage.
             */
            WithCreate withName(String name);
        }
        /** The stage of the VnetGateway definition allowing to specify type. */
        interface WithType {
            /**
             * Specifies the type property: Resource type.
             *
             * @param type Resource type.
             * @return the next definition stage.
             */
            WithCreate withType(String type);
        }
    }
    /**
     * Begins update for the VnetGateway resource.
     *
     * @return the stage of resource update.
     */
    VnetGateway.Update update();

    /** The template for VnetGateway update. */
    interface Update
        extends UpdateStages.WithTags,
            UpdateStages.WithVnetName,
            UpdateStages.WithVpnPackageUri,
            UpdateStages.WithKind,
            UpdateStages.WithName,
            UpdateStages.WithType {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        VnetGateway apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        VnetGateway apply(Context context);
    }
    /** The VnetGateway update stages. */
    interface UpdateStages {
        /** The stage of the VnetGateway update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
        /** The stage of the VnetGateway update allowing to specify vnetName. */
        interface WithVnetName {
            /**
             * Specifies the vnetName property: The VNET name..
             *
             * @param vnetName The VNET name.
             * @return the next definition stage.
             */
            Update withVnetName(String vnetName);
        }
        /** The stage of the VnetGateway update allowing to specify vpnPackageUri. */
        interface WithVpnPackageUri {
            /**
             * Specifies the vpnPackageUri property: The URI where the Vpn package can be downloaded.
             *
             * @param vpnPackageUri The URI where the Vpn package can be downloaded.
             * @return the next definition stage.
             */
            Update withVpnPackageUri(String vpnPackageUri);
        }
        /** The stage of the VnetGateway update allowing to specify kind. */
        interface WithKind {
            /**
             * Specifies the kind property: Kind of resource.
             *
             * @param kind Kind of resource.
             * @return the next definition stage.
             */
            Update withKind(String kind);
        }
        /** The stage of the VnetGateway update allowing to specify name. */
        interface WithName {
            /**
             * Specifies the name property: Resource Name.
             *
             * @param name Resource Name.
             * @return the next definition stage.
             */
            Update withName(String name);
        }
        /** The stage of the VnetGateway update allowing to specify type. */
        interface WithType {
            /**
             * Specifies the type property: Resource type.
             *
             * @param type Resource type.
             * @return the next definition stage.
             */
            Update withType(String type);
        }
    }
}
