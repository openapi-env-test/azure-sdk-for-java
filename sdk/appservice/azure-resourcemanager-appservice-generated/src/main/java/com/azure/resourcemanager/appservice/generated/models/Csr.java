// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.models;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.appservice.generated.fluent.models.CsrInner;
import java.util.Map;

/** An immutable client-side representation of Csr. */
public interface Csr {
    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the namePropertiesName property: Name used to locate CSR object.
     *
     * @return the namePropertiesName value.
     */
    String namePropertiesName();

    /**
     * Gets the distinguishedName property: Distinguished name of certificate to be created.
     *
     * @return the distinguishedName value.
     */
    String distinguishedName();

    /**
     * Gets the csrString property: Actual CSR string created.
     *
     * @return the csrString value.
     */
    String csrString();

    /**
     * Gets the pfxBlob property: PFX certificate of created certificate.
     *
     * @return the pfxBlob value.
     */
    String pfxBlob();

    /**
     * Gets the password property: PFX password.
     *
     * @return the password value.
     */
    String password();

    /**
     * Gets the publicKeyHash property: Hash of the certificates public key.
     *
     * @return the publicKeyHash value.
     */
    String publicKeyHash();

    /**
     * Gets the hostingEnvironment property: Hosting environment.
     *
     * @return the hostingEnvironment value.
     */
    String hostingEnvironment();

    /**
     * Gets the kind property: Kind of resource.
     *
     * @return the kind value.
     */
    String kind();

    /**
     * Gets the id property: Resource Id.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: Resource Name.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: Resource type.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the inner com.azure.resourcemanager.appservice.generated.fluent.models.CsrInner object.
     *
     * @return the inner object.
     */
    CsrInner innerModel();

    /** The entirety of the Csr definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithResourceGroup,
            DefinitionStages.WithCreate {
    }
    /** The Csr definition stages. */
    interface DefinitionStages {
        /** The first stage of the Csr definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the Csr definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }
        /** The stage of the Csr definition allowing to specify parent resource. */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             *
             * @param resourceGroupName Name of the resource group.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceGroup(String resourceGroupName);
        }
        /**
         * The stage of the Csr definition which contains all the minimum required properties for the resource to be
         * created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags,
                DefinitionStages.WithNamePropertiesName,
                DefinitionStages.WithDistinguishedName,
                DefinitionStages.WithCsrString,
                DefinitionStages.WithPfxBlob,
                DefinitionStages.WithPassword,
                DefinitionStages.WithPublicKeyHash,
                DefinitionStages.WithHostingEnvironment,
                DefinitionStages.WithKind,
                DefinitionStages.WithName,
                DefinitionStages.WithType {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            Csr create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            Csr create(Context context);
        }
        /** The stage of the Csr definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the Csr definition allowing to specify namePropertiesName. */
        interface WithNamePropertiesName {
            /**
             * Specifies the namePropertiesName property: Name used to locate CSR object.
             *
             * @param namePropertiesName Name used to locate CSR object.
             * @return the next definition stage.
             */
            WithCreate withNamePropertiesName(String namePropertiesName);
        }
        /** The stage of the Csr definition allowing to specify distinguishedName. */
        interface WithDistinguishedName {
            /**
             * Specifies the distinguishedName property: Distinguished name of certificate to be created.
             *
             * @param distinguishedName Distinguished name of certificate to be created.
             * @return the next definition stage.
             */
            WithCreate withDistinguishedName(String distinguishedName);
        }
        /** The stage of the Csr definition allowing to specify csrString. */
        interface WithCsrString {
            /**
             * Specifies the csrString property: Actual CSR string created.
             *
             * @param csrString Actual CSR string created.
             * @return the next definition stage.
             */
            WithCreate withCsrString(String csrString);
        }
        /** The stage of the Csr definition allowing to specify pfxBlob. */
        interface WithPfxBlob {
            /**
             * Specifies the pfxBlob property: PFX certificate of created certificate.
             *
             * @param pfxBlob PFX certificate of created certificate.
             * @return the next definition stage.
             */
            WithCreate withPfxBlob(String pfxBlob);
        }
        /** The stage of the Csr definition allowing to specify password. */
        interface WithPassword {
            /**
             * Specifies the password property: PFX password.
             *
             * @param password PFX password.
             * @return the next definition stage.
             */
            WithCreate withPassword(String password);
        }
        /** The stage of the Csr definition allowing to specify publicKeyHash. */
        interface WithPublicKeyHash {
            /**
             * Specifies the publicKeyHash property: Hash of the certificates public key.
             *
             * @param publicKeyHash Hash of the certificates public key.
             * @return the next definition stage.
             */
            WithCreate withPublicKeyHash(String publicKeyHash);
        }
        /** The stage of the Csr definition allowing to specify hostingEnvironment. */
        interface WithHostingEnvironment {
            /**
             * Specifies the hostingEnvironment property: Hosting environment.
             *
             * @param hostingEnvironment Hosting environment.
             * @return the next definition stage.
             */
            WithCreate withHostingEnvironment(String hostingEnvironment);
        }
        /** The stage of the Csr definition allowing to specify kind. */
        interface WithKind {
            /**
             * Specifies the kind property: Kind of resource.
             *
             * @param kind Kind of resource.
             * @return the next definition stage.
             */
            WithCreate withKind(String kind);
        }
        /** The stage of the Csr definition allowing to specify name. */
        interface WithName {
            /**
             * Specifies the name property: Resource Name.
             *
             * @param name Resource Name.
             * @return the next definition stage.
             */
            WithCreate withName(String name);
        }
        /** The stage of the Csr definition allowing to specify type. */
        interface WithType {
            /**
             * Specifies the type property: Resource type.
             *
             * @param type Resource type.
             * @return the next definition stage.
             */
            WithCreate withType(String type);
        }
    }
    /**
     * Begins update for the Csr resource.
     *
     * @return the stage of resource update.
     */
    Csr.Update update();

    /** The template for Csr update. */
    interface Update
        extends UpdateStages.WithTags,
            UpdateStages.WithNamePropertiesName,
            UpdateStages.WithDistinguishedName,
            UpdateStages.WithCsrString,
            UpdateStages.WithPfxBlob,
            UpdateStages.WithPassword,
            UpdateStages.WithPublicKeyHash,
            UpdateStages.WithHostingEnvironment,
            UpdateStages.WithKind,
            UpdateStages.WithName,
            UpdateStages.WithType {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        Csr apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        Csr apply(Context context);
    }
    /** The Csr update stages. */
    interface UpdateStages {
        /** The stage of the Csr update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
        /** The stage of the Csr update allowing to specify namePropertiesName. */
        interface WithNamePropertiesName {
            /**
             * Specifies the namePropertiesName property: Name used to locate CSR object.
             *
             * @param namePropertiesName Name used to locate CSR object.
             * @return the next definition stage.
             */
            Update withNamePropertiesName(String namePropertiesName);
        }
        /** The stage of the Csr update allowing to specify distinguishedName. */
        interface WithDistinguishedName {
            /**
             * Specifies the distinguishedName property: Distinguished name of certificate to be created.
             *
             * @param distinguishedName Distinguished name of certificate to be created.
             * @return the next definition stage.
             */
            Update withDistinguishedName(String distinguishedName);
        }
        /** The stage of the Csr update allowing to specify csrString. */
        interface WithCsrString {
            /**
             * Specifies the csrString property: Actual CSR string created.
             *
             * @param csrString Actual CSR string created.
             * @return the next definition stage.
             */
            Update withCsrString(String csrString);
        }
        /** The stage of the Csr update allowing to specify pfxBlob. */
        interface WithPfxBlob {
            /**
             * Specifies the pfxBlob property: PFX certificate of created certificate.
             *
             * @param pfxBlob PFX certificate of created certificate.
             * @return the next definition stage.
             */
            Update withPfxBlob(String pfxBlob);
        }
        /** The stage of the Csr update allowing to specify password. */
        interface WithPassword {
            /**
             * Specifies the password property: PFX password.
             *
             * @param password PFX password.
             * @return the next definition stage.
             */
            Update withPassword(String password);
        }
        /** The stage of the Csr update allowing to specify publicKeyHash. */
        interface WithPublicKeyHash {
            /**
             * Specifies the publicKeyHash property: Hash of the certificates public key.
             *
             * @param publicKeyHash Hash of the certificates public key.
             * @return the next definition stage.
             */
            Update withPublicKeyHash(String publicKeyHash);
        }
        /** The stage of the Csr update allowing to specify hostingEnvironment. */
        interface WithHostingEnvironment {
            /**
             * Specifies the hostingEnvironment property: Hosting environment.
             *
             * @param hostingEnvironment Hosting environment.
             * @return the next definition stage.
             */
            Update withHostingEnvironment(String hostingEnvironment);
        }
        /** The stage of the Csr update allowing to specify kind. */
        interface WithKind {
            /**
             * Specifies the kind property: Kind of resource.
             *
             * @param kind Kind of resource.
             * @return the next definition stage.
             */
            Update withKind(String kind);
        }
        /** The stage of the Csr update allowing to specify name. */
        interface WithName {
            /**
             * Specifies the name property: Resource Name.
             *
             * @param name Resource Name.
             * @return the next definition stage.
             */
            Update withName(String name);
        }
        /** The stage of the Csr update allowing to specify type. */
        interface WithType {
            /**
             * Specifies the type property: Resource type.
             *
             * @param type Resource type.
             * @return the next definition stage.
             */
            Update withType(String type);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    Csr refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    Csr refresh(Context context);
}
