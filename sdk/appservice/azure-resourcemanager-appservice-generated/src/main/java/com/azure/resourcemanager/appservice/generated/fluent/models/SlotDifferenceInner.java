// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.Resource;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** An object describing the difference in setting values between two web app slots. */
@JsonFlatten
@Fluent
public class SlotDifferenceInner extends Resource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(SlotDifferenceInner.class);

    /*
     * Indicates the type of the difference: Information, Warning or Error.
     */
    @JsonProperty(value = "properties.type")
    private String typePropertiesType;

    /*
     * The type of the settings: General, AppSetting or ConnectionString
     */
    @JsonProperty(value = "properties.settingType")
    private String settingType;

    /*
     * Rule that describes how to process the difference in settings during web
     * app slot swap.
     */
    @JsonProperty(value = "properties.diffRule")
    private String diffRule;

    /*
     * Name of the setting
     */
    @JsonProperty(value = "properties.settingName")
    private String settingName;

    /*
     * Value of the setting in the current web app slot
     */
    @JsonProperty(value = "properties.valueInCurrentSlot")
    private String valueInCurrentSlot;

    /*
     * Value of the setting in the target web app slot
     */
    @JsonProperty(value = "properties.valueInTargetSlot")
    private String valueInTargetSlot;

    /*
     * Description of the difference
     */
    @JsonProperty(value = "properties.description")
    private String description;

    /*
     * Kind of resource
     */
    @JsonProperty(value = "kind")
    private String kind;

    /*
     * Resource Id
     */
    @JsonProperty(value = "id")
    private String id;

    /*
     * Resource Name
     */
    @JsonProperty(value = "name")
    private String name;

    /*
     * Resource type
     */
    @JsonProperty(value = "type")
    private String type;

    /**
     * Get the typePropertiesType property: Indicates the type of the difference: Information, Warning or Error.
     *
     * @return the typePropertiesType value.
     */
    public String typePropertiesType() {
        return this.typePropertiesType;
    }

    /**
     * Set the typePropertiesType property: Indicates the type of the difference: Information, Warning or Error.
     *
     * @param typePropertiesType the typePropertiesType value to set.
     * @return the SlotDifferenceInner object itself.
     */
    public SlotDifferenceInner withTypePropertiesType(String typePropertiesType) {
        this.typePropertiesType = typePropertiesType;
        return this;
    }

    /**
     * Get the settingType property: The type of the settings: General, AppSetting or ConnectionString.
     *
     * @return the settingType value.
     */
    public String settingType() {
        return this.settingType;
    }

    /**
     * Set the settingType property: The type of the settings: General, AppSetting or ConnectionString.
     *
     * @param settingType the settingType value to set.
     * @return the SlotDifferenceInner object itself.
     */
    public SlotDifferenceInner withSettingType(String settingType) {
        this.settingType = settingType;
        return this;
    }

    /**
     * Get the diffRule property: Rule that describes how to process the difference in settings during web app slot
     * swap.
     *
     * @return the diffRule value.
     */
    public String diffRule() {
        return this.diffRule;
    }

    /**
     * Set the diffRule property: Rule that describes how to process the difference in settings during web app slot
     * swap.
     *
     * @param diffRule the diffRule value to set.
     * @return the SlotDifferenceInner object itself.
     */
    public SlotDifferenceInner withDiffRule(String diffRule) {
        this.diffRule = diffRule;
        return this;
    }

    /**
     * Get the settingName property: Name of the setting.
     *
     * @return the settingName value.
     */
    public String settingName() {
        return this.settingName;
    }

    /**
     * Set the settingName property: Name of the setting.
     *
     * @param settingName the settingName value to set.
     * @return the SlotDifferenceInner object itself.
     */
    public SlotDifferenceInner withSettingName(String settingName) {
        this.settingName = settingName;
        return this;
    }

    /**
     * Get the valueInCurrentSlot property: Value of the setting in the current web app slot.
     *
     * @return the valueInCurrentSlot value.
     */
    public String valueInCurrentSlot() {
        return this.valueInCurrentSlot;
    }

    /**
     * Set the valueInCurrentSlot property: Value of the setting in the current web app slot.
     *
     * @param valueInCurrentSlot the valueInCurrentSlot value to set.
     * @return the SlotDifferenceInner object itself.
     */
    public SlotDifferenceInner withValueInCurrentSlot(String valueInCurrentSlot) {
        this.valueInCurrentSlot = valueInCurrentSlot;
        return this;
    }

    /**
     * Get the valueInTargetSlot property: Value of the setting in the target web app slot.
     *
     * @return the valueInTargetSlot value.
     */
    public String valueInTargetSlot() {
        return this.valueInTargetSlot;
    }

    /**
     * Set the valueInTargetSlot property: Value of the setting in the target web app slot.
     *
     * @param valueInTargetSlot the valueInTargetSlot value to set.
     * @return the SlotDifferenceInner object itself.
     */
    public SlotDifferenceInner withValueInTargetSlot(String valueInTargetSlot) {
        this.valueInTargetSlot = valueInTargetSlot;
        return this;
    }

    /**
     * Get the description property: Description of the difference.
     *
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: Description of the difference.
     *
     * @param description the description value to set.
     * @return the SlotDifferenceInner object itself.
     */
    public SlotDifferenceInner withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the kind property: Kind of resource.
     *
     * @return the kind value.
     */
    public String kind() {
        return this.kind;
    }

    /**
     * Set the kind property: Kind of resource.
     *
     * @param kind the kind value to set.
     * @return the SlotDifferenceInner object itself.
     */
    public SlotDifferenceInner withKind(String kind) {
        this.kind = kind;
        return this;
    }

    /**
     * Get the id property: Resource Id.
     *
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id property: Resource Id.
     *
     * @param id the id value to set.
     * @return the SlotDifferenceInner object itself.
     */
    public SlotDifferenceInner withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the name property: Resource Name.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Resource Name.
     *
     * @param name the name value to set.
     * @return the SlotDifferenceInner object itself.
     */
    public SlotDifferenceInner withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the type property: Resource type.
     *
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Set the type property: Resource type.
     *
     * @param type the type value to set.
     * @return the SlotDifferenceInner object itself.
     */
    public SlotDifferenceInner withType(String type) {
        this.type = type;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public SlotDifferenceInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public SlotDifferenceInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
