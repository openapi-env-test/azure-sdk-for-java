// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.implementation;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.appservice.generated.WebSiteManager;
import com.azure.resourcemanager.appservice.generated.fluent.models.CertificateOrderCertificateInner;
import com.azure.resourcemanager.appservice.generated.models.CertificateOrderCertificate;
import com.azure.resourcemanager.appservice.generated.models.KeyVaultSecretStatus;
import java.util.Collections;
import java.util.Map;

public final class CertificateOrderCertificateImpl
    implements CertificateOrderCertificate, CertificateOrderCertificate.Definition, CertificateOrderCertificate.Update {
    private CertificateOrderCertificateInner innerObject;

    private final WebSiteManager serviceManager;

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public String keyVaultId() {
        return this.innerModel().keyVaultId();
    }

    public String keyVaultSecretName() {
        return this.innerModel().keyVaultSecretName();
    }

    public KeyVaultSecretStatus provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String kind() {
        return this.innerModel().kind();
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public CertificateOrderCertificateInner innerModel() {
        return this.innerObject;
    }

    private WebSiteManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String certificateOrderName;

    private String name;

    public CertificateOrderCertificateImpl withExistingCertificateOrder(
        String resourceGroupName, String certificateOrderName) {
        this.resourceGroupName = resourceGroupName;
        this.certificateOrderName = certificateOrderName;
        return this;
    }

    public CertificateOrderCertificate create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCertificateOrders()
                .createOrUpdateCertificateWithResponse(
                    resourceGroupName, certificateOrderName, name, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public CertificateOrderCertificate create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCertificateOrders()
                .createOrUpdateCertificateWithResponse(
                    resourceGroupName, certificateOrderName, name, this.innerModel(), context)
                .getValue();
        return this;
    }

    CertificateOrderCertificateImpl(String name, WebSiteManager serviceManager) {
        this.innerObject = new CertificateOrderCertificateInner();
        this.serviceManager = serviceManager;
        this.name = name;
    }

    public CertificateOrderCertificateImpl update() {
        return this;
    }

    public CertificateOrderCertificate apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCertificateOrders()
                .updateCertificateWithResponse(
                    resourceGroupName, certificateOrderName, name, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public CertificateOrderCertificate apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCertificateOrders()
                .updateCertificateWithResponse(
                    resourceGroupName, certificateOrderName, name, this.innerModel(), context)
                .getValue();
        return this;
    }

    CertificateOrderCertificateImpl(CertificateOrderCertificateInner innerObject, WebSiteManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.certificateOrderName = Utils.getValueFromIdByName(innerObject.id(), "certificateOrders");
        this.name = Utils.getValueFromIdByName(innerObject.id(), "certificates");
    }

    public CertificateOrderCertificate refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCertificateOrders()
                .getCertificateWithResponse(resourceGroupName, certificateOrderName, name, Context.NONE)
                .getValue();
        return this;
    }

    public CertificateOrderCertificate refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getCertificateOrders()
                .getCertificateWithResponse(resourceGroupName, certificateOrderName, name, context)
                .getValue();
        return this;
    }

    public CertificateOrderCertificateImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public CertificateOrderCertificateImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public CertificateOrderCertificateImpl withTags(Map<String, String> tags) {
        this.innerModel().withTags(tags);
        return this;
    }

    public CertificateOrderCertificateImpl withKeyVaultId(String keyVaultId) {
        this.innerModel().withKeyVaultId(keyVaultId);
        return this;
    }

    public CertificateOrderCertificateImpl withKeyVaultSecretName(String keyVaultSecretName) {
        this.innerModel().withKeyVaultSecretName(keyVaultSecretName);
        return this;
    }

    public CertificateOrderCertificateImpl withProvisioningState(KeyVaultSecretStatus provisioningState) {
        this.innerModel().withProvisioningState(provisioningState);
        return this;
    }

    public CertificateOrderCertificateImpl withKind(String kind) {
        this.innerModel().withKind(kind);
        return this;
    }

    public CertificateOrderCertificateImpl withName(String name) {
        this.innerModel().withName(name);
        return this;
    }

    public CertificateOrderCertificateImpl withType(String type) {
        this.innerModel().withType(type);
        return this;
    }
}
