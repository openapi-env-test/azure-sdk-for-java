// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.Resource;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.Map;

/** Certificate Details. */
@JsonFlatten
@Fluent
public class CertificateDetails extends Resource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(CertificateDetails.class);

    /*
     * Version
     */
    @JsonProperty(value = "properties.version")
    private Integer version;

    /*
     * Serial Number
     */
    @JsonProperty(value = "properties.serialNumber")
    private String serialNumber;

    /*
     * Thumbprint
     */
    @JsonProperty(value = "properties.thumbprint")
    private String thumbprint;

    /*
     * Subject
     */
    @JsonProperty(value = "properties.subject")
    private String subject;

    /*
     * Valid from
     */
    @JsonProperty(value = "properties.notBefore")
    private OffsetDateTime notBefore;

    /*
     * Valid to
     */
    @JsonProperty(value = "properties.notAfter")
    private OffsetDateTime notAfter;

    /*
     * Signature Algorithm
     */
    @JsonProperty(value = "properties.signatureAlgorithm")
    private String signatureAlgorithm;

    /*
     * Issuer
     */
    @JsonProperty(value = "properties.issuer")
    private String issuer;

    /*
     * Raw certificate data
     */
    @JsonProperty(value = "properties.rawData")
    private String rawData;

    /*
     * Kind of resource
     */
    @JsonProperty(value = "kind")
    private String kind;

    /*
     * Resource Id
     */
    @JsonProperty(value = "id")
    private String id;

    /*
     * Resource Name
     */
    @JsonProperty(value = "name")
    private String name;

    /*
     * Resource type
     */
    @JsonProperty(value = "type")
    private String type;

    /**
     * Get the version property: Version.
     *
     * @return the version value.
     */
    public Integer version() {
        return this.version;
    }

    /**
     * Set the version property: Version.
     *
     * @param version the version value to set.
     * @return the CertificateDetails object itself.
     */
    public CertificateDetails withVersion(Integer version) {
        this.version = version;
        return this;
    }

    /**
     * Get the serialNumber property: Serial Number.
     *
     * @return the serialNumber value.
     */
    public String serialNumber() {
        return this.serialNumber;
    }

    /**
     * Set the serialNumber property: Serial Number.
     *
     * @param serialNumber the serialNumber value to set.
     * @return the CertificateDetails object itself.
     */
    public CertificateDetails withSerialNumber(String serialNumber) {
        this.serialNumber = serialNumber;
        return this;
    }

    /**
     * Get the thumbprint property: Thumbprint.
     *
     * @return the thumbprint value.
     */
    public String thumbprint() {
        return this.thumbprint;
    }

    /**
     * Set the thumbprint property: Thumbprint.
     *
     * @param thumbprint the thumbprint value to set.
     * @return the CertificateDetails object itself.
     */
    public CertificateDetails withThumbprint(String thumbprint) {
        this.thumbprint = thumbprint;
        return this;
    }

    /**
     * Get the subject property: Subject.
     *
     * @return the subject value.
     */
    public String subject() {
        return this.subject;
    }

    /**
     * Set the subject property: Subject.
     *
     * @param subject the subject value to set.
     * @return the CertificateDetails object itself.
     */
    public CertificateDetails withSubject(String subject) {
        this.subject = subject;
        return this;
    }

    /**
     * Get the notBefore property: Valid from.
     *
     * @return the notBefore value.
     */
    public OffsetDateTime notBefore() {
        return this.notBefore;
    }

    /**
     * Set the notBefore property: Valid from.
     *
     * @param notBefore the notBefore value to set.
     * @return the CertificateDetails object itself.
     */
    public CertificateDetails withNotBefore(OffsetDateTime notBefore) {
        this.notBefore = notBefore;
        return this;
    }

    /**
     * Get the notAfter property: Valid to.
     *
     * @return the notAfter value.
     */
    public OffsetDateTime notAfter() {
        return this.notAfter;
    }

    /**
     * Set the notAfter property: Valid to.
     *
     * @param notAfter the notAfter value to set.
     * @return the CertificateDetails object itself.
     */
    public CertificateDetails withNotAfter(OffsetDateTime notAfter) {
        this.notAfter = notAfter;
        return this;
    }

    /**
     * Get the signatureAlgorithm property: Signature Algorithm.
     *
     * @return the signatureAlgorithm value.
     */
    public String signatureAlgorithm() {
        return this.signatureAlgorithm;
    }

    /**
     * Set the signatureAlgorithm property: Signature Algorithm.
     *
     * @param signatureAlgorithm the signatureAlgorithm value to set.
     * @return the CertificateDetails object itself.
     */
    public CertificateDetails withSignatureAlgorithm(String signatureAlgorithm) {
        this.signatureAlgorithm = signatureAlgorithm;
        return this;
    }

    /**
     * Get the issuer property: Issuer.
     *
     * @return the issuer value.
     */
    public String issuer() {
        return this.issuer;
    }

    /**
     * Set the issuer property: Issuer.
     *
     * @param issuer the issuer value to set.
     * @return the CertificateDetails object itself.
     */
    public CertificateDetails withIssuer(String issuer) {
        this.issuer = issuer;
        return this;
    }

    /**
     * Get the rawData property: Raw certificate data.
     *
     * @return the rawData value.
     */
    public String rawData() {
        return this.rawData;
    }

    /**
     * Set the rawData property: Raw certificate data.
     *
     * @param rawData the rawData value to set.
     * @return the CertificateDetails object itself.
     */
    public CertificateDetails withRawData(String rawData) {
        this.rawData = rawData;
        return this;
    }

    /**
     * Get the kind property: Kind of resource.
     *
     * @return the kind value.
     */
    public String kind() {
        return this.kind;
    }

    /**
     * Set the kind property: Kind of resource.
     *
     * @param kind the kind value to set.
     * @return the CertificateDetails object itself.
     */
    public CertificateDetails withKind(String kind) {
        this.kind = kind;
        return this;
    }

    /**
     * Get the id property: Resource Id.
     *
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id property: Resource Id.
     *
     * @param id the id value to set.
     * @return the CertificateDetails object itself.
     */
    public CertificateDetails withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the name property: Resource Name.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Resource Name.
     *
     * @param name the name value to set.
     * @return the CertificateDetails object itself.
     */
    public CertificateDetails withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the type property: Resource type.
     *
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Set the type property: Resource type.
     *
     * @param type the type value to set.
     * @return the CertificateDetails object itself.
     */
    public CertificateDetails withType(String type) {
        this.type = type;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public CertificateDetails withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public CertificateDetails withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
