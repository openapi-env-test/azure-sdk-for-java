// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.models;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.appservice.generated.fluent.models.CertificateOrderCertificateInner;
import java.util.Map;

/** An immutable client-side representation of CertificateOrderCertificate. */
public interface CertificateOrderCertificate {
    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the keyVaultId property: Key Vault Csm resource Id.
     *
     * @return the keyVaultId value.
     */
    String keyVaultId();

    /**
     * Gets the keyVaultSecretName property: Key Vault secret name.
     *
     * @return the keyVaultSecretName value.
     */
    String keyVaultSecretName();

    /**
     * Gets the provisioningState property: Status of the Key Vault secret.
     *
     * @return the provisioningState value.
     */
    KeyVaultSecretStatus provisioningState();

    /**
     * Gets the kind property: Kind of resource.
     *
     * @return the kind value.
     */
    String kind();

    /**
     * Gets the id property: Resource Id.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: Resource Name.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: Resource type.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the inner com.azure.resourcemanager.appservice.generated.fluent.models.CertificateOrderCertificateInner
     * object.
     *
     * @return the inner object.
     */
    CertificateOrderCertificateInner innerModel();

    /** The entirety of the CertificateOrderCertificate definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithParentResource,
            DefinitionStages.WithCreate {
    }
    /** The CertificateOrderCertificate definition stages. */
    interface DefinitionStages {
        /** The first stage of the CertificateOrderCertificate definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the CertificateOrderCertificate definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(String location);
        }
        /** The stage of the CertificateOrderCertificate definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, certificateOrderName.
             *
             * @param resourceGroupName Azure resource group name.
             * @param certificateOrderName Certificate name.
             * @return the next definition stage.
             */
            WithCreate withExistingCertificateOrder(String resourceGroupName, String certificateOrderName);
        }
        /**
         * The stage of the CertificateOrderCertificate definition which contains all the minimum required properties
         * for the resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags,
                DefinitionStages.WithKeyVaultId,
                DefinitionStages.WithKeyVaultSecretName,
                DefinitionStages.WithProvisioningState,
                DefinitionStages.WithKind,
                DefinitionStages.WithName,
                DefinitionStages.WithType {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            CertificateOrderCertificate create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            CertificateOrderCertificate create(Context context);
        }
        /** The stage of the CertificateOrderCertificate definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the CertificateOrderCertificate definition allowing to specify keyVaultId. */
        interface WithKeyVaultId {
            /**
             * Specifies the keyVaultId property: Key Vault Csm resource Id.
             *
             * @param keyVaultId Key Vault Csm resource Id.
             * @return the next definition stage.
             */
            WithCreate withKeyVaultId(String keyVaultId);
        }
        /** The stage of the CertificateOrderCertificate definition allowing to specify keyVaultSecretName. */
        interface WithKeyVaultSecretName {
            /**
             * Specifies the keyVaultSecretName property: Key Vault secret name.
             *
             * @param keyVaultSecretName Key Vault secret name.
             * @return the next definition stage.
             */
            WithCreate withKeyVaultSecretName(String keyVaultSecretName);
        }
        /** The stage of the CertificateOrderCertificate definition allowing to specify provisioningState. */
        interface WithProvisioningState {
            /**
             * Specifies the provisioningState property: Status of the Key Vault secret.
             *
             * @param provisioningState Status of the Key Vault secret.
             * @return the next definition stage.
             */
            WithCreate withProvisioningState(KeyVaultSecretStatus provisioningState);
        }
        /** The stage of the CertificateOrderCertificate definition allowing to specify kind. */
        interface WithKind {
            /**
             * Specifies the kind property: Kind of resource.
             *
             * @param kind Kind of resource.
             * @return the next definition stage.
             */
            WithCreate withKind(String kind);
        }
        /** The stage of the CertificateOrderCertificate definition allowing to specify name. */
        interface WithName {
            /**
             * Specifies the name property: Resource Name.
             *
             * @param name Resource Name.
             * @return the next definition stage.
             */
            WithCreate withName(String name);
        }
        /** The stage of the CertificateOrderCertificate definition allowing to specify type. */
        interface WithType {
            /**
             * Specifies the type property: Resource type.
             *
             * @param type Resource type.
             * @return the next definition stage.
             */
            WithCreate withType(String type);
        }
    }
    /**
     * Begins update for the CertificateOrderCertificate resource.
     *
     * @return the stage of resource update.
     */
    CertificateOrderCertificate.Update update();

    /** The template for CertificateOrderCertificate update. */
    interface Update
        extends UpdateStages.WithTags,
            UpdateStages.WithKeyVaultId,
            UpdateStages.WithKeyVaultSecretName,
            UpdateStages.WithProvisioningState,
            UpdateStages.WithKind,
            UpdateStages.WithName,
            UpdateStages.WithType {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        CertificateOrderCertificate apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        CertificateOrderCertificate apply(Context context);
    }
    /** The CertificateOrderCertificate update stages. */
    interface UpdateStages {
        /** The stage of the CertificateOrderCertificate update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
        /** The stage of the CertificateOrderCertificate update allowing to specify keyVaultId. */
        interface WithKeyVaultId {
            /**
             * Specifies the keyVaultId property: Key Vault Csm resource Id.
             *
             * @param keyVaultId Key Vault Csm resource Id.
             * @return the next definition stage.
             */
            Update withKeyVaultId(String keyVaultId);
        }
        /** The stage of the CertificateOrderCertificate update allowing to specify keyVaultSecretName. */
        interface WithKeyVaultSecretName {
            /**
             * Specifies the keyVaultSecretName property: Key Vault secret name.
             *
             * @param keyVaultSecretName Key Vault secret name.
             * @return the next definition stage.
             */
            Update withKeyVaultSecretName(String keyVaultSecretName);
        }
        /** The stage of the CertificateOrderCertificate update allowing to specify provisioningState. */
        interface WithProvisioningState {
            /**
             * Specifies the provisioningState property: Status of the Key Vault secret.
             *
             * @param provisioningState Status of the Key Vault secret.
             * @return the next definition stage.
             */
            Update withProvisioningState(KeyVaultSecretStatus provisioningState);
        }
        /** The stage of the CertificateOrderCertificate update allowing to specify kind. */
        interface WithKind {
            /**
             * Specifies the kind property: Kind of resource.
             *
             * @param kind Kind of resource.
             * @return the next definition stage.
             */
            Update withKind(String kind);
        }
        /** The stage of the CertificateOrderCertificate update allowing to specify name. */
        interface WithName {
            /**
             * Specifies the name property: Resource Name.
             *
             * @param name Resource Name.
             * @return the next definition stage.
             */
            Update withName(String name);
        }
        /** The stage of the CertificateOrderCertificate update allowing to specify type. */
        interface WithType {
            /**
             * Specifies the type property: Resource type.
             *
             * @param type Resource type.
             * @return the next definition stage.
             */
            Update withType(String type);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    CertificateOrderCertificate refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    CertificateOrderCertificate refresh(Context context);
}
