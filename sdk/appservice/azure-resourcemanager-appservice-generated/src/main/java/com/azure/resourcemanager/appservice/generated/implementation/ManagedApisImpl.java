// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.appservice.generated.WebSiteManager;
import com.azure.resourcemanager.appservice.generated.fluent.ManagedApisClient;
import com.azure.resourcemanager.appservice.generated.fluent.models.ApiEntityInner;
import com.azure.resourcemanager.appservice.generated.models.ApiEntity;
import com.azure.resourcemanager.appservice.generated.models.ManagedApis;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class ManagedApisImpl implements ManagedApis {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ManagedApisImpl.class);

    private final ManagedApisClient innerClient;

    private final WebSiteManager serviceManager;

    public ManagedApisImpl(ManagedApisClient innerClient, WebSiteManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<ApiEntity> list(String location) {
        PagedIterable<ApiEntityInner> inner = this.serviceClient().list(location);
        return inner.mapPage(inner1 -> new ApiEntityImpl(inner1, this.manager()));
    }

    public PagedIterable<ApiEntity> list(String location, Context context) {
        PagedIterable<ApiEntityInner> inner = this.serviceClient().list(location, context);
        return inner.mapPage(inner1 -> new ApiEntityImpl(inner1, this.manager()));
    }

    public ApiEntity get(String location, String apiName) {
        ApiEntityInner inner = this.serviceClient().get(location, apiName);
        if (inner != null) {
            return new ApiEntityImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<ApiEntity> getWithResponse(String location, String apiName, Boolean export, Context context) {
        Response<ApiEntityInner> inner = this.serviceClient().getWithResponse(location, apiName, export, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new ApiEntityImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    private ManagedApisClient serviceClient() {
        return this.innerClient;
    }

    private WebSiteManager manager() {
        return this.serviceManager;
    }
}
