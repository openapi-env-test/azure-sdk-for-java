// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of Certificates. */
public interface Certificates {
    /**
     * Get certificates for a subscription in the specified resource group.
     *
     * @param resourceGroupName Name of the resource group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return certificates for a subscription in the specified resource group.
     */
    PagedIterable<Certificate> listByResourceGroup(String resourceGroupName);

    /**
     * Get certificates for a subscription in the specified resource group.
     *
     * @param resourceGroupName Name of the resource group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return certificates for a subscription in the specified resource group.
     */
    PagedIterable<Certificate> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Get a certificate by certificate name for a subscription in the specified resource group.
     *
     * @param resourceGroupName Name of the resource group.
     * @param name Name of the certificate.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a certificate by certificate name for a subscription in the specified resource group.
     */
    Certificate getByResourceGroup(String resourceGroupName, String name);

    /**
     * Get a certificate by certificate name for a subscription in the specified resource group.
     *
     * @param resourceGroupName Name of the resource group.
     * @param name Name of the certificate.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a certificate by certificate name for a subscription in the specified resource group.
     */
    Response<Certificate> getByResourceGroupWithResponse(String resourceGroupName, String name, Context context);

    /**
     * Delete a certificate by name in a specified subscription and resourcegroup.
     *
     * @param resourceGroupName Name of the resource group.
     * @param name Name of the certificate to be deleted.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return any object.
     */
    Object deleteByResourceGroup(String resourceGroupName, String name);

    /**
     * Delete a certificate by name in a specified subscription and resourcegroup.
     *
     * @param resourceGroupName Name of the resource group.
     * @param name Name of the certificate to be deleted.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return any object.
     */
    Response<Object> deleteWithResponse(String resourceGroupName, String name, Context context);

    /**
     * Gets the certificate signing requests for a subscription in the specified resource group.
     *
     * @param resourceGroupName Name of the resource group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the certificate signing requests for a subscription in the specified resource group.
     */
    Object getCsrs(String resourceGroupName);

    /**
     * Gets the certificate signing requests for a subscription in the specified resource group.
     *
     * @param resourceGroupName Name of the resource group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the certificate signing requests for a subscription in the specified resource group.
     */
    Response<Object> getCsrsWithResponse(String resourceGroupName, Context context);

    /**
     * Gets a certificate signing request by certificate name for a subscription in the specified resource group.
     *
     * @param resourceGroupName Name of the resource group.
     * @param name Name of the certificate.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a certificate signing request by certificate name for a subscription in the specified resource group.
     */
    Csr getCsr(String resourceGroupName, String name);

    /**
     * Gets a certificate signing request by certificate name for a subscription in the specified resource group.
     *
     * @param resourceGroupName Name of the resource group.
     * @param name Name of the certificate.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a certificate signing request by certificate name for a subscription in the specified resource group.
     */
    Response<Csr> getCsrWithResponse(String resourceGroupName, String name, Context context);

    /**
     * Delete the certificate signing request.
     *
     * @param resourceGroupName Name of the resource group.
     * @param name Name of the certificate signing request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return any object.
     */
    Object deleteCsr(String resourceGroupName, String name);

    /**
     * Delete the certificate signing request.
     *
     * @param resourceGroupName Name of the resource group.
     * @param name Name of the certificate signing request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return any object.
     */
    Response<Object> deleteCsrWithResponse(String resourceGroupName, String name, Context context);

    /**
     * Get a certificate by certificate name for a subscription in the specified resource group.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a certificate by certificate name for a subscription in the specified resource group.
     */
    Certificate getById(String id);

    /**
     * Get a certificate by certificate name for a subscription in the specified resource group.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a certificate by certificate name for a subscription in the specified resource group.
     */
    Response<Certificate> getByIdWithResponse(String id, Context context);

    /**
     * Gets a certificate signing request by certificate name for a subscription in the specified resource group.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a certificate signing request by certificate name for a subscription in the specified resource group.
     */
    Csr getCsrById(String id);

    /**
     * Gets a certificate signing request by certificate name for a subscription in the specified resource group.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a certificate signing request by certificate name for a subscription in the specified resource group.
     */
    Response<Csr> getCsrByIdWithResponse(String id, Context context);

    /**
     * Delete a certificate by name in a specified subscription and resourcegroup.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return any object.
     */
    Object deleteById(String id);

    /**
     * Delete a certificate by name in a specified subscription and resourcegroup.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return any object.
     */
    Response<Object> deleteByIdWithResponse(String id, Context context);

    /**
     * Delete the certificate signing request.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return any object.
     */
    Object deleteCsrById(String id);

    /**
     * Delete the certificate signing request.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return any object.
     */
    Response<Object> deleteCsrByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new Certificate resource.
     *
     * @param name resource name.
     * @return the first stage of the new Certificate definition.
     */
    Certificate.DefinitionStages.Blank defineCertificate(String name);

    /**
     * Begins definition for a new Csr resource.
     *
     * @param name resource name.
     * @return the first stage of the new Csr definition.
     */
    Csr.DefinitionStages.Blank defineCsr(String name);
}
