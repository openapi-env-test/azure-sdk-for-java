// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of Domains. */
public interface Domains {
    /**
     * Lists domains under a resource group.
     *
     * @param resourceGroupName Name of the resource group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of domains.
     */
    PagedIterable<Domain> listByResourceGroup(String resourceGroupName);

    /**
     * Lists domains under a resource group.
     *
     * @param resourceGroupName Name of the resource group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return collection of domains.
     */
    PagedIterable<Domain> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Gets details of a domain.
     *
     * @param resourceGroupName Name of the resource group.
     * @param domainName Name of the domain.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return details of a domain.
     */
    Domain getByResourceGroup(String resourceGroupName, String domainName);

    /**
     * Gets details of a domain.
     *
     * @param resourceGroupName Name of the resource group.
     * @param domainName Name of the domain.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return details of a domain.
     */
    Response<Domain> getByResourceGroupWithResponse(String resourceGroupName, String domainName, Context context);

    /**
     * Deletes a domain.
     *
     * @param resourceGroupName Name of the resource group.
     * @param domainName Name of the domain.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return any object.
     */
    Object delete(String resourceGroupName, String domainName);

    /**
     * Deletes a domain.
     *
     * @param resourceGroupName Name of the resource group.
     * @param domainName Name of the domain.
     * @param forceHardDeleteDomain If true then the domain will be deleted immediately instead of after 24 hours.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return any object.
     */
    Response<Object> deleteWithResponse(
        String resourceGroupName, String domainName, Boolean forceHardDeleteDomain, Context context);

    /**
     * Retrieves the latest status of a domain purchase operation.
     *
     * @param resourceGroupName Name of the resource group.
     * @param domainName Name of the domain.
     * @param operationId Domain purchase operation Id.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a domain.
     */
    Domain getDomainOperation(String resourceGroupName, String domainName, String operationId);

    /**
     * Retrieves the latest status of a domain purchase operation.
     *
     * @param resourceGroupName Name of the resource group.
     * @param domainName Name of the domain.
     * @param operationId Domain purchase operation Id.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a domain.
     */
    Response<Domain> getDomainOperationWithResponse(
        String resourceGroupName, String domainName, String operationId, Context context);

    /**
     * Gets details of a domain.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return details of a domain.
     */
    Domain getById(String id);

    /**
     * Gets details of a domain.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return details of a domain.
     */
    Response<Domain> getByIdWithResponse(String id, Context context);

    /**
     * Deletes a domain.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return any object.
     */
    Object deleteById(String id);

    /**
     * Deletes a domain.
     *
     * @param id the resource ID.
     * @param forceHardDeleteDomain If true then the domain will be deleted immediately instead of after 24 hours.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return any object.
     */
    Response<Object> deleteByIdWithResponse(String id, Boolean forceHardDeleteDomain, Context context);

    /**
     * Begins definition for a new Domain resource.
     *
     * @param name resource name.
     * @return the first stage of the new Domain definition.
     */
    Domain.DefinitionStages.Blank define(String name);
}
