// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appservice.generated.implementation;

import com.azure.resourcemanager.appservice.generated.WebSiteManager;
import com.azure.resourcemanager.appservice.generated.fluent.models.VnetInfoInner;
import com.azure.resourcemanager.appservice.generated.fluent.models.VnetRouteInner;
import com.azure.resourcemanager.appservice.generated.models.VnetInfo;
import com.azure.resourcemanager.appservice.generated.models.VnetRoute;
import java.util.Collections;
import java.util.List;
import java.util.stream.Collectors;

public final class VnetInfoImpl implements VnetInfo {
    private VnetInfoInner innerObject;

    private final WebSiteManager serviceManager;

    VnetInfoImpl(VnetInfoInner innerObject, WebSiteManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String kind() {
        return this.innerModel().kind();
    }

    public String vnetResourceId() {
        return this.innerModel().vnetResourceId();
    }

    public String certThumbprint() {
        return this.innerModel().certThumbprint();
    }

    public byte[] certBlob() {
        return this.innerModel().certBlob();
    }

    public List<VnetRoute> routes() {
        List<VnetRouteInner> inner = this.innerModel().routes();
        if (inner != null) {
            return Collections
                .unmodifiableList(
                    inner
                        .stream()
                        .map(inner1 -> new VnetRouteImpl(inner1, this.manager()))
                        .collect(Collectors.toList()));
        } else {
            return Collections.emptyList();
        }
    }

    public Boolean resyncRequired() {
        return this.innerModel().resyncRequired();
    }

    public String dnsServers() {
        return this.innerModel().dnsServers();
    }

    public VnetInfoInner innerModel() {
        return this.innerObject;
    }

    private WebSiteManager manager() {
        return this.serviceManager;
    }
}
