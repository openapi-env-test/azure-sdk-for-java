// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devtestlabs.generated;

import com.azure.resourcemanager.devtestlabs.models.ArtifactInstallProperties;
import com.azure.resourcemanager.devtestlabs.models.InboundNatRule;
import com.azure.resourcemanager.devtestlabs.models.StorageType;
import com.azure.resourcemanager.devtestlabs.models.TransportProtocol;
import java.util.Arrays;

/** Samples for Formulas CreateOrUpdate. */
public final class FormulasCreateOrUpdateSamples {
    /*
     * x-ms-original-file: specification/devtestlabs/resource-manager/Microsoft.DevTestLab/stable/2021-09-01/examples/Formulas_CreateOrUpdate.json
     */
    /**
     * Sample code: Formulas_CreateOrUpdate.
     *
     * @param manager Entry point to DevTestLabsManager.
     */
    public static void formulasCreateOrUpdate(com.azure.resourcemanager.devtestlabs.DevTestLabsManager manager) {
        manager
            .formulas()
            .define("{formulaName}")
            .withRegion("{location}")
            .withExistingLab("resourceGroupName", "{labName}")
            .withDescription("Formula using a Linux base")
            .withLocationPropertiesLocation("{location}")
            .withNotes("Ubuntu Server 20.10")
            .withSize("Standard_B1ms")
            .withUsername("user")
            .withIsAuthenticationWithSshKey(false)
            .withLabSubnetName("Dtl{labName}Subnet")
            .withLabVirtualNetworkId("/virtualnetworks/dtl{labName}")
            .withDisallowPublicIpAddress(true)
            .withArtifacts(
                Arrays
                    .asList(
                        new ArtifactInstallProperties()
                            .withArtifactId("/artifactsources/{artifactSourceName}/artifacts/linux-install-nodejs")
                            .withParameters(Arrays.asList())))
            .withAllowClaim(false)
            .withStorageType(StorageType.STANDARD)
            .withOffer("0001-com-ubuntu-server-groovy")
            .withPublisher("canonical")
            .withSku("20_10")
            .withOsTypeGalleryImageReferenceOsType("Linux")
            .withVersion("latest")
            .withInboundNatRules(
                Arrays.asList(new InboundNatRule().withTransportProtocol(TransportProtocol.TCP).withBackendPort(22)))
            .create();
    }
}
