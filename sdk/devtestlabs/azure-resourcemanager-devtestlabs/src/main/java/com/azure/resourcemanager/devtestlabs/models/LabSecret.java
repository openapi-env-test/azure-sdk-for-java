// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devtestlabs.models;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.devtestlabs.fluent.models.LabSecretInner;
import java.util.Map;

/** An immutable client-side representation of LabSecret. */
public interface LabSecret {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the systemData property: The system metadata relating to this resource.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the value property: The value of the secret for secret creation.
     *
     * @return the value value.
     */
    String value();

    /**
     * Gets the keyVaultEntry property: The name of the entry in the lab KeyVault.
     *
     * @return the keyVaultEntry value.
     */
    String keyVaultEntry();

    /**
     * Gets the enabledForArtifacts property: Is the secret enabled for use with artifacts?.
     *
     * @return the enabledForArtifacts value.
     */
    Boolean enabledForArtifacts();

    /**
     * Gets the enabledForVmCreation property: Is the secret enabled for use with creation of VMs?.
     *
     * @return the enabledForVmCreation value.
     */
    Boolean enabledForVmCreation();

    /**
     * Gets the enabledForArmEnvironments property: Is the secret enabled for use with ARM environments?.
     *
     * @return the enabledForArmEnvironments value.
     */
    Boolean enabledForArmEnvironments();

    /**
     * Gets the provisioningState property: The provisioning status of the resource.
     *
     * @return the provisioningState value.
     */
    String provisioningState();

    /**
     * Gets the uniqueIdentifier property: The unique immutable identifier of a resource (Guid).
     *
     * @return the uniqueIdentifier value.
     */
    String uniqueIdentifier();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the name of the resource group.
     *
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.devtestlabs.fluent.models.LabSecretInner object.
     *
     * @return the inner object.
     */
    LabSecretInner innerModel();

    /** The entirety of the LabSecret definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithParentResource,
            DefinitionStages.WithCreate {
    }
    /** The LabSecret definition stages. */
    interface DefinitionStages {
        /** The first stage of the LabSecret definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the LabSecret definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(String location);
        }
        /** The stage of the LabSecret definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, labName.
             *
             * @param resourceGroupName The name of the resource group.
             * @param labName The name of the lab.
             * @return the next definition stage.
             */
            WithCreate withExistingLab(String resourceGroupName, String labName);
        }
        /**
         * The stage of the LabSecret definition which contains all the minimum required properties for the resource to
         * be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags,
                DefinitionStages.WithValue,
                DefinitionStages.WithEnabledForArtifacts,
                DefinitionStages.WithEnabledForVmCreation,
                DefinitionStages.WithEnabledForArmEnvironments {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            LabSecret create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            LabSecret create(Context context);
        }
        /** The stage of the LabSecret definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the LabSecret definition allowing to specify value. */
        interface WithValue {
            /**
             * Specifies the value property: The value of the secret for secret creation..
             *
             * @param value The value of the secret for secret creation.
             * @return the next definition stage.
             */
            WithCreate withValue(String value);
        }
        /** The stage of the LabSecret definition allowing to specify enabledForArtifacts. */
        interface WithEnabledForArtifacts {
            /**
             * Specifies the enabledForArtifacts property: Is the secret enabled for use with artifacts?.
             *
             * @param enabledForArtifacts Is the secret enabled for use with artifacts?.
             * @return the next definition stage.
             */
            WithCreate withEnabledForArtifacts(Boolean enabledForArtifacts);
        }
        /** The stage of the LabSecret definition allowing to specify enabledForVmCreation. */
        interface WithEnabledForVmCreation {
            /**
             * Specifies the enabledForVmCreation property: Is the secret enabled for use with creation of VMs?.
             *
             * @param enabledForVmCreation Is the secret enabled for use with creation of VMs?.
             * @return the next definition stage.
             */
            WithCreate withEnabledForVmCreation(Boolean enabledForVmCreation);
        }
        /** The stage of the LabSecret definition allowing to specify enabledForArmEnvironments. */
        interface WithEnabledForArmEnvironments {
            /**
             * Specifies the enabledForArmEnvironments property: Is the secret enabled for use with ARM environments?.
             *
             * @param enabledForArmEnvironments Is the secret enabled for use with ARM environments?.
             * @return the next definition stage.
             */
            WithCreate withEnabledForArmEnvironments(Boolean enabledForArmEnvironments);
        }
    }
    /**
     * Begins update for the LabSecret resource.
     *
     * @return the stage of resource update.
     */
    LabSecret.Update update();

    /** The template for LabSecret update. */
    interface Update extends UpdateStages.WithTags {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        LabSecret apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        LabSecret apply(Context context);
    }
    /** The LabSecret update stages. */
    interface UpdateStages {
        /** The stage of the LabSecret update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: The tags of the resource..
             *
             * @param tags The tags of the resource.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    LabSecret refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    LabSecret refresh(Context context);
}
