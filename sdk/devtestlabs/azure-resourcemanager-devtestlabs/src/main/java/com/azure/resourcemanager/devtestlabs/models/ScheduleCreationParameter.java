// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devtestlabs.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.devtestlabs.fluent.models.ScheduleCreationParameterProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Map;

/** Properties for creating a schedule. */
@Fluent
public final class ScheduleCreationParameter {
    /*
     * The properties of the schedule.
     */
    @JsonProperty(value = "properties")
    private ScheduleCreationParameterProperties innerProperties;

    /*
     * The name of the virtual machine or environment
     */
    @JsonProperty(value = "name")
    private String name;

    /*
     * The location of the new virtual machine or environment
     */
    @JsonProperty(value = "location", access = JsonProperty.Access.WRITE_ONLY)
    private String location;

    /*
     * The tags of the resource.
     */
    @JsonProperty(value = "tags")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> tags;

    /**
     * Get the innerProperties property: The properties of the schedule.
     *
     * @return the innerProperties value.
     */
    private ScheduleCreationParameterProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the name property: The name of the virtual machine or environment.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: The name of the virtual machine or environment.
     *
     * @param name the name value to set.
     * @return the ScheduleCreationParameter object itself.
     */
    public ScheduleCreationParameter withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the location property: The location of the new virtual machine or environment.
     *
     * @return the location value.
     */
    public String location() {
        return this.location;
    }

    /**
     * Get the tags property: The tags of the resource.
     *
     * @return the tags value.
     */
    public Map<String, String> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: The tags of the resource.
     *
     * @param tags the tags value to set.
     * @return the ScheduleCreationParameter object itself.
     */
    public ScheduleCreationParameter withTags(Map<String, String> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get the status property: The status of the schedule (i.e. Enabled, Disabled).
     *
     * @return the status value.
     */
    public EnableStatus status() {
        return this.innerProperties() == null ? null : this.innerProperties().status();
    }

    /**
     * Set the status property: The status of the schedule (i.e. Enabled, Disabled).
     *
     * @param status the status value to set.
     * @return the ScheduleCreationParameter object itself.
     */
    public ScheduleCreationParameter withStatus(EnableStatus status) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ScheduleCreationParameterProperties();
        }
        this.innerProperties().withStatus(status);
        return this;
    }

    /**
     * Get the taskType property: The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).
     *
     * @return the taskType value.
     */
    public String taskType() {
        return this.innerProperties() == null ? null : this.innerProperties().taskType();
    }

    /**
     * Set the taskType property: The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).
     *
     * @param taskType the taskType value to set.
     * @return the ScheduleCreationParameter object itself.
     */
    public ScheduleCreationParameter withTaskType(String taskType) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ScheduleCreationParameterProperties();
        }
        this.innerProperties().withTaskType(taskType);
        return this;
    }

    /**
     * Get the timeZoneId property: The time zone ID (e.g. Pacific Standard time).
     *
     * @return the timeZoneId value.
     */
    public String timeZoneId() {
        return this.innerProperties() == null ? null : this.innerProperties().timeZoneId();
    }

    /**
     * Set the timeZoneId property: The time zone ID (e.g. Pacific Standard time).
     *
     * @param timeZoneId the timeZoneId value to set.
     * @return the ScheduleCreationParameter object itself.
     */
    public ScheduleCreationParameter withTimeZoneId(String timeZoneId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ScheduleCreationParameterProperties();
        }
        this.innerProperties().withTimeZoneId(timeZoneId);
        return this;
    }

    /**
     * Get the createdDate property: The creation date of the schedule.
     *
     * @return the createdDate value.
     */
    public OffsetDateTime createdDate() {
        return this.innerProperties() == null ? null : this.innerProperties().createdDate();
    }

    /**
     * Get the targetResourceId property: The resource ID to which the schedule belongs.
     *
     * @return the targetResourceId value.
     */
    public String targetResourceId() {
        return this.innerProperties() == null ? null : this.innerProperties().targetResourceId();
    }

    /**
     * Set the targetResourceId property: The resource ID to which the schedule belongs.
     *
     * @param targetResourceId the targetResourceId value to set.
     * @return the ScheduleCreationParameter object itself.
     */
    public ScheduleCreationParameter withTargetResourceId(String targetResourceId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ScheduleCreationParameterProperties();
        }
        this.innerProperties().withTargetResourceId(targetResourceId);
        return this;
    }

    /**
     * Get the provisioningState property: The provisioning status of the resource.
     *
     * @return the provisioningState value.
     */
    public String provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Get the uniqueIdentifier property: The unique immutable identifier of a resource (Guid).
     *
     * @return the uniqueIdentifier value.
     */
    public String uniqueIdentifier() {
        return this.innerProperties() == null ? null : this.innerProperties().uniqueIdentifier();
    }

    /**
     * Get the weekdays property: The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday,
     * etc.).
     *
     * @return the weekdays value.
     */
    public List<String> weekdays() {
        return this.innerProperties() == null ? null : this.innerProperties().weekdays();
    }

    /**
     * Set the weekdays property: The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday,
     * etc.).
     *
     * @param weekdays the weekdays value to set.
     * @return the ScheduleCreationParameter object itself.
     */
    public ScheduleCreationParameter withWeekdays(List<String> weekdays) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ScheduleCreationParameterProperties();
        }
        this.innerProperties().withWeekdays(weekdays);
        return this;
    }

    /**
     * Get the time property: The time of the day the schedule will occur.
     *
     * @return the time value.
     */
    public String time() {
        return this.innerProperties() == null ? null : this.innerProperties().time();
    }

    /**
     * Set the time property: The time of the day the schedule will occur.
     *
     * @param time the time value to set.
     * @return the ScheduleCreationParameter object itself.
     */
    public ScheduleCreationParameter withTime(String time) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ScheduleCreationParameterProperties();
        }
        this.innerProperties().withTime(time);
        return this;
    }

    /**
     * Get the timeDailyRecurrenceTime property: The time of day the schedule will occur.
     *
     * @return the timeDailyRecurrenceTime value.
     */
    public String timeDailyRecurrenceTime() {
        return this.innerProperties() == null ? null : this.innerProperties().timeDailyRecurrenceTime();
    }

    /**
     * Set the timeDailyRecurrenceTime property: The time of day the schedule will occur.
     *
     * @param timeDailyRecurrenceTime the timeDailyRecurrenceTime value to set.
     * @return the ScheduleCreationParameter object itself.
     */
    public ScheduleCreationParameter withTimeDailyRecurrenceTime(String timeDailyRecurrenceTime) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ScheduleCreationParameterProperties();
        }
        this.innerProperties().withTimeDailyRecurrenceTime(timeDailyRecurrenceTime);
        return this;
    }

    /**
     * Get the minute property: Minutes of the hour the schedule will run.
     *
     * @return the minute value.
     */
    public Integer minute() {
        return this.innerProperties() == null ? null : this.innerProperties().minute();
    }

    /**
     * Set the minute property: Minutes of the hour the schedule will run.
     *
     * @param minute the minute value to set.
     * @return the ScheduleCreationParameter object itself.
     */
    public ScheduleCreationParameter withMinute(Integer minute) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ScheduleCreationParameterProperties();
        }
        this.innerProperties().withMinute(minute);
        return this;
    }

    /**
     * Get the statusNotificationSettingsStatus property: If notifications are enabled for this schedule (i.e. Enabled,
     * Disabled).
     *
     * @return the statusNotificationSettingsStatus value.
     */
    public EnableStatus statusNotificationSettingsStatus() {
        return this.innerProperties() == null ? null : this.innerProperties().statusNotificationSettingsStatus();
    }

    /**
     * Set the statusNotificationSettingsStatus property: If notifications are enabled for this schedule (i.e. Enabled,
     * Disabled).
     *
     * @param statusNotificationSettingsStatus the statusNotificationSettingsStatus value to set.
     * @return the ScheduleCreationParameter object itself.
     */
    public ScheduleCreationParameter withStatusNotificationSettingsStatus(
        EnableStatus statusNotificationSettingsStatus) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ScheduleCreationParameterProperties();
        }
        this.innerProperties().withStatusNotificationSettingsStatus(statusNotificationSettingsStatus);
        return this;
    }

    /**
     * Get the timeInMinutes property: Time in minutes before event at which notification will be sent.
     *
     * @return the timeInMinutes value.
     */
    public Integer timeInMinutes() {
        return this.innerProperties() == null ? null : this.innerProperties().timeInMinutes();
    }

    /**
     * Set the timeInMinutes property: Time in minutes before event at which notification will be sent.
     *
     * @param timeInMinutes the timeInMinutes value to set.
     * @return the ScheduleCreationParameter object itself.
     */
    public ScheduleCreationParameter withTimeInMinutes(Integer timeInMinutes) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ScheduleCreationParameterProperties();
        }
        this.innerProperties().withTimeInMinutes(timeInMinutes);
        return this;
    }

    /**
     * Get the webhookUrl property: The webhook URL to which the notification will be sent.
     *
     * @return the webhookUrl value.
     */
    public String webhookUrl() {
        return this.innerProperties() == null ? null : this.innerProperties().webhookUrl();
    }

    /**
     * Set the webhookUrl property: The webhook URL to which the notification will be sent.
     *
     * @param webhookUrl the webhookUrl value to set.
     * @return the ScheduleCreationParameter object itself.
     */
    public ScheduleCreationParameter withWebhookUrl(String webhookUrl) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ScheduleCreationParameterProperties();
        }
        this.innerProperties().withWebhookUrl(webhookUrl);
        return this;
    }

    /**
     * Get the emailRecipient property: The email recipient to send notifications to (can be a list of semi-colon
     * separated email addresses).
     *
     * @return the emailRecipient value.
     */
    public String emailRecipient() {
        return this.innerProperties() == null ? null : this.innerProperties().emailRecipient();
    }

    /**
     * Set the emailRecipient property: The email recipient to send notifications to (can be a list of semi-colon
     * separated email addresses).
     *
     * @param emailRecipient the emailRecipient value to set.
     * @return the ScheduleCreationParameter object itself.
     */
    public ScheduleCreationParameter withEmailRecipient(String emailRecipient) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ScheduleCreationParameterProperties();
        }
        this.innerProperties().withEmailRecipient(emailRecipient);
        return this;
    }

    /**
     * Get the notificationLocale property: The locale to use when sending a notification (fallback for unsupported
     * languages is EN).
     *
     * @return the notificationLocale value.
     */
    public String notificationLocale() {
        return this.innerProperties() == null ? null : this.innerProperties().notificationLocale();
    }

    /**
     * Set the notificationLocale property: The locale to use when sending a notification (fallback for unsupported
     * languages is EN).
     *
     * @param notificationLocale the notificationLocale value to set.
     * @return the ScheduleCreationParameter object itself.
     */
    public ScheduleCreationParameter withNotificationLocale(String notificationLocale) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ScheduleCreationParameterProperties();
        }
        this.innerProperties().withNotificationLocale(notificationLocale);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
