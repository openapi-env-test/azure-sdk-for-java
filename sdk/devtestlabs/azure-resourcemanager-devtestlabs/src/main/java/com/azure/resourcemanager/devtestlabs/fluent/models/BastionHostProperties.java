// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devtestlabs.fluent.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Properties of a BastionHost profile. */
@Immutable
public final class BastionHostProperties {
    /*
     * The ID of the external BastionHost resource that corresponds to this DTL
     * BastionHost
     */
    @JsonProperty(value = "externalBastionHostId", access = JsonProperty.Access.WRITE_ONLY)
    private String externalBastionHostId;

    /*
     * The ID of the PublicIpAddress resource that is created by and paired
     * with this BastionHost
     */
    @JsonProperty(value = "ipAddressId", access = JsonProperty.Access.WRITE_ONLY)
    private String ipAddressId;

    /*
     * The provisioning status of the resource.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private String provisioningState;

    /*
     * The unique immutable identifier of a resource (Guid).
     */
    @JsonProperty(value = "uniqueIdentifier", access = JsonProperty.Access.WRITE_ONLY)
    private String uniqueIdentifier;

    /**
     * Get the externalBastionHostId property: The ID of the external BastionHost resource that corresponds to this DTL
     * BastionHost.
     *
     * @return the externalBastionHostId value.
     */
    public String externalBastionHostId() {
        return this.externalBastionHostId;
    }

    /**
     * Get the ipAddressId property: The ID of the PublicIpAddress resource that is created by and paired with this
     * BastionHost.
     *
     * @return the ipAddressId value.
     */
    public String ipAddressId() {
        return this.ipAddressId;
    }

    /**
     * Get the provisioningState property: The provisioning status of the resource.
     *
     * @return the provisioningState value.
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the uniqueIdentifier property: The unique immutable identifier of a resource (Guid).
     *
     * @return the uniqueIdentifier value.
     */
    public String uniqueIdentifier() {
        return this.uniqueIdentifier;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
