// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devtestlabs.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.devtestlabs.models.EnableStatus;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Map;

/** Properties of a service fabric. */
@Fluent
public final class ServiceFabricPropertiesInner {
    /*
     * The backing service fabric resource's id
     */
    @JsonProperty(value = "externalServiceFabricId")
    private String externalServiceFabricId;

    /*
     * The resource id of the environment under which the service fabric
     * resource is present
     */
    @JsonProperty(value = "environmentId")
    private String environmentId;

    /*
     * The applicable schedule for the virtual machine.
     */
    @JsonProperty(value = "applicableSchedule", access = JsonProperty.Access.WRITE_ONLY)
    private ApplicableScheduleInner innerApplicableSchedule;

    /*
     * The provisioning status of the resource.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private String provisioningState;

    /*
     * The unique immutable identifier of a resource (Guid).
     */
    @JsonProperty(value = "uniqueIdentifier", access = JsonProperty.Access.WRITE_ONLY)
    private String uniqueIdentifier;

    /**
     * Get the externalServiceFabricId property: The backing service fabric resource's id.
     *
     * @return the externalServiceFabricId value.
     */
    public String externalServiceFabricId() {
        return this.externalServiceFabricId;
    }

    /**
     * Set the externalServiceFabricId property: The backing service fabric resource's id.
     *
     * @param externalServiceFabricId the externalServiceFabricId value to set.
     * @return the ServiceFabricPropertiesInner object itself.
     */
    public ServiceFabricPropertiesInner withExternalServiceFabricId(String externalServiceFabricId) {
        this.externalServiceFabricId = externalServiceFabricId;
        return this;
    }

    /**
     * Get the environmentId property: The resource id of the environment under which the service fabric resource is
     * present.
     *
     * @return the environmentId value.
     */
    public String environmentId() {
        return this.environmentId;
    }

    /**
     * Set the environmentId property: The resource id of the environment under which the service fabric resource is
     * present.
     *
     * @param environmentId the environmentId value to set.
     * @return the ServiceFabricPropertiesInner object itself.
     */
    public ServiceFabricPropertiesInner withEnvironmentId(String environmentId) {
        this.environmentId = environmentId;
        return this;
    }

    /**
     * Get the innerApplicableSchedule property: The applicable schedule for the virtual machine.
     *
     * @return the innerApplicableSchedule value.
     */
    private ApplicableScheduleInner innerApplicableSchedule() {
        return this.innerApplicableSchedule;
    }

    /**
     * Get the provisioningState property: The provisioning status of the resource.
     *
     * @return the provisioningState value.
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the uniqueIdentifier property: The unique immutable identifier of a resource (Guid).
     *
     * @return the uniqueIdentifier value.
     */
    public String uniqueIdentifier() {
        return this.uniqueIdentifier;
    }

    /**
     * Get the systemData property: The system metadata relating to this resource.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().systemData();
    }

    /**
     * Get the systemDataPropertiesSystemData property: The system metadata relating to this resource.
     *
     * @return the systemDataPropertiesSystemData value.
     */
    public SystemData systemDataPropertiesSystemData() {
        return this.innerApplicableSchedule() == null
            ? null
            : this.innerApplicableSchedule().systemDataPropertiesSystemData();
    }

    /**
     * Get the status property: The status of the schedule (i.e. Enabled, Disabled).
     *
     * @return the status value.
     */
    public EnableStatus status() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().status();
    }

    /**
     * Set the status property: The status of the schedule (i.e. Enabled, Disabled).
     *
     * @param status the status value to set.
     * @return the ServiceFabricPropertiesInner object itself.
     */
    public ServiceFabricPropertiesInner withStatus(EnableStatus status) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withStatus(status);
        return this;
    }

    /**
     * Get the taskType property: The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).
     *
     * @return the taskType value.
     */
    public String taskType() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().taskType();
    }

    /**
     * Set the taskType property: The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).
     *
     * @param taskType the taskType value to set.
     * @return the ServiceFabricPropertiesInner object itself.
     */
    public ServiceFabricPropertiesInner withTaskType(String taskType) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withTaskType(taskType);
        return this;
    }

    /**
     * Get the timeZoneId property: The time zone ID (e.g. Pacific Standard time).
     *
     * @return the timeZoneId value.
     */
    public String timeZoneId() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().timeZoneId();
    }

    /**
     * Set the timeZoneId property: The time zone ID (e.g. Pacific Standard time).
     *
     * @param timeZoneId the timeZoneId value to set.
     * @return the ServiceFabricPropertiesInner object itself.
     */
    public ServiceFabricPropertiesInner withTimeZoneId(String timeZoneId) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withTimeZoneId(timeZoneId);
        return this;
    }

    /**
     * Get the createdDate property: The creation date of the schedule.
     *
     * @return the createdDate value.
     */
    public OffsetDateTime createdDate() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().createdDate();
    }

    /**
     * Get the targetResourceId property: The resource ID to which the schedule belongs.
     *
     * @return the targetResourceId value.
     */
    public String targetResourceId() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().targetResourceId();
    }

    /**
     * Set the targetResourceId property: The resource ID to which the schedule belongs.
     *
     * @param targetResourceId the targetResourceId value to set.
     * @return the ServiceFabricPropertiesInner object itself.
     */
    public ServiceFabricPropertiesInner withTargetResourceId(String targetResourceId) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withTargetResourceId(targetResourceId);
        return this;
    }

    /**
     * Get the provisioningState property: The provisioning status of the resource.
     *
     * @return the provisioningState value.
     */
    public String provisioningStateApplicableScheduleProvisioningState() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().provisioningState();
    }

    /**
     * Get the uniqueIdentifier property: The unique immutable identifier of a resource (Guid).
     *
     * @return the uniqueIdentifier value.
     */
    public String uniqueIdentifierApplicableScheduleUniqueIdentifier() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().uniqueIdentifier();
    }

    /**
     * Get the weekdays property: The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday,
     * etc.).
     *
     * @return the weekdays value.
     */
    public List<String> weekdays() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().weekdays();
    }

    /**
     * Set the weekdays property: The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday,
     * etc.).
     *
     * @param weekdays the weekdays value to set.
     * @return the ServiceFabricPropertiesInner object itself.
     */
    public ServiceFabricPropertiesInner withWeekdays(List<String> weekdays) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withWeekdays(weekdays);
        return this;
    }

    /**
     * Get the time property: The time of the day the schedule will occur.
     *
     * @return the time value.
     */
    public String time() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().time();
    }

    /**
     * Set the time property: The time of the day the schedule will occur.
     *
     * @param time the time value to set.
     * @return the ServiceFabricPropertiesInner object itself.
     */
    public ServiceFabricPropertiesInner withTime(String time) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withTime(time);
        return this;
    }

    /**
     * Get the timeDailyRecurrenceTime property: The time of day the schedule will occur.
     *
     * @return the timeDailyRecurrenceTime value.
     */
    public String timeDailyRecurrenceTime() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().timeDailyRecurrenceTime();
    }

    /**
     * Set the timeDailyRecurrenceTime property: The time of day the schedule will occur.
     *
     * @param timeDailyRecurrenceTime the timeDailyRecurrenceTime value to set.
     * @return the ServiceFabricPropertiesInner object itself.
     */
    public ServiceFabricPropertiesInner withTimeDailyRecurrenceTime(String timeDailyRecurrenceTime) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withTimeDailyRecurrenceTime(timeDailyRecurrenceTime);
        return this;
    }

    /**
     * Get the minute property: Minutes of the hour the schedule will run.
     *
     * @return the minute value.
     */
    public Integer minute() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().minute();
    }

    /**
     * Set the minute property: Minutes of the hour the schedule will run.
     *
     * @param minute the minute value to set.
     * @return the ServiceFabricPropertiesInner object itself.
     */
    public ServiceFabricPropertiesInner withMinute(Integer minute) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withMinute(minute);
        return this;
    }

    /**
     * Get the statusNotificationSettingsStatus property: If notifications are enabled for this schedule (i.e. Enabled,
     * Disabled).
     *
     * @return the statusNotificationSettingsStatus value.
     */
    public EnableStatus statusNotificationSettingsStatus() {
        return this.innerApplicableSchedule() == null
            ? null
            : this.innerApplicableSchedule().statusNotificationSettingsStatus();
    }

    /**
     * Set the statusNotificationSettingsStatus property: If notifications are enabled for this schedule (i.e. Enabled,
     * Disabled).
     *
     * @param statusNotificationSettingsStatus the statusNotificationSettingsStatus value to set.
     * @return the ServiceFabricPropertiesInner object itself.
     */
    public ServiceFabricPropertiesInner withStatusNotificationSettingsStatus(
        EnableStatus statusNotificationSettingsStatus) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withStatusNotificationSettingsStatus(statusNotificationSettingsStatus);
        return this;
    }

    /**
     * Get the timeInMinutes property: Time in minutes before event at which notification will be sent.
     *
     * @return the timeInMinutes value.
     */
    public Integer timeInMinutes() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().timeInMinutes();
    }

    /**
     * Set the timeInMinutes property: Time in minutes before event at which notification will be sent.
     *
     * @param timeInMinutes the timeInMinutes value to set.
     * @return the ServiceFabricPropertiesInner object itself.
     */
    public ServiceFabricPropertiesInner withTimeInMinutes(Integer timeInMinutes) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withTimeInMinutes(timeInMinutes);
        return this;
    }

    /**
     * Get the webhookUrl property: The webhook URL to which the notification will be sent.
     *
     * @return the webhookUrl value.
     */
    public String webhookUrl() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().webhookUrl();
    }

    /**
     * Set the webhookUrl property: The webhook URL to which the notification will be sent.
     *
     * @param webhookUrl the webhookUrl value to set.
     * @return the ServiceFabricPropertiesInner object itself.
     */
    public ServiceFabricPropertiesInner withWebhookUrl(String webhookUrl) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withWebhookUrl(webhookUrl);
        return this;
    }

    /**
     * Get the emailRecipient property: The email recipient to send notifications to (can be a list of semi-colon
     * separated email addresses).
     *
     * @return the emailRecipient value.
     */
    public String emailRecipient() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().emailRecipient();
    }

    /**
     * Set the emailRecipient property: The email recipient to send notifications to (can be a list of semi-colon
     * separated email addresses).
     *
     * @param emailRecipient the emailRecipient value to set.
     * @return the ServiceFabricPropertiesInner object itself.
     */
    public ServiceFabricPropertiesInner withEmailRecipient(String emailRecipient) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withEmailRecipient(emailRecipient);
        return this;
    }

    /**
     * Get the notificationLocale property: The locale to use when sending a notification (fallback for unsupported
     * languages is EN).
     *
     * @return the notificationLocale value.
     */
    public String notificationLocale() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().notificationLocale();
    }

    /**
     * Set the notificationLocale property: The locale to use when sending a notification (fallback for unsupported
     * languages is EN).
     *
     * @param notificationLocale the notificationLocale value to set.
     * @return the ServiceFabricPropertiesInner object itself.
     */
    public ServiceFabricPropertiesInner withNotificationLocale(String notificationLocale) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withNotificationLocale(notificationLocale);
        return this;
    }

    /**
     * Get the idPropertiesId property: Fully qualified resource ID for the resource. Ex -
     * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
     *
     * @return the idPropertiesId value.
     */
    public String idPropertiesId() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().idPropertiesId();
    }

    /**
     * Get the namePropertiesName property: The name of the resource.
     *
     * @return the namePropertiesName value.
     */
    public String namePropertiesName() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().namePropertiesName();
    }

    /**
     * Get the typePropertiesType property: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     * "Microsoft.Storage/storageAccounts".
     *
     * @return the typePropertiesType value.
     */
    public String typePropertiesType() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().typePropertiesType();
    }

    /**
     * Get the tagsPropertiesTags property: Resource tags.
     *
     * @return the tagsPropertiesTags value.
     */
    public Map<String, String> tagsPropertiesTags() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().tagsPropertiesTags();
    }

    /**
     * Set the tagsPropertiesTags property: Resource tags.
     *
     * @param tagsPropertiesTags the tagsPropertiesTags value to set.
     * @return the ServiceFabricPropertiesInner object itself.
     */
    public ServiceFabricPropertiesInner withTagsPropertiesTags(Map<String, String> tagsPropertiesTags) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withTagsPropertiesTags(tagsPropertiesTags);
        return this;
    }

    /**
     * Get the locationPropertiesLocation property: The geo-location where the resource lives.
     *
     * @return the locationPropertiesLocation value.
     */
    public String locationPropertiesLocation() {
        return this.innerApplicableSchedule() == null
            ? null
            : this.innerApplicableSchedule().locationPropertiesLocation();
    }

    /**
     * Set the locationPropertiesLocation property: The geo-location where the resource lives.
     *
     * @param locationPropertiesLocation the locationPropertiesLocation value to set.
     * @return the ServiceFabricPropertiesInner object itself.
     */
    public ServiceFabricPropertiesInner withLocationPropertiesLocation(String locationPropertiesLocation) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withLocationPropertiesLocation(locationPropertiesLocation);
        return this;
    }

    /**
     * Get the systemDataLabVmsStartupSystemData property: The system metadata relating to this resource.
     *
     * @return the systemDataLabVmsStartupSystemData value.
     */
    public SystemData systemDataLabVmsStartupSystemData() {
        return this.innerApplicableSchedule() == null
            ? null
            : this.innerApplicableSchedule().systemDataLabVmsStartupSystemData();
    }

    /**
     * Get the statusLabVmsStartupStatus property: The status of the schedule (i.e. Enabled, Disabled).
     *
     * @return the statusLabVmsStartupStatus value.
     */
    public EnableStatus statusLabVmsStartupStatus() {
        return this.innerApplicableSchedule() == null
            ? null
            : this.innerApplicableSchedule().statusLabVmsStartupStatus();
    }

    /**
     * Set the statusLabVmsStartupStatus property: The status of the schedule (i.e. Enabled, Disabled).
     *
     * @param statusLabVmsStartupStatus the statusLabVmsStartupStatus value to set.
     * @return the ServiceFabricPropertiesInner object itself.
     */
    public ServiceFabricPropertiesInner withStatusLabVmsStartupStatus(EnableStatus statusLabVmsStartupStatus) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withStatusLabVmsStartupStatus(statusLabVmsStartupStatus);
        return this;
    }

    /**
     * Get the taskTypeLabVmsStartupTaskType property: The task type of the schedule (e.g. LabVmsShutdownTask,
     * LabVmAutoStart).
     *
     * @return the taskTypeLabVmsStartupTaskType value.
     */
    public String taskTypeLabVmsStartupTaskType() {
        return this.innerApplicableSchedule() == null
            ? null
            : this.innerApplicableSchedule().taskTypeLabVmsStartupTaskType();
    }

    /**
     * Set the taskTypeLabVmsStartupTaskType property: The task type of the schedule (e.g. LabVmsShutdownTask,
     * LabVmAutoStart).
     *
     * @param taskTypeLabVmsStartupTaskType the taskTypeLabVmsStartupTaskType value to set.
     * @return the ServiceFabricPropertiesInner object itself.
     */
    public ServiceFabricPropertiesInner withTaskTypeLabVmsStartupTaskType(String taskTypeLabVmsStartupTaskType) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withTaskTypeLabVmsStartupTaskType(taskTypeLabVmsStartupTaskType);
        return this;
    }

    /**
     * Get the timeZoneIdLabVmsStartupTimeZoneId property: The time zone ID (e.g. Pacific Standard time).
     *
     * @return the timeZoneIdLabVmsStartupTimeZoneId value.
     */
    public String timeZoneIdLabVmsStartupTimeZoneId() {
        return this.innerApplicableSchedule() == null
            ? null
            : this.innerApplicableSchedule().timeZoneIdLabVmsStartupTimeZoneId();
    }

    /**
     * Set the timeZoneIdLabVmsStartupTimeZoneId property: The time zone ID (e.g. Pacific Standard time).
     *
     * @param timeZoneIdLabVmsStartupTimeZoneId the timeZoneIdLabVmsStartupTimeZoneId value to set.
     * @return the ServiceFabricPropertiesInner object itself.
     */
    public ServiceFabricPropertiesInner withTimeZoneIdLabVmsStartupTimeZoneId(
        String timeZoneIdLabVmsStartupTimeZoneId) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withTimeZoneIdLabVmsStartupTimeZoneId(timeZoneIdLabVmsStartupTimeZoneId);
        return this;
    }

    /**
     * Get the createdDateLabVmsStartupCreatedDate property: The creation date of the schedule.
     *
     * @return the createdDateLabVmsStartupCreatedDate value.
     */
    public OffsetDateTime createdDateLabVmsStartupCreatedDate() {
        return this.innerApplicableSchedule() == null
            ? null
            : this.innerApplicableSchedule().createdDateLabVmsStartupCreatedDate();
    }

    /**
     * Get the targetResourceIdLabVmsStartupTargetResourceId property: The resource ID to which the schedule belongs.
     *
     * @return the targetResourceIdLabVmsStartupTargetResourceId value.
     */
    public String targetResourceIdLabVmsStartupTargetResourceId() {
        return this.innerApplicableSchedule() == null
            ? null
            : this.innerApplicableSchedule().targetResourceIdLabVmsStartupTargetResourceId();
    }

    /**
     * Set the targetResourceIdLabVmsStartupTargetResourceId property: The resource ID to which the schedule belongs.
     *
     * @param targetResourceIdLabVmsStartupTargetResourceId the targetResourceIdLabVmsStartupTargetResourceId value to
     *     set.
     * @return the ServiceFabricPropertiesInner object itself.
     */
    public ServiceFabricPropertiesInner withTargetResourceIdLabVmsStartupTargetResourceId(
        String targetResourceIdLabVmsStartupTargetResourceId) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this
            .innerApplicableSchedule()
            .withTargetResourceIdLabVmsStartupTargetResourceId(targetResourceIdLabVmsStartupTargetResourceId);
        return this;
    }

    /**
     * Get the provisioningStateLabVmsStartupProvisioningState property: The provisioning status of the resource.
     *
     * @return the provisioningStateLabVmsStartupProvisioningState value.
     */
    public String provisioningStateLabVmsStartupProvisioningState() {
        return this.innerApplicableSchedule() == null
            ? null
            : this.innerApplicableSchedule().provisioningStateLabVmsStartupProvisioningState();
    }

    /**
     * Get the uniqueIdentifierLabVmsStartupUniqueIdentifier property: The unique immutable identifier of a resource
     * (Guid).
     *
     * @return the uniqueIdentifierLabVmsStartupUniqueIdentifier value.
     */
    public String uniqueIdentifierLabVmsStartupUniqueIdentifier() {
        return this.innerApplicableSchedule() == null
            ? null
            : this.innerApplicableSchedule().uniqueIdentifierLabVmsStartupUniqueIdentifier();
    }

    /**
     * Get the weekdaysLabVmsStartupWeekdays property: The days of the week for which the schedule is set (e.g. Sunday,
     * Monday, Tuesday, etc.).
     *
     * @return the weekdaysLabVmsStartupWeekdays value.
     */
    public List<String> weekdaysLabVmsStartupWeekdays() {
        return this.innerApplicableSchedule() == null
            ? null
            : this.innerApplicableSchedule().weekdaysLabVmsStartupWeekdays();
    }

    /**
     * Set the weekdaysLabVmsStartupWeekdays property: The days of the week for which the schedule is set (e.g. Sunday,
     * Monday, Tuesday, etc.).
     *
     * @param weekdaysLabVmsStartupWeekdays the weekdaysLabVmsStartupWeekdays value to set.
     * @return the ServiceFabricPropertiesInner object itself.
     */
    public ServiceFabricPropertiesInner withWeekdaysLabVmsStartupWeekdays(List<String> weekdaysLabVmsStartupWeekdays) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withWeekdaysLabVmsStartupWeekdays(weekdaysLabVmsStartupWeekdays);
        return this;
    }

    /**
     * Get the timeLabVmsStartupTime property: The time of the day the schedule will occur.
     *
     * @return the timeLabVmsStartupTime value.
     */
    public String timeLabVmsStartupTime() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().timeLabVmsStartupTime();
    }

    /**
     * Set the timeLabVmsStartupTime property: The time of the day the schedule will occur.
     *
     * @param timeLabVmsStartupTime the timeLabVmsStartupTime value to set.
     * @return the ServiceFabricPropertiesInner object itself.
     */
    public ServiceFabricPropertiesInner withTimeLabVmsStartupTime(String timeLabVmsStartupTime) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withTimeLabVmsStartupTime(timeLabVmsStartupTime);
        return this;
    }

    /**
     * Get the timeDailyRecurrenceTimeLabVmsStartupTimeDailyRecurrenceTime property: The time of day the schedule will
     * occur.
     *
     * @return the timeDailyRecurrenceTimeLabVmsStartupTimeDailyRecurrenceTime value.
     */
    public String timeDailyRecurrenceTimeLabVmsStartupTimeDailyRecurrenceTime() {
        return this.innerApplicableSchedule() == null
            ? null
            : this.innerApplicableSchedule().timeDailyRecurrenceTimeLabVmsStartupTimeDailyRecurrenceTime();
    }

    /**
     * Set the timeDailyRecurrenceTimeLabVmsStartupTimeDailyRecurrenceTime property: The time of day the schedule will
     * occur.
     *
     * @param timeDailyRecurrenceTimeLabVmsStartupTimeDailyRecurrenceTime the
     *     timeDailyRecurrenceTimeLabVmsStartupTimeDailyRecurrenceTime value to set.
     * @return the ServiceFabricPropertiesInner object itself.
     */
    public ServiceFabricPropertiesInner withTimeDailyRecurrenceTimeLabVmsStartupTimeDailyRecurrenceTime(
        String timeDailyRecurrenceTimeLabVmsStartupTimeDailyRecurrenceTime) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this
            .innerApplicableSchedule()
            .withTimeDailyRecurrenceTimeLabVmsStartupTimeDailyRecurrenceTime(
                timeDailyRecurrenceTimeLabVmsStartupTimeDailyRecurrenceTime);
        return this;
    }

    /**
     * Get the minuteLabVmsStartupMinute property: Minutes of the hour the schedule will run.
     *
     * @return the minuteLabVmsStartupMinute value.
     */
    public Integer minuteLabVmsStartupMinute() {
        return this.innerApplicableSchedule() == null
            ? null
            : this.innerApplicableSchedule().minuteLabVmsStartupMinute();
    }

    /**
     * Set the minuteLabVmsStartupMinute property: Minutes of the hour the schedule will run.
     *
     * @param minuteLabVmsStartupMinute the minuteLabVmsStartupMinute value to set.
     * @return the ServiceFabricPropertiesInner object itself.
     */
    public ServiceFabricPropertiesInner withMinuteLabVmsStartupMinute(Integer minuteLabVmsStartupMinute) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withMinuteLabVmsStartupMinute(minuteLabVmsStartupMinute);
        return this;
    }

    /**
     * Get the statusNotificationSettingsStatusLabVmsStartupStatusNotificationSettingsStatus property: If notifications
     * are enabled for this schedule (i.e. Enabled, Disabled).
     *
     * @return the statusNotificationSettingsStatusLabVmsStartupStatusNotificationSettingsStatus value.
     */
    public EnableStatus statusNotificationSettingsStatusLabVmsStartupStatusNotificationSettingsStatus() {
        return this.innerApplicableSchedule() == null
            ? null
            : this
                .innerApplicableSchedule()
                .statusNotificationSettingsStatusLabVmsStartupStatusNotificationSettingsStatus();
    }

    /**
     * Set the statusNotificationSettingsStatusLabVmsStartupStatusNotificationSettingsStatus property: If notifications
     * are enabled for this schedule (i.e. Enabled, Disabled).
     *
     * @param statusNotificationSettingsStatusLabVmsStartupStatusNotificationSettingsStatus the
     *     statusNotificationSettingsStatusLabVmsStartupStatusNotificationSettingsStatus value to set.
     * @return the ServiceFabricPropertiesInner object itself.
     */
    public ServiceFabricPropertiesInner
        withStatusNotificationSettingsStatusLabVmsStartupStatusNotificationSettingsStatus(
            EnableStatus statusNotificationSettingsStatusLabVmsStartupStatusNotificationSettingsStatus) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this
            .innerApplicableSchedule()
            .withStatusNotificationSettingsStatusLabVmsStartupStatusNotificationSettingsStatus(
                statusNotificationSettingsStatusLabVmsStartupStatusNotificationSettingsStatus);
        return this;
    }

    /**
     * Get the timeInMinutesLabVmsStartupTimeInMinutes property: Time in minutes before event at which notification will
     * be sent.
     *
     * @return the timeInMinutesLabVmsStartupTimeInMinutes value.
     */
    public Integer timeInMinutesLabVmsStartupTimeInMinutes() {
        return this.innerApplicableSchedule() == null
            ? null
            : this.innerApplicableSchedule().timeInMinutesLabVmsStartupTimeInMinutes();
    }

    /**
     * Set the timeInMinutesLabVmsStartupTimeInMinutes property: Time in minutes before event at which notification will
     * be sent.
     *
     * @param timeInMinutesLabVmsStartupTimeInMinutes the timeInMinutesLabVmsStartupTimeInMinutes value to set.
     * @return the ServiceFabricPropertiesInner object itself.
     */
    public ServiceFabricPropertiesInner withTimeInMinutesLabVmsStartupTimeInMinutes(
        Integer timeInMinutesLabVmsStartupTimeInMinutes) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this
            .innerApplicableSchedule()
            .withTimeInMinutesLabVmsStartupTimeInMinutes(timeInMinutesLabVmsStartupTimeInMinutes);
        return this;
    }

    /**
     * Get the webhookUrlLabVmsStartupWebhookUrl property: The webhook URL to which the notification will be sent.
     *
     * @return the webhookUrlLabVmsStartupWebhookUrl value.
     */
    public String webhookUrlLabVmsStartupWebhookUrl() {
        return this.innerApplicableSchedule() == null
            ? null
            : this.innerApplicableSchedule().webhookUrlLabVmsStartupWebhookUrl();
    }

    /**
     * Set the webhookUrlLabVmsStartupWebhookUrl property: The webhook URL to which the notification will be sent.
     *
     * @param webhookUrlLabVmsStartupWebhookUrl the webhookUrlLabVmsStartupWebhookUrl value to set.
     * @return the ServiceFabricPropertiesInner object itself.
     */
    public ServiceFabricPropertiesInner withWebhookUrlLabVmsStartupWebhookUrl(
        String webhookUrlLabVmsStartupWebhookUrl) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withWebhookUrlLabVmsStartupWebhookUrl(webhookUrlLabVmsStartupWebhookUrl);
        return this;
    }

    /**
     * Get the emailRecipientLabVmsStartupEmailRecipient property: The email recipient to send notifications to (can be
     * a list of semi-colon separated email addresses).
     *
     * @return the emailRecipientLabVmsStartupEmailRecipient value.
     */
    public String emailRecipientLabVmsStartupEmailRecipient() {
        return this.innerApplicableSchedule() == null
            ? null
            : this.innerApplicableSchedule().emailRecipientLabVmsStartupEmailRecipient();
    }

    /**
     * Set the emailRecipientLabVmsStartupEmailRecipient property: The email recipient to send notifications to (can be
     * a list of semi-colon separated email addresses).
     *
     * @param emailRecipientLabVmsStartupEmailRecipient the emailRecipientLabVmsStartupEmailRecipient value to set.
     * @return the ServiceFabricPropertiesInner object itself.
     */
    public ServiceFabricPropertiesInner withEmailRecipientLabVmsStartupEmailRecipient(
        String emailRecipientLabVmsStartupEmailRecipient) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this
            .innerApplicableSchedule()
            .withEmailRecipientLabVmsStartupEmailRecipient(emailRecipientLabVmsStartupEmailRecipient);
        return this;
    }

    /**
     * Get the notificationLocaleLabVmsStartupNotificationLocale property: The locale to use when sending a notification
     * (fallback for unsupported languages is EN).
     *
     * @return the notificationLocaleLabVmsStartupNotificationLocale value.
     */
    public String notificationLocaleLabVmsStartupNotificationLocale() {
        return this.innerApplicableSchedule() == null
            ? null
            : this.innerApplicableSchedule().notificationLocaleLabVmsStartupNotificationLocale();
    }

    /**
     * Set the notificationLocaleLabVmsStartupNotificationLocale property: The locale to use when sending a notification
     * (fallback for unsupported languages is EN).
     *
     * @param notificationLocaleLabVmsStartupNotificationLocale the notificationLocaleLabVmsStartupNotificationLocale
     *     value to set.
     * @return the ServiceFabricPropertiesInner object itself.
     */
    public ServiceFabricPropertiesInner withNotificationLocaleLabVmsStartupNotificationLocale(
        String notificationLocaleLabVmsStartupNotificationLocale) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this
            .innerApplicableSchedule()
            .withNotificationLocaleLabVmsStartupNotificationLocale(notificationLocaleLabVmsStartupNotificationLocale);
        return this;
    }

    /**
     * Get the idLabVmsStartupId property: Fully qualified resource ID for the resource. Ex -
     * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
     *
     * @return the idLabVmsStartupId value.
     */
    public String idLabVmsStartupId() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().idLabVmsStartupId();
    }

    /**
     * Get the nameLabVmsStartupName property: The name of the resource.
     *
     * @return the nameLabVmsStartupName value.
     */
    public String nameLabVmsStartupName() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().nameLabVmsStartupName();
    }

    /**
     * Get the typeLabVmsStartupType property: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     * "Microsoft.Storage/storageAccounts".
     *
     * @return the typeLabVmsStartupType value.
     */
    public String typeLabVmsStartupType() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().typeLabVmsStartupType();
    }

    /**
     * Get the tagsLabVmsStartupTags property: Resource tags.
     *
     * @return the tagsLabVmsStartupTags value.
     */
    public Map<String, String> tagsLabVmsStartupTags() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().tagsLabVmsStartupTags();
    }

    /**
     * Set the tagsLabVmsStartupTags property: Resource tags.
     *
     * @param tagsLabVmsStartupTags the tagsLabVmsStartupTags value to set.
     * @return the ServiceFabricPropertiesInner object itself.
     */
    public ServiceFabricPropertiesInner withTagsLabVmsStartupTags(Map<String, String> tagsLabVmsStartupTags) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withTagsLabVmsStartupTags(tagsLabVmsStartupTags);
        return this;
    }

    /**
     * Get the locationLabVmsStartupLocation property: The geo-location where the resource lives.
     *
     * @return the locationLabVmsStartupLocation value.
     */
    public String locationLabVmsStartupLocation() {
        return this.innerApplicableSchedule() == null
            ? null
            : this.innerApplicableSchedule().locationLabVmsStartupLocation();
    }

    /**
     * Set the locationLabVmsStartupLocation property: The geo-location where the resource lives.
     *
     * @param locationLabVmsStartupLocation the locationLabVmsStartupLocation value to set.
     * @return the ServiceFabricPropertiesInner object itself.
     */
    public ServiceFabricPropertiesInner withLocationLabVmsStartupLocation(String locationLabVmsStartupLocation) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withLocationLabVmsStartupLocation(locationLabVmsStartupLocation);
        return this;
    }

    /**
     * Get the id property: Fully qualified resource ID for the resource. Ex -
     * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
     *
     * @return the id value.
     */
    public String id() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().id();
    }

    /**
     * Get the name property: The name of the resource.
     *
     * @return the name value.
     */
    public String name() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().name();
    }

    /**
     * Get the type property: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     * "Microsoft.Storage/storageAccounts".
     *
     * @return the type value.
     */
    public String type() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().type();
    }

    /**
     * Get the tags property: Resource tags.
     *
     * @return the tags value.
     */
    public Map<String, String> tags() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().tags();
    }

    /**
     * Set the tags property: Resource tags.
     *
     * @param tags the tags value to set.
     * @return the ServiceFabricPropertiesInner object itself.
     */
    public ServiceFabricPropertiesInner withTags(Map<String, String> tags) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withTags(tags);
        return this;
    }

    /**
     * Get the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    public String location() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().location();
    }

    /**
     * Set the location property: The geo-location where the resource lives.
     *
     * @param location the location value to set.
     * @return the ServiceFabricPropertiesInner object itself.
     */
    public ServiceFabricPropertiesInner withLocation(String location) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withLocation(location);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerApplicableSchedule() != null) {
            innerApplicableSchedule().validate();
        }
    }
}
