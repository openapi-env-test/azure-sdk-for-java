// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devtestlabs.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.devtestlabs.models.ArtifactInstallProperties;
import com.azure.resourcemanager.devtestlabs.models.ComputeDataDisk;
import com.azure.resourcemanager.devtestlabs.models.ComputeVmInstanceViewStatus;
import com.azure.resourcemanager.devtestlabs.models.DataDiskProperties;
import com.azure.resourcemanager.devtestlabs.models.EnableStatus;
import com.azure.resourcemanager.devtestlabs.models.InboundNatRule;
import com.azure.resourcemanager.devtestlabs.models.ScheduleCreationParameter;
import com.azure.resourcemanager.devtestlabs.models.StorageType;
import com.azure.resourcemanager.devtestlabs.models.VirtualMachineCreationSource;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Map;

/** Properties of a formula. */
@Fluent
public final class FormulaPropertiesInner {
    /*
     * The description of the formula.
     */
    @JsonProperty(value = "description")
    private String description;

    /*
     * The author of the formula.
     */
    @JsonProperty(value = "author", access = JsonProperty.Access.WRITE_ONLY)
    private String author;

    /*
     * The OS type of the formula.
     */
    @JsonProperty(value = "osType")
    private String osType;

    /*
     * The creation date of the formula.
     */
    @JsonProperty(value = "creationDate", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime creationDate;

    /*
     * The content of the formula.
     */
    @JsonProperty(value = "formulaContent")
    private LabVirtualMachineCreationParameterInner innerFormulaContent;

    /*
     * Information about a VM from which a formula is to be created.
     */
    @JsonProperty(value = "vm")
    private FormulaPropertiesFromVm innerVm;

    /*
     * The provisioning status of the resource.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private String provisioningState;

    /*
     * The unique immutable identifier of a resource (Guid).
     */
    @JsonProperty(value = "uniqueIdentifier", access = JsonProperty.Access.WRITE_ONLY)
    private String uniqueIdentifier;

    /**
     * Get the description property: The description of the formula.
     *
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: The description of the formula.
     *
     * @param description the description value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the author property: The author of the formula.
     *
     * @return the author value.
     */
    public String author() {
        return this.author;
    }

    /**
     * Get the osType property: The OS type of the formula.
     *
     * @return the osType value.
     */
    public String osType() {
        return this.osType;
    }

    /**
     * Set the osType property: The OS type of the formula.
     *
     * @param osType the osType value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withOsType(String osType) {
        this.osType = osType;
        return this;
    }

    /**
     * Get the creationDate property: The creation date of the formula.
     *
     * @return the creationDate value.
     */
    public OffsetDateTime creationDate() {
        return this.creationDate;
    }

    /**
     * Get the innerFormulaContent property: The content of the formula.
     *
     * @return the innerFormulaContent value.
     */
    private LabVirtualMachineCreationParameterInner innerFormulaContent() {
        return this.innerFormulaContent;
    }

    /**
     * Get the innerVm property: Information about a VM from which a formula is to be created.
     *
     * @return the innerVm value.
     */
    private FormulaPropertiesFromVm innerVm() {
        return this.innerVm;
    }

    /**
     * Get the provisioningState property: The provisioning status of the resource.
     *
     * @return the provisioningState value.
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the uniqueIdentifier property: The unique immutable identifier of a resource (Guid).
     *
     * @return the uniqueIdentifier value.
     */
    public String uniqueIdentifier() {
        return this.uniqueIdentifier;
    }

    /**
     * Get the name property: The name of the virtual machine or environment.
     *
     * @return the name value.
     */
    public String name() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().name();
    }

    /**
     * Set the name property: The name of the virtual machine or environment.
     *
     * @param name the name value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withName(String name) {
        if (this.innerFormulaContent() == null) {
            this.innerFormulaContent = new LabVirtualMachineCreationParameterInner();
        }
        this.innerFormulaContent().withName(name);
        return this;
    }

    /**
     * Get the location property: The location of the new virtual machine or environment.
     *
     * @return the location value.
     */
    public String location() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().location();
    }

    /**
     * Set the location property: The location of the new virtual machine or environment.
     *
     * @param location the location value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withLocation(String location) {
        if (this.innerFormulaContent() == null) {
            this.innerFormulaContent = new LabVirtualMachineCreationParameterInner();
        }
        this.innerFormulaContent().withLocation(location);
        return this;
    }

    /**
     * Get the tags property: The tags of the resource.
     *
     * @return the tags value.
     */
    public Map<String, String> tags() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().tags();
    }

    /**
     * Set the tags property: The tags of the resource.
     *
     * @param tags the tags value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withTags(Map<String, String> tags) {
        if (this.innerFormulaContent() == null) {
            this.innerFormulaContent = new LabVirtualMachineCreationParameterInner();
        }
        this.innerFormulaContent().withTags(tags);
        return this;
    }

    /**
     * Get the notes property: The notes of the virtual machine.
     *
     * @return the notes value.
     */
    public String notes() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().notes();
    }

    /**
     * Set the notes property: The notes of the virtual machine.
     *
     * @param notes the notes value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withNotes(String notes) {
        if (this.innerFormulaContent() == null) {
            this.innerFormulaContent = new LabVirtualMachineCreationParameterInner();
        }
        this.innerFormulaContent().withNotes(notes);
        return this;
    }

    /**
     * Get the ownerObjectId property: The object identifier of the owner of the virtual machine.
     *
     * @return the ownerObjectId value.
     */
    public String ownerObjectId() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().ownerObjectId();
    }

    /**
     * Set the ownerObjectId property: The object identifier of the owner of the virtual machine.
     *
     * @param ownerObjectId the ownerObjectId value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withOwnerObjectId(String ownerObjectId) {
        if (this.innerFormulaContent() == null) {
            this.innerFormulaContent = new LabVirtualMachineCreationParameterInner();
        }
        this.innerFormulaContent().withOwnerObjectId(ownerObjectId);
        return this;
    }

    /**
     * Get the ownerUserPrincipalName property: The user principal name of the virtual machine owner.
     *
     * @return the ownerUserPrincipalName value.
     */
    public String ownerUserPrincipalName() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().ownerUserPrincipalName();
    }

    /**
     * Set the ownerUserPrincipalName property: The user principal name of the virtual machine owner.
     *
     * @param ownerUserPrincipalName the ownerUserPrincipalName value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withOwnerUserPrincipalName(String ownerUserPrincipalName) {
        if (this.innerFormulaContent() == null) {
            this.innerFormulaContent = new LabVirtualMachineCreationParameterInner();
        }
        this.innerFormulaContent().withOwnerUserPrincipalName(ownerUserPrincipalName);
        return this;
    }

    /**
     * Get the createdByUserId property: The object identifier of the creator of the virtual machine.
     *
     * @return the createdByUserId value.
     */
    public String createdByUserId() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().createdByUserId();
    }

    /**
     * Get the createdByUser property: The email address of creator of the virtual machine.
     *
     * @return the createdByUser value.
     */
    public String createdByUser() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().createdByUser();
    }

    /**
     * Get the createdDate property: The creation date of the virtual machine.
     *
     * @return the createdDate value.
     */
    public OffsetDateTime createdDate() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().createdDate();
    }

    /**
     * Set the createdDate property: The creation date of the virtual machine.
     *
     * @param createdDate the createdDate value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withCreatedDate(OffsetDateTime createdDate) {
        if (this.innerFormulaContent() == null) {
            this.innerFormulaContent = new LabVirtualMachineCreationParameterInner();
        }
        this.innerFormulaContent().withCreatedDate(createdDate);
        return this;
    }

    /**
     * Get the computeId property: The resource identifier (Microsoft.Compute) of the virtual machine.
     *
     * @return the computeId value.
     */
    public String computeId() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().computeId();
    }

    /**
     * Get the customImageId property: The custom image identifier of the virtual machine.
     *
     * @return the customImageId value.
     */
    public String customImageId() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().customImageId();
    }

    /**
     * Set the customImageId property: The custom image identifier of the virtual machine.
     *
     * @param customImageId the customImageId value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withCustomImageId(String customImageId) {
        if (this.innerFormulaContent() == null) {
            this.innerFormulaContent = new LabVirtualMachineCreationParameterInner();
        }
        this.innerFormulaContent().withCustomImageId(customImageId);
        return this;
    }

    /**
     * Get the galleryImageVersionId property: The shared gallery image version resource identifier of the virtual
     * machine.
     *
     * @return the galleryImageVersionId value.
     */
    public String galleryImageVersionId() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().galleryImageVersionId();
    }

    /**
     * Set the galleryImageVersionId property: The shared gallery image version resource identifier of the virtual
     * machine.
     *
     * @param galleryImageVersionId the galleryImageVersionId value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withGalleryImageVersionId(String galleryImageVersionId) {
        if (this.innerFormulaContent() == null) {
            this.innerFormulaContent = new LabVirtualMachineCreationParameterInner();
        }
        this.innerFormulaContent().withGalleryImageVersionId(galleryImageVersionId);
        return this;
    }

    /**
     * Get the sharedImageId property: The shared image resource identifier of the virtual machine.
     *
     * @return the sharedImageId value.
     */
    public String sharedImageId() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().sharedImageId();
    }

    /**
     * Set the sharedImageId property: The shared image resource identifier of the virtual machine.
     *
     * @param sharedImageId the sharedImageId value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withSharedImageId(String sharedImageId) {
        if (this.innerFormulaContent() == null) {
            this.innerFormulaContent = new LabVirtualMachineCreationParameterInner();
        }
        this.innerFormulaContent().withSharedImageId(sharedImageId);
        return this;
    }

    /**
     * Get the sharedImageVersion property: The shared image version for the specified shared image Id. Will use latest
     * if not specified.
     *
     * @return the sharedImageVersion value.
     */
    public String sharedImageVersion() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().sharedImageVersion();
    }

    /**
     * Set the sharedImageVersion property: The shared image version for the specified shared image Id. Will use latest
     * if not specified.
     *
     * @param sharedImageVersion the sharedImageVersion value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withSharedImageVersion(String sharedImageVersion) {
        if (this.innerFormulaContent() == null) {
            this.innerFormulaContent = new LabVirtualMachineCreationParameterInner();
        }
        this.innerFormulaContent().withSharedImageVersion(sharedImageVersion);
        return this;
    }

    /**
     * Get the osType property: The OS type of the virtual machine.
     *
     * @return the osType value.
     */
    public String osTypeFormulaContentOsType() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().osType();
    }

    /**
     * Get the size property: The size of the virtual machine.
     *
     * @return the size value.
     */
    public String size() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().size();
    }

    /**
     * Set the size property: The size of the virtual machine.
     *
     * @param size the size value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withSize(String size) {
        if (this.innerFormulaContent() == null) {
            this.innerFormulaContent = new LabVirtualMachineCreationParameterInner();
        }
        this.innerFormulaContent().withSize(size);
        return this;
    }

    /**
     * Get the username property: The user name of the virtual machine.
     *
     * @return the username value.
     */
    public String username() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().username();
    }

    /**
     * Set the username property: The user name of the virtual machine.
     *
     * @param username the username value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withUsername(String username) {
        if (this.innerFormulaContent() == null) {
            this.innerFormulaContent = new LabVirtualMachineCreationParameterInner();
        }
        this.innerFormulaContent().withUsername(username);
        return this;
    }

    /**
     * Get the password property: The password of the virtual machine administrator.
     *
     * @return the password value.
     */
    public String password() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().password();
    }

    /**
     * Set the password property: The password of the virtual machine administrator.
     *
     * @param password the password value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withPassword(String password) {
        if (this.innerFormulaContent() == null) {
            this.innerFormulaContent = new LabVirtualMachineCreationParameterInner();
        }
        this.innerFormulaContent().withPassword(password);
        return this;
    }

    /**
     * Get the sshKey property: The SSH key of the virtual machine administrator.
     *
     * @return the sshKey value.
     */
    public String sshKey() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().sshKey();
    }

    /**
     * Set the sshKey property: The SSH key of the virtual machine administrator.
     *
     * @param sshKey the sshKey value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withSshKey(String sshKey) {
        if (this.innerFormulaContent() == null) {
            this.innerFormulaContent = new LabVirtualMachineCreationParameterInner();
        }
        this.innerFormulaContent().withSshKey(sshKey);
        return this;
    }

    /**
     * Get the isAuthenticationWithSshKey property: Indicates whether this virtual machine uses an SSH key for
     * authentication.
     *
     * @return the isAuthenticationWithSshKey value.
     */
    public Boolean isAuthenticationWithSshKey() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().isAuthenticationWithSshKey();
    }

    /**
     * Set the isAuthenticationWithSshKey property: Indicates whether this virtual machine uses an SSH key for
     * authentication.
     *
     * @param isAuthenticationWithSshKey the isAuthenticationWithSshKey value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withIsAuthenticationWithSshKey(Boolean isAuthenticationWithSshKey) {
        if (this.innerFormulaContent() == null) {
            this.innerFormulaContent = new LabVirtualMachineCreationParameterInner();
        }
        this.innerFormulaContent().withIsAuthenticationWithSshKey(isAuthenticationWithSshKey);
        return this;
    }

    /**
     * Get the fqdn property: The fully-qualified domain name of the virtual machine.
     *
     * @return the fqdn value.
     */
    public String fqdn() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().fqdn();
    }

    /**
     * Get the labSubnetName property: The lab subnet name of the virtual machine.
     *
     * @return the labSubnetName value.
     */
    public String labSubnetName() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().labSubnetName();
    }

    /**
     * Set the labSubnetName property: The lab subnet name of the virtual machine.
     *
     * @param labSubnetName the labSubnetName value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withLabSubnetName(String labSubnetName) {
        if (this.innerFormulaContent() == null) {
            this.innerFormulaContent = new LabVirtualMachineCreationParameterInner();
        }
        this.innerFormulaContent().withLabSubnetName(labSubnetName);
        return this;
    }

    /**
     * Get the labVirtualNetworkId property: The lab virtual network identifier of the virtual machine.
     *
     * @return the labVirtualNetworkId value.
     */
    public String labVirtualNetworkId() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().labVirtualNetworkId();
    }

    /**
     * Set the labVirtualNetworkId property: The lab virtual network identifier of the virtual machine.
     *
     * @param labVirtualNetworkId the labVirtualNetworkId value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withLabVirtualNetworkId(String labVirtualNetworkId) {
        if (this.innerFormulaContent() == null) {
            this.innerFormulaContent = new LabVirtualMachineCreationParameterInner();
        }
        this.innerFormulaContent().withLabVirtualNetworkId(labVirtualNetworkId);
        return this;
    }

    /**
     * Get the disallowPublicIpAddress property: Indicates whether the virtual machine is to be created without a public
     * IP address.
     *
     * @return the disallowPublicIpAddress value.
     */
    public Boolean disallowPublicIpAddress() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().disallowPublicIpAddress();
    }

    /**
     * Set the disallowPublicIpAddress property: Indicates whether the virtual machine is to be created without a public
     * IP address.
     *
     * @param disallowPublicIpAddress the disallowPublicIpAddress value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withDisallowPublicIpAddress(Boolean disallowPublicIpAddress) {
        if (this.innerFormulaContent() == null) {
            this.innerFormulaContent = new LabVirtualMachineCreationParameterInner();
        }
        this.innerFormulaContent().withDisallowPublicIpAddress(disallowPublicIpAddress);
        return this;
    }

    /**
     * Get the artifacts property: The artifacts to be installed on the virtual machine.
     *
     * @return the artifacts value.
     */
    public List<ArtifactInstallProperties> artifacts() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().artifacts();
    }

    /**
     * Set the artifacts property: The artifacts to be installed on the virtual machine.
     *
     * @param artifacts the artifacts value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withArtifacts(List<ArtifactInstallProperties> artifacts) {
        if (this.innerFormulaContent() == null) {
            this.innerFormulaContent = new LabVirtualMachineCreationParameterInner();
        }
        this.innerFormulaContent().withArtifacts(artifacts);
        return this;
    }

    /**
     * Get the planId property: The id of the plan associated with the virtual machine image.
     *
     * @return the planId value.
     */
    public String planId() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().planId();
    }

    /**
     * Set the planId property: The id of the plan associated with the virtual machine image.
     *
     * @param planId the planId value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withPlanId(String planId) {
        if (this.innerFormulaContent() == null) {
            this.innerFormulaContent = new LabVirtualMachineCreationParameterInner();
        }
        this.innerFormulaContent().withPlanId(planId);
        return this;
    }

    /**
     * Get the osDiskSizeGb property: Specifies the size of an empty data disk in gigabytes. This element can be used to
     * overwrite the size of the disk in a virtual machine image.
     *
     * @return the osDiskSizeGb value.
     */
    public Integer osDiskSizeGb() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().osDiskSizeGb();
    }

    /**
     * Set the osDiskSizeGb property: Specifies the size of an empty data disk in gigabytes. This element can be used to
     * overwrite the size of the disk in a virtual machine image.
     *
     * @param osDiskSizeGb the osDiskSizeGb value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withOsDiskSizeGb(Integer osDiskSizeGb) {
        if (this.innerFormulaContent() == null) {
            this.innerFormulaContent = new LabVirtualMachineCreationParameterInner();
        }
        this.innerFormulaContent().withOsDiskSizeGb(osDiskSizeGb);
        return this;
    }

    /**
     * Get the expirationDate property: The expiration date for VM.
     *
     * @return the expirationDate value.
     */
    public OffsetDateTime expirationDate() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().expirationDate();
    }

    /**
     * Set the expirationDate property: The expiration date for VM.
     *
     * @param expirationDate the expirationDate value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withExpirationDate(OffsetDateTime expirationDate) {
        if (this.innerFormulaContent() == null) {
            this.innerFormulaContent = new LabVirtualMachineCreationParameterInner();
        }
        this.innerFormulaContent().withExpirationDate(expirationDate);
        return this;
    }

    /**
     * Get the allowClaim property: Indicates whether another user can take ownership of the virtual machine.
     *
     * @return the allowClaim value.
     */
    public Boolean allowClaim() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().allowClaim();
    }

    /**
     * Set the allowClaim property: Indicates whether another user can take ownership of the virtual machine.
     *
     * @param allowClaim the allowClaim value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withAllowClaim(Boolean allowClaim) {
        if (this.innerFormulaContent() == null) {
            this.innerFormulaContent = new LabVirtualMachineCreationParameterInner();
        }
        this.innerFormulaContent().withAllowClaim(allowClaim);
        return this;
    }

    /**
     * Get the storageType property: Storage type to use for virtual machine (i.e. Standard, Premium, StandardSSD).
     *
     * @return the storageType value.
     */
    public StorageType storageType() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().storageType();
    }

    /**
     * Set the storageType property: Storage type to use for virtual machine (i.e. Standard, Premium, StandardSSD).
     *
     * @param storageType the storageType value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withStorageType(StorageType storageType) {
        if (this.innerFormulaContent() == null) {
            this.innerFormulaContent = new LabVirtualMachineCreationParameterInner();
        }
        this.innerFormulaContent().withStorageType(storageType);
        return this;
    }

    /**
     * Get the virtualMachineCreationSource property: Tells source of creation of lab virtual machine. Output property
     * only.
     *
     * @return the virtualMachineCreationSource value.
     */
    public VirtualMachineCreationSource virtualMachineCreationSource() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().virtualMachineCreationSource();
    }

    /**
     * Get the environmentId property: The resource ID of the environment that contains this virtual machine, if any.
     *
     * @return the environmentId value.
     */
    public String environmentId() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().environmentId();
    }

    /**
     * Set the environmentId property: The resource ID of the environment that contains this virtual machine, if any.
     *
     * @param environmentId the environmentId value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withEnvironmentId(String environmentId) {
        if (this.innerFormulaContent() == null) {
            this.innerFormulaContent = new LabVirtualMachineCreationParameterInner();
        }
        this.innerFormulaContent().withEnvironmentId(environmentId);
        return this;
    }

    /**
     * Get the dataDiskParameters property: New or existing data disks to attach to the virtual machine after creation.
     *
     * @return the dataDiskParameters value.
     */
    public List<DataDiskProperties> dataDiskParameters() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().dataDiskParameters();
    }

    /**
     * Set the dataDiskParameters property: New or existing data disks to attach to the virtual machine after creation.
     *
     * @param dataDiskParameters the dataDiskParameters value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withDataDiskParameters(List<DataDiskProperties> dataDiskParameters) {
        if (this.innerFormulaContent() == null) {
            this.innerFormulaContent = new LabVirtualMachineCreationParameterInner();
        }
        this.innerFormulaContent().withDataDiskParameters(dataDiskParameters);
        return this;
    }

    /**
     * Get the scheduleParameters property: Virtual Machine schedules to be created.
     *
     * @return the scheduleParameters value.
     */
    public List<ScheduleCreationParameter> scheduleParameters() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().scheduleParameters();
    }

    /**
     * Set the scheduleParameters property: Virtual Machine schedules to be created.
     *
     * @param scheduleParameters the scheduleParameters value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withScheduleParameters(List<ScheduleCreationParameter> scheduleParameters) {
        if (this.innerFormulaContent() == null) {
            this.innerFormulaContent = new LabVirtualMachineCreationParameterInner();
        }
        this.innerFormulaContent().withScheduleParameters(scheduleParameters);
        return this;
    }

    /**
     * Get the lastKnownPowerState property: Last known compute power state captured in DTL.
     *
     * @return the lastKnownPowerState value.
     */
    public String lastKnownPowerState() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().lastKnownPowerState();
    }

    /**
     * Get the canApplyArtifacts property: Flag to determine if apply artifacts can be triggered at the time of fetching
     * the document.
     *
     * @return the canApplyArtifacts value.
     */
    public Boolean canApplyArtifacts() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().canApplyArtifacts();
    }

    /**
     * Get the provisioningState property: The provisioning status of the resource.
     *
     * @return the provisioningState value.
     */
    public String provisioningStateFormulaContentProvisioningState() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().provisioningState();
    }

    /**
     * Get the uniqueIdentifier property: The unique immutable identifier of a resource (Guid).
     *
     * @return the uniqueIdentifier value.
     */
    public String uniqueIdentifierFormulaContentUniqueIdentifier() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().uniqueIdentifier();
    }

    /**
     * Get the instanceCount property: The number of virtual machine instances to create.
     *
     * @return the instanceCount value.
     */
    public Integer instanceCount() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().instanceCount();
    }

    /**
     * Set the instanceCount property: The number of virtual machine instances to create.
     *
     * @param instanceCount the instanceCount value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withInstanceCount(Integer instanceCount) {
        if (this.innerFormulaContent() == null) {
            this.innerFormulaContent = new LabVirtualMachineCreationParameterInner();
        }
        this.innerFormulaContent().withInstanceCount(instanceCount);
        return this;
    }

    /**
     * Get the deploymentStatus property: The deployment status of the artifact.
     *
     * @return the deploymentStatus value.
     */
    public String deploymentStatus() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().deploymentStatus();
    }

    /**
     * Get the artifactsApplied property: The total count of the artifacts that were successfully applied.
     *
     * @return the artifactsApplied value.
     */
    public Integer artifactsApplied() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().artifactsApplied();
    }

    /**
     * Get the totalArtifacts property: The total count of the artifacts that were tentatively applied.
     *
     * @return the totalArtifacts value.
     */
    public Integer totalArtifacts() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().totalArtifacts();
    }

    /**
     * Get the offer property: The offer of the gallery image.
     *
     * @return the offer value.
     */
    public String offer() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().offer();
    }

    /**
     * Set the offer property: The offer of the gallery image.
     *
     * @param offer the offer value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withOffer(String offer) {
        if (this.innerFormulaContent() == null) {
            this.innerFormulaContent = new LabVirtualMachineCreationParameterInner();
        }
        this.innerFormulaContent().withOffer(offer);
        return this;
    }

    /**
     * Get the publisher property: The publisher of the gallery image.
     *
     * @return the publisher value.
     */
    public String publisher() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().publisher();
    }

    /**
     * Set the publisher property: The publisher of the gallery image.
     *
     * @param publisher the publisher value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withPublisher(String publisher) {
        if (this.innerFormulaContent() == null) {
            this.innerFormulaContent = new LabVirtualMachineCreationParameterInner();
        }
        this.innerFormulaContent().withPublisher(publisher);
        return this;
    }

    /**
     * Get the sku property: The SKU of the gallery image.
     *
     * @return the sku value.
     */
    public String sku() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().sku();
    }

    /**
     * Set the sku property: The SKU of the gallery image.
     *
     * @param sku the sku value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withSku(String sku) {
        if (this.innerFormulaContent() == null) {
            this.innerFormulaContent = new LabVirtualMachineCreationParameterInner();
        }
        this.innerFormulaContent().withSku(sku);
        return this;
    }

    /**
     * Get the osTypeGalleryImageReferenceOsType property: The OS type of the gallery image.
     *
     * @return the osTypeGalleryImageReferenceOsType value.
     */
    public String osTypeGalleryImageReferenceOsType() {
        return this.innerFormulaContent() == null
            ? null
            : this.innerFormulaContent().osTypeGalleryImageReferenceOsType();
    }

    /**
     * Set the osTypeGalleryImageReferenceOsType property: The OS type of the gallery image.
     *
     * @param osTypeGalleryImageReferenceOsType the osTypeGalleryImageReferenceOsType value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withOsTypeGalleryImageReferenceOsType(String osTypeGalleryImageReferenceOsType) {
        if (this.innerFormulaContent() == null) {
            this.innerFormulaContent = new LabVirtualMachineCreationParameterInner();
        }
        this.innerFormulaContent().withOsTypeGalleryImageReferenceOsType(osTypeGalleryImageReferenceOsType);
        return this;
    }

    /**
     * Get the version property: The version of the gallery image.
     *
     * @return the version value.
     */
    public String version() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().version();
    }

    /**
     * Set the version property: The version of the gallery image.
     *
     * @param version the version value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withVersion(String version) {
        if (this.innerFormulaContent() == null) {
            this.innerFormulaContent = new LabVirtualMachineCreationParameterInner();
        }
        this.innerFormulaContent().withVersion(version);
        return this;
    }

    /**
     * Get the statuses property: Gets the statuses of the virtual machine.
     *
     * @return the statuses value.
     */
    public List<ComputeVmInstanceViewStatus> statuses() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().statuses();
    }

    /**
     * Get the osTypeComputeVmOsType property: Gets the OS type of the virtual machine.
     *
     * @return the osTypeComputeVmOsType value.
     */
    public String osTypeComputeVmOsType() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().osTypeComputeVmOsType();
    }

    /**
     * Get the vmSize property: Gets the size of the virtual machine.
     *
     * @return the vmSize value.
     */
    public String vmSize() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().vmSize();
    }

    /**
     * Get the networkInterfaceId property: Gets the network interface ID of the virtual machine.
     *
     * @return the networkInterfaceId value.
     */
    public String networkInterfaceId() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().networkInterfaceId();
    }

    /**
     * Get the osDiskId property: Gets OS disk blob uri for the virtual machine.
     *
     * @return the osDiskId value.
     */
    public String osDiskId() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().osDiskId();
    }

    /**
     * Get the dataDiskIds property: Gets data disks blob uri for the virtual machine.
     *
     * @return the dataDiskIds value.
     */
    public List<String> dataDiskIds() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().dataDiskIds();
    }

    /**
     * Get the dataDisks property: Gets all data disks attached to the virtual machine.
     *
     * @return the dataDisks value.
     */
    public List<ComputeDataDisk> dataDisks() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().dataDisks();
    }

    /**
     * Get the virtualNetworkId property: The resource ID of the virtual network.
     *
     * @return the virtualNetworkId value.
     */
    public String virtualNetworkId() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().virtualNetworkId();
    }

    /**
     * Set the virtualNetworkId property: The resource ID of the virtual network.
     *
     * @param virtualNetworkId the virtualNetworkId value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withVirtualNetworkId(String virtualNetworkId) {
        if (this.innerFormulaContent() == null) {
            this.innerFormulaContent = new LabVirtualMachineCreationParameterInner();
        }
        this.innerFormulaContent().withVirtualNetworkId(virtualNetworkId);
        return this;
    }

    /**
     * Get the subnetId property: The resource ID of the sub net.
     *
     * @return the subnetId value.
     */
    public String subnetId() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().subnetId();
    }

    /**
     * Set the subnetId property: The resource ID of the sub net.
     *
     * @param subnetId the subnetId value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withSubnetId(String subnetId) {
        if (this.innerFormulaContent() == null) {
            this.innerFormulaContent = new LabVirtualMachineCreationParameterInner();
        }
        this.innerFormulaContent().withSubnetId(subnetId);
        return this;
    }

    /**
     * Get the publicIpAddressId property: The resource ID of the public IP address.
     *
     * @return the publicIpAddressId value.
     */
    public String publicIpAddressId() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().publicIpAddressId();
    }

    /**
     * Set the publicIpAddressId property: The resource ID of the public IP address.
     *
     * @param publicIpAddressId the publicIpAddressId value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withPublicIpAddressId(String publicIpAddressId) {
        if (this.innerFormulaContent() == null) {
            this.innerFormulaContent = new LabVirtualMachineCreationParameterInner();
        }
        this.innerFormulaContent().withPublicIpAddressId(publicIpAddressId);
        return this;
    }

    /**
     * Get the publicIpAddress property: The public IP address.
     *
     * @return the publicIpAddress value.
     */
    public String publicIpAddress() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().publicIpAddress();
    }

    /**
     * Set the publicIpAddress property: The public IP address.
     *
     * @param publicIpAddress the publicIpAddress value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withPublicIpAddress(String publicIpAddress) {
        if (this.innerFormulaContent() == null) {
            this.innerFormulaContent = new LabVirtualMachineCreationParameterInner();
        }
        this.innerFormulaContent().withPublicIpAddress(publicIpAddress);
        return this;
    }

    /**
     * Get the privateIpAddress property: The private IP address.
     *
     * @return the privateIpAddress value.
     */
    public String privateIpAddress() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().privateIpAddress();
    }

    /**
     * Set the privateIpAddress property: The private IP address.
     *
     * @param privateIpAddress the privateIpAddress value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withPrivateIpAddress(String privateIpAddress) {
        if (this.innerFormulaContent() == null) {
            this.innerFormulaContent = new LabVirtualMachineCreationParameterInner();
        }
        this.innerFormulaContent().withPrivateIpAddress(privateIpAddress);
        return this;
    }

    /**
     * Get the dnsName property: The DNS name.
     *
     * @return the dnsName value.
     */
    public String dnsName() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().dnsName();
    }

    /**
     * Set the dnsName property: The DNS name.
     *
     * @param dnsName the dnsName value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withDnsName(String dnsName) {
        if (this.innerFormulaContent() == null) {
            this.innerFormulaContent = new LabVirtualMachineCreationParameterInner();
        }
        this.innerFormulaContent().withDnsName(dnsName);
        return this;
    }

    /**
     * Get the rdpAuthority property: The RdpAuthority property is a server DNS host name or IP address followed by the
     * service port number for RDP (Remote Desktop Protocol).
     *
     * @return the rdpAuthority value.
     */
    public String rdpAuthority() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().rdpAuthority();
    }

    /**
     * Set the rdpAuthority property: The RdpAuthority property is a server DNS host name or IP address followed by the
     * service port number for RDP (Remote Desktop Protocol).
     *
     * @param rdpAuthority the rdpAuthority value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withRdpAuthority(String rdpAuthority) {
        if (this.innerFormulaContent() == null) {
            this.innerFormulaContent = new LabVirtualMachineCreationParameterInner();
        }
        this.innerFormulaContent().withRdpAuthority(rdpAuthority);
        return this;
    }

    /**
     * Get the sshAuthority property: The SshAuthority property is a server DNS host name or IP address followed by the
     * service port number for SSH.
     *
     * @return the sshAuthority value.
     */
    public String sshAuthority() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().sshAuthority();
    }

    /**
     * Set the sshAuthority property: The SshAuthority property is a server DNS host name or IP address followed by the
     * service port number for SSH.
     *
     * @param sshAuthority the sshAuthority value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withSshAuthority(String sshAuthority) {
        if (this.innerFormulaContent() == null) {
            this.innerFormulaContent = new LabVirtualMachineCreationParameterInner();
        }
        this.innerFormulaContent().withSshAuthority(sshAuthority);
        return this;
    }

    /**
     * Get the inboundNatRules property: The incoming NAT rules.
     *
     * @return the inboundNatRules value.
     */
    public List<InboundNatRule> inboundNatRules() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().inboundNatRules();
    }

    /**
     * Set the inboundNatRules property: The incoming NAT rules.
     *
     * @param inboundNatRules the inboundNatRules value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withInboundNatRules(List<InboundNatRule> inboundNatRules) {
        if (this.innerFormulaContent() == null) {
            this.innerFormulaContent = new LabVirtualMachineCreationParameterInner();
        }
        this.innerFormulaContent().withInboundNatRules(inboundNatRules);
        return this;
    }

    /**
     * Get the systemData property: The system metadata relating to this resource.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().systemData();
    }

    /**
     * Get the systemDataPropertiesSystemData property: The system metadata relating to this resource.
     *
     * @return the systemDataPropertiesSystemData value.
     */
    public SystemData systemDataPropertiesSystemData() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().systemDataPropertiesSystemData();
    }

    /**
     * Get the status property: The status of the schedule (i.e. Enabled, Disabled).
     *
     * @return the status value.
     */
    public EnableStatus status() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().status();
    }

    /**
     * Get the taskType property: The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).
     *
     * @return the taskType value.
     */
    public String taskType() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().taskType();
    }

    /**
     * Get the timeZoneId property: The time zone ID (e.g. Pacific Standard time).
     *
     * @return the timeZoneId value.
     */
    public String timeZoneId() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().timeZoneId();
    }

    /**
     * Get the createdDateApplicableScheduleCreatedDate property: The creation date of the schedule.
     *
     * @return the createdDateApplicableScheduleCreatedDate value.
     */
    public OffsetDateTime createdDateApplicableScheduleCreatedDate() {
        return this.innerFormulaContent() == null
            ? null
            : this.innerFormulaContent().createdDateApplicableScheduleCreatedDate();
    }

    /**
     * Get the targetResourceId property: The resource ID to which the schedule belongs.
     *
     * @return the targetResourceId value.
     */
    public String targetResourceId() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().targetResourceId();
    }

    /**
     * Get the provisioningStateApplicableScheduleProvisioningState property: The provisioning status of the resource.
     *
     * @return the provisioningStateApplicableScheduleProvisioningState value.
     */
    public String provisioningStateApplicableScheduleProvisioningState() {
        return this.innerFormulaContent() == null
            ? null
            : this.innerFormulaContent().provisioningStateApplicableScheduleProvisioningState();
    }

    /**
     * Get the uniqueIdentifierApplicableScheduleUniqueIdentifier property: The unique immutable identifier of a
     * resource (Guid).
     *
     * @return the uniqueIdentifierApplicableScheduleUniqueIdentifier value.
     */
    public String uniqueIdentifierApplicableScheduleUniqueIdentifier() {
        return this.innerFormulaContent() == null
            ? null
            : this.innerFormulaContent().uniqueIdentifierApplicableScheduleUniqueIdentifier();
    }

    /**
     * Get the weekdays property: The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday,
     * etc.).
     *
     * @return the weekdays value.
     */
    public List<String> weekdays() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().weekdays();
    }

    /**
     * Get the time property: The time of the day the schedule will occur.
     *
     * @return the time value.
     */
    public String time() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().time();
    }

    /**
     * Get the timeDailyRecurrenceTime property: The time of day the schedule will occur.
     *
     * @return the timeDailyRecurrenceTime value.
     */
    public String timeDailyRecurrenceTime() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().timeDailyRecurrenceTime();
    }

    /**
     * Get the minute property: Minutes of the hour the schedule will run.
     *
     * @return the minute value.
     */
    public Integer minute() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().minute();
    }

    /**
     * Get the statusNotificationSettingsStatus property: If notifications are enabled for this schedule (i.e. Enabled,
     * Disabled).
     *
     * @return the statusNotificationSettingsStatus value.
     */
    public EnableStatus statusNotificationSettingsStatus() {
        return this.innerFormulaContent() == null
            ? null
            : this.innerFormulaContent().statusNotificationSettingsStatus();
    }

    /**
     * Get the timeInMinutes property: Time in minutes before event at which notification will be sent.
     *
     * @return the timeInMinutes value.
     */
    public Integer timeInMinutes() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().timeInMinutes();
    }

    /**
     * Get the webhookUrl property: The webhook URL to which the notification will be sent.
     *
     * @return the webhookUrl value.
     */
    public String webhookUrl() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().webhookUrl();
    }

    /**
     * Get the emailRecipient property: The email recipient to send notifications to (can be a list of semi-colon
     * separated email addresses).
     *
     * @return the emailRecipient value.
     */
    public String emailRecipient() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().emailRecipient();
    }

    /**
     * Get the notificationLocale property: The locale to use when sending a notification (fallback for unsupported
     * languages is EN).
     *
     * @return the notificationLocale value.
     */
    public String notificationLocale() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().notificationLocale();
    }

    /**
     * Get the idPropertiesId property: Fully qualified resource ID for the resource. Ex -
     * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
     *
     * @return the idPropertiesId value.
     */
    public String idPropertiesId() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().idPropertiesId();
    }

    /**
     * Get the namePropertiesName property: The name of the resource.
     *
     * @return the namePropertiesName value.
     */
    public String namePropertiesName() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().namePropertiesName();
    }

    /**
     * Get the typePropertiesType property: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     * "Microsoft.Storage/storageAccounts".
     *
     * @return the typePropertiesType value.
     */
    public String typePropertiesType() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().typePropertiesType();
    }

    /**
     * Get the tagsPropertiesTags property: Resource tags.
     *
     * @return the tagsPropertiesTags value.
     */
    public Map<String, String> tagsPropertiesTags() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().tagsPropertiesTags();
    }

    /**
     * Get the locationPropertiesLocation property: The geo-location where the resource lives.
     *
     * @return the locationPropertiesLocation value.
     */
    public String locationPropertiesLocation() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().locationPropertiesLocation();
    }

    /**
     * Get the systemDataLabVmsStartupSystemData property: The system metadata relating to this resource.
     *
     * @return the systemDataLabVmsStartupSystemData value.
     */
    public SystemData systemDataLabVmsStartupSystemData() {
        return this.innerFormulaContent() == null
            ? null
            : this.innerFormulaContent().systemDataLabVmsStartupSystemData();
    }

    /**
     * Get the statusLabVmsStartupStatus property: The status of the schedule (i.e. Enabled, Disabled).
     *
     * @return the statusLabVmsStartupStatus value.
     */
    public EnableStatus statusLabVmsStartupStatus() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().statusLabVmsStartupStatus();
    }

    /**
     * Get the taskTypeLabVmsStartupTaskType property: The task type of the schedule (e.g. LabVmsShutdownTask,
     * LabVmAutoStart).
     *
     * @return the taskTypeLabVmsStartupTaskType value.
     */
    public String taskTypeLabVmsStartupTaskType() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().taskTypeLabVmsStartupTaskType();
    }

    /**
     * Get the timeZoneIdLabVmsStartupTimeZoneId property: The time zone ID (e.g. Pacific Standard time).
     *
     * @return the timeZoneIdLabVmsStartupTimeZoneId value.
     */
    public String timeZoneIdLabVmsStartupTimeZoneId() {
        return this.innerFormulaContent() == null
            ? null
            : this.innerFormulaContent().timeZoneIdLabVmsStartupTimeZoneId();
    }

    /**
     * Get the createdDateLabVmsStartupCreatedDate property: The creation date of the schedule.
     *
     * @return the createdDateLabVmsStartupCreatedDate value.
     */
    public OffsetDateTime createdDateLabVmsStartupCreatedDate() {
        return this.innerFormulaContent() == null
            ? null
            : this.innerFormulaContent().createdDateLabVmsStartupCreatedDate();
    }

    /**
     * Get the targetResourceIdLabVmsStartupTargetResourceId property: The resource ID to which the schedule belongs.
     *
     * @return the targetResourceIdLabVmsStartupTargetResourceId value.
     */
    public String targetResourceIdLabVmsStartupTargetResourceId() {
        return this.innerFormulaContent() == null
            ? null
            : this.innerFormulaContent().targetResourceIdLabVmsStartupTargetResourceId();
    }

    /**
     * Get the provisioningStateLabVmsStartupProvisioningState property: The provisioning status of the resource.
     *
     * @return the provisioningStateLabVmsStartupProvisioningState value.
     */
    public String provisioningStateLabVmsStartupProvisioningState() {
        return this.innerFormulaContent() == null
            ? null
            : this.innerFormulaContent().provisioningStateLabVmsStartupProvisioningState();
    }

    /**
     * Get the uniqueIdentifierLabVmsStartupUniqueIdentifier property: The unique immutable identifier of a resource
     * (Guid).
     *
     * @return the uniqueIdentifierLabVmsStartupUniqueIdentifier value.
     */
    public String uniqueIdentifierLabVmsStartupUniqueIdentifier() {
        return this.innerFormulaContent() == null
            ? null
            : this.innerFormulaContent().uniqueIdentifierLabVmsStartupUniqueIdentifier();
    }

    /**
     * Get the weekdaysLabVmsStartupWeekdays property: The days of the week for which the schedule is set (e.g. Sunday,
     * Monday, Tuesday, etc.).
     *
     * @return the weekdaysLabVmsStartupWeekdays value.
     */
    public List<String> weekdaysLabVmsStartupWeekdays() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().weekdaysLabVmsStartupWeekdays();
    }

    /**
     * Get the timeLabVmsStartupTime property: The time of the day the schedule will occur.
     *
     * @return the timeLabVmsStartupTime value.
     */
    public String timeLabVmsStartupTime() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().timeLabVmsStartupTime();
    }

    /**
     * Get the timeDailyRecurrenceTimeLabVmsStartupTimeDailyRecurrenceTime property: The time of day the schedule will
     * occur.
     *
     * @return the timeDailyRecurrenceTimeLabVmsStartupTimeDailyRecurrenceTime value.
     */
    public String timeDailyRecurrenceTimeLabVmsStartupTimeDailyRecurrenceTime() {
        return this.innerFormulaContent() == null
            ? null
            : this.innerFormulaContent().timeDailyRecurrenceTimeLabVmsStartupTimeDailyRecurrenceTime();
    }

    /**
     * Get the minuteLabVmsStartupMinute property: Minutes of the hour the schedule will run.
     *
     * @return the minuteLabVmsStartupMinute value.
     */
    public Integer minuteLabVmsStartupMinute() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().minuteLabVmsStartupMinute();
    }

    /**
     * Get the statusNotificationSettingsStatusLabVmsStartupStatusNotificationSettingsStatus property: If notifications
     * are enabled for this schedule (i.e. Enabled, Disabled).
     *
     * @return the statusNotificationSettingsStatusLabVmsStartupStatusNotificationSettingsStatus value.
     */
    public EnableStatus statusNotificationSettingsStatusLabVmsStartupStatusNotificationSettingsStatus() {
        return this.innerFormulaContent() == null
            ? null
            : this
                .innerFormulaContent()
                .statusNotificationSettingsStatusLabVmsStartupStatusNotificationSettingsStatus();
    }

    /**
     * Get the timeInMinutesLabVmsStartupTimeInMinutes property: Time in minutes before event at which notification will
     * be sent.
     *
     * @return the timeInMinutesLabVmsStartupTimeInMinutes value.
     */
    public Integer timeInMinutesLabVmsStartupTimeInMinutes() {
        return this.innerFormulaContent() == null
            ? null
            : this.innerFormulaContent().timeInMinutesLabVmsStartupTimeInMinutes();
    }

    /**
     * Get the webhookUrlLabVmsStartupWebhookUrl property: The webhook URL to which the notification will be sent.
     *
     * @return the webhookUrlLabVmsStartupWebhookUrl value.
     */
    public String webhookUrlLabVmsStartupWebhookUrl() {
        return this.innerFormulaContent() == null
            ? null
            : this.innerFormulaContent().webhookUrlLabVmsStartupWebhookUrl();
    }

    /**
     * Get the emailRecipientLabVmsStartupEmailRecipient property: The email recipient to send notifications to (can be
     * a list of semi-colon separated email addresses).
     *
     * @return the emailRecipientLabVmsStartupEmailRecipient value.
     */
    public String emailRecipientLabVmsStartupEmailRecipient() {
        return this.innerFormulaContent() == null
            ? null
            : this.innerFormulaContent().emailRecipientLabVmsStartupEmailRecipient();
    }

    /**
     * Get the notificationLocaleLabVmsStartupNotificationLocale property: The locale to use when sending a notification
     * (fallback for unsupported languages is EN).
     *
     * @return the notificationLocaleLabVmsStartupNotificationLocale value.
     */
    public String notificationLocaleLabVmsStartupNotificationLocale() {
        return this.innerFormulaContent() == null
            ? null
            : this.innerFormulaContent().notificationLocaleLabVmsStartupNotificationLocale();
    }

    /**
     * Get the idLabVmsStartupId property: Fully qualified resource ID for the resource. Ex -
     * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
     *
     * @return the idLabVmsStartupId value.
     */
    public String idLabVmsStartupId() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().idLabVmsStartupId();
    }

    /**
     * Get the nameLabVmsStartupName property: The name of the resource.
     *
     * @return the nameLabVmsStartupName value.
     */
    public String nameLabVmsStartupName() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().nameLabVmsStartupName();
    }

    /**
     * Get the typeLabVmsStartupType property: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     * "Microsoft.Storage/storageAccounts".
     *
     * @return the typeLabVmsStartupType value.
     */
    public String typeLabVmsStartupType() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().typeLabVmsStartupType();
    }

    /**
     * Get the tagsLabVmsStartupTags property: Resource tags.
     *
     * @return the tagsLabVmsStartupTags value.
     */
    public Map<String, String> tagsLabVmsStartupTags() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().tagsLabVmsStartupTags();
    }

    /**
     * Get the locationLabVmsStartupLocation property: The geo-location where the resource lives.
     *
     * @return the locationLabVmsStartupLocation value.
     */
    public String locationLabVmsStartupLocation() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().locationLabVmsStartupLocation();
    }

    /**
     * Get the id property: Fully qualified resource ID for the resource. Ex -
     * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
     *
     * @return the id value.
     */
    public String id() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().id();
    }

    /**
     * Get the type property: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     * "Microsoft.Storage/storageAccounts".
     *
     * @return the type value.
     */
    public String type() {
        return this.innerFormulaContent() == null ? null : this.innerFormulaContent().type();
    }

    /**
     * Get the labVmId property: The identifier of the VM from which a formula is to be created.
     *
     * @return the labVmId value.
     */
    public String labVmId() {
        return this.innerVm() == null ? null : this.innerVm().labVmId();
    }

    /**
     * Set the labVmId property: The identifier of the VM from which a formula is to be created.
     *
     * @param labVmId the labVmId value to set.
     * @return the FormulaPropertiesInner object itself.
     */
    public FormulaPropertiesInner withLabVmId(String labVmId) {
        if (this.innerVm() == null) {
            this.innerVm = new FormulaPropertiesFromVm();
        }
        this.innerVm().withLabVmId(labVmId);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerFormulaContent() != null) {
            innerFormulaContent().validate();
        }
        if (innerVm() != null) {
            innerVm().validate();
        }
    }
}
