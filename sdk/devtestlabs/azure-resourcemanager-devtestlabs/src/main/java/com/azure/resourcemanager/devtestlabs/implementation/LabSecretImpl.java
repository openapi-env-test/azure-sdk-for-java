// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devtestlabs.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.devtestlabs.fluent.models.LabSecretInner;
import com.azure.resourcemanager.devtestlabs.models.LabSecret;
import com.azure.resourcemanager.devtestlabs.models.SecretFragment;
import java.util.Collections;
import java.util.Map;

public final class LabSecretImpl implements LabSecret, LabSecret.Definition, LabSecret.Update {
    private LabSecretInner innerObject;

    private final com.azure.resourcemanager.devtestlabs.DevTestLabsManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String value() {
        return this.innerModel().value();
    }

    public String keyVaultEntry() {
        return this.innerModel().keyVaultEntry();
    }

    public Boolean enabledForArtifacts() {
        return this.innerModel().enabledForArtifacts();
    }

    public Boolean enabledForVmCreation() {
        return this.innerModel().enabledForVmCreation();
    }

    public Boolean enabledForArmEnvironments() {
        return this.innerModel().enabledForArmEnvironments();
    }

    public String provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String uniqueIdentifier() {
        return this.innerModel().uniqueIdentifier();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public LabSecretInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.devtestlabs.DevTestLabsManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String labName;

    private String name;

    private SecretFragment updateSecret;

    public LabSecretImpl withExistingLab(String resourceGroupName, String labName) {
        this.resourceGroupName = resourceGroupName;
        this.labName = labName;
        return this;
    }

    public LabSecret create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getLabSecrets()
                .createOrUpdate(resourceGroupName, labName, name, this.innerModel(), Context.NONE);
        return this;
    }

    public LabSecret create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getLabSecrets()
                .createOrUpdate(resourceGroupName, labName, name, this.innerModel(), context);
        return this;
    }

    LabSecretImpl(String name, com.azure.resourcemanager.devtestlabs.DevTestLabsManager serviceManager) {
        this.innerObject = new LabSecretInner();
        this.serviceManager = serviceManager;
        this.name = name;
    }

    public LabSecretImpl update() {
        this.updateSecret = new SecretFragment();
        return this;
    }

    public LabSecret apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getLabSecrets()
                .updateWithResponse(resourceGroupName, labName, name, updateSecret, Context.NONE)
                .getValue();
        return this;
    }

    public LabSecret apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getLabSecrets()
                .updateWithResponse(resourceGroupName, labName, name, updateSecret, context)
                .getValue();
        return this;
    }

    LabSecretImpl(LabSecretInner innerObject, com.azure.resourcemanager.devtestlabs.DevTestLabsManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.labName = Utils.getValueFromIdByName(innerObject.id(), "labs");
        this.name = Utils.getValueFromIdByName(innerObject.id(), "secrets");
    }

    public LabSecret refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getLabSecrets()
                .getWithResponse(resourceGroupName, labName, name, Context.NONE)
                .getValue();
        return this;
    }

    public LabSecret refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getLabSecrets()
                .getWithResponse(resourceGroupName, labName, name, context)
                .getValue();
        return this;
    }

    public LabSecretImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public LabSecretImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public LabSecretImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateSecret.withTags(tags);
            return this;
        }
    }

    public LabSecretImpl withValue(String value) {
        this.innerModel().withValue(value);
        return this;
    }

    public LabSecretImpl withEnabledForArtifacts(Boolean enabledForArtifacts) {
        this.innerModel().withEnabledForArtifacts(enabledForArtifacts);
        return this;
    }

    public LabSecretImpl withEnabledForVmCreation(Boolean enabledForVmCreation) {
        this.innerModel().withEnabledForVmCreation(enabledForVmCreation);
        return this;
    }

    public LabSecretImpl withEnabledForArmEnvironments(Boolean enabledForArmEnvironments) {
        this.innerModel().withEnabledForArmEnvironments(enabledForArmEnvironments);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
