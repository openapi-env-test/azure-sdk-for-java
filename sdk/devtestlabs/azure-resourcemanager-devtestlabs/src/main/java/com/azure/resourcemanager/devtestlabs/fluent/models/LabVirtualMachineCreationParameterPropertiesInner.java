// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devtestlabs.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.devtestlabs.models.ArtifactInstallProperties;
import com.azure.resourcemanager.devtestlabs.models.ComputeDataDisk;
import com.azure.resourcemanager.devtestlabs.models.ComputeVmInstanceViewStatus;
import com.azure.resourcemanager.devtestlabs.models.DataDiskProperties;
import com.azure.resourcemanager.devtestlabs.models.EnableStatus;
import com.azure.resourcemanager.devtestlabs.models.InboundNatRule;
import com.azure.resourcemanager.devtestlabs.models.ScheduleCreationParameter;
import com.azure.resourcemanager.devtestlabs.models.StorageType;
import com.azure.resourcemanager.devtestlabs.models.VirtualMachineCreationSource;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Map;

/** Properties for virtual machine creation. */
@Fluent
public final class LabVirtualMachineCreationParameterPropertiesInner {
    /*
     * The number of virtual machine instances to create.
     */
    @JsonProperty(value = "bulkCreationParameters")
    private BulkCreationParameters innerBulkCreationParameters;

    /*
     * The notes of the virtual machine.
     */
    @JsonProperty(value = "notes")
    private String notes;

    /*
     * The object identifier of the owner of the virtual machine.
     */
    @JsonProperty(value = "ownerObjectId")
    private String ownerObjectId;

    /*
     * The user principal name of the virtual machine owner.
     */
    @JsonProperty(value = "ownerUserPrincipalName")
    private String ownerUserPrincipalName;

    /*
     * The object identifier of the creator of the virtual machine.
     */
    @JsonProperty(value = "createdByUserId", access = JsonProperty.Access.WRITE_ONLY)
    private String createdByUserId;

    /*
     * The email address of creator of the virtual machine.
     */
    @JsonProperty(value = "createdByUser", access = JsonProperty.Access.WRITE_ONLY)
    private String createdByUser;

    /*
     * The creation date of the virtual machine.
     */
    @JsonProperty(value = "createdDate")
    private OffsetDateTime createdDate;

    /*
     * The resource identifier (Microsoft.Compute) of the virtual machine.
     */
    @JsonProperty(value = "computeId", access = JsonProperty.Access.WRITE_ONLY)
    private String computeId;

    /*
     * The custom image identifier of the virtual machine.
     */
    @JsonProperty(value = "customImageId")
    private String customImageId;

    /*
     * The shared gallery image version resource identifier of the virtual
     * machine.
     */
    @JsonProperty(value = "galleryImageVersionId")
    private String galleryImageVersionId;

    /*
     * The shared image resource identifier of the virtual machine.
     */
    @JsonProperty(value = "sharedImageId")
    private String sharedImageId;

    /*
     * The shared image version for the specified shared image Id. Will use
     * latest if not specified.
     */
    @JsonProperty(value = "sharedImageVersion")
    private String sharedImageVersion;

    /*
     * The OS type of the virtual machine.
     */
    @JsonProperty(value = "osType", access = JsonProperty.Access.WRITE_ONLY)
    private String osType;

    /*
     * The size of the virtual machine.
     */
    @JsonProperty(value = "size")
    private String size;

    /*
     * The user name of the virtual machine.
     */
    @JsonProperty(value = "userName")
    private String username;

    /*
     * The password of the virtual machine administrator.
     */
    @JsonProperty(value = "password")
    private String password;

    /*
     * The SSH key of the virtual machine administrator.
     */
    @JsonProperty(value = "sshKey")
    private String sshKey;

    /*
     * Indicates whether this virtual machine uses an SSH key for
     * authentication.
     */
    @JsonProperty(value = "isAuthenticationWithSshKey")
    private Boolean isAuthenticationWithSshKey;

    /*
     * The fully-qualified domain name of the virtual machine.
     */
    @JsonProperty(value = "fqdn", access = JsonProperty.Access.WRITE_ONLY)
    private String fqdn;

    /*
     * The lab subnet name of the virtual machine.
     */
    @JsonProperty(value = "labSubnetName")
    private String labSubnetName;

    /*
     * The lab virtual network identifier of the virtual machine.
     */
    @JsonProperty(value = "labVirtualNetworkId")
    private String labVirtualNetworkId;

    /*
     * Indicates whether the virtual machine is to be created without a public
     * IP address.
     */
    @JsonProperty(value = "disallowPublicIpAddress")
    private Boolean disallowPublicIpAddress;

    /*
     * The artifacts to be installed on the virtual machine.
     */
    @JsonProperty(value = "artifacts")
    private List<ArtifactInstallProperties> artifacts;

    /*
     * The artifact deployment status for the virtual machine.
     */
    @JsonProperty(value = "artifactDeploymentStatus", access = JsonProperty.Access.WRITE_ONLY)
    private ArtifactDeploymentStatusProperties innerArtifactDeploymentStatus;

    /*
     * The Microsoft Azure Marketplace image reference of the virtual machine.
     */
    @JsonProperty(value = "galleryImageReference")
    private GalleryImageReference innerGalleryImageReference;

    /*
     * The id of the plan associated with the virtual machine image
     */
    @JsonProperty(value = "planId")
    private String planId;

    /*
     * Specifies the size of an empty data disk in gigabytes. This element can
     * be used to overwrite the size of the disk in a virtual machine image.
     */
    @JsonProperty(value = "osDiskSizeGb")
    private Integer osDiskSizeGb;

    /*
     * The compute virtual machine properties.
     */
    @JsonProperty(value = "computeVm", access = JsonProperty.Access.WRITE_ONLY)
    private ComputeVmProperties innerComputeVm;

    /*
     * The network interface properties.
     */
    @JsonProperty(value = "networkInterface")
    private NetworkInterfaceProperties innerNetworkInterface;

    /*
     * The applicable schedule for the virtual machine.
     */
    @JsonProperty(value = "applicableSchedule", access = JsonProperty.Access.WRITE_ONLY)
    private ApplicableScheduleInner innerApplicableSchedule;

    /*
     * The expiration date for VM.
     */
    @JsonProperty(value = "expirationDate")
    private OffsetDateTime expirationDate;

    /*
     * Indicates whether another user can take ownership of the virtual machine
     */
    @JsonProperty(value = "allowClaim")
    private Boolean allowClaim;

    /*
     * Storage type to use for virtual machine (i.e. Standard, Premium,
     * StandardSSD).
     */
    @JsonProperty(value = "storageType")
    private StorageType storageType;

    /*
     * Tells source of creation of lab virtual machine. Output property only.
     */
    @JsonProperty(value = "virtualMachineCreationSource", access = JsonProperty.Access.WRITE_ONLY)
    private VirtualMachineCreationSource virtualMachineCreationSource;

    /*
     * The resource ID of the environment that contains this virtual machine,
     * if any.
     */
    @JsonProperty(value = "environmentId")
    private String environmentId;

    /*
     * New or existing data disks to attach to the virtual machine after
     * creation
     */
    @JsonProperty(value = "dataDiskParameters")
    private List<DataDiskProperties> dataDiskParameters;

    /*
     * Virtual Machine schedules to be created
     */
    @JsonProperty(value = "scheduleParameters")
    private List<ScheduleCreationParameter> scheduleParameters;

    /*
     * Last known compute power state captured in DTL
     */
    @JsonProperty(value = "lastKnownPowerState", access = JsonProperty.Access.WRITE_ONLY)
    private String lastKnownPowerState;

    /*
     * Flag to determine if apply artifacts can be triggered at the time of
     * fetching the document.
     */
    @JsonProperty(value = "canApplyArtifacts", access = JsonProperty.Access.WRITE_ONLY)
    private Boolean canApplyArtifacts;

    /*
     * The provisioning status of the resource.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private String provisioningState;

    /*
     * The unique immutable identifier of a resource (Guid).
     */
    @JsonProperty(value = "uniqueIdentifier", access = JsonProperty.Access.WRITE_ONLY)
    private String uniqueIdentifier;

    /**
     * Get the innerBulkCreationParameters property: The number of virtual machine instances to create.
     *
     * @return the innerBulkCreationParameters value.
     */
    private BulkCreationParameters innerBulkCreationParameters() {
        return this.innerBulkCreationParameters;
    }

    /**
     * Get the notes property: The notes of the virtual machine.
     *
     * @return the notes value.
     */
    public String notes() {
        return this.notes;
    }

    /**
     * Set the notes property: The notes of the virtual machine.
     *
     * @param notes the notes value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withNotes(String notes) {
        this.notes = notes;
        return this;
    }

    /**
     * Get the ownerObjectId property: The object identifier of the owner of the virtual machine.
     *
     * @return the ownerObjectId value.
     */
    public String ownerObjectId() {
        return this.ownerObjectId;
    }

    /**
     * Set the ownerObjectId property: The object identifier of the owner of the virtual machine.
     *
     * @param ownerObjectId the ownerObjectId value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withOwnerObjectId(String ownerObjectId) {
        this.ownerObjectId = ownerObjectId;
        return this;
    }

    /**
     * Get the ownerUserPrincipalName property: The user principal name of the virtual machine owner.
     *
     * @return the ownerUserPrincipalName value.
     */
    public String ownerUserPrincipalName() {
        return this.ownerUserPrincipalName;
    }

    /**
     * Set the ownerUserPrincipalName property: The user principal name of the virtual machine owner.
     *
     * @param ownerUserPrincipalName the ownerUserPrincipalName value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withOwnerUserPrincipalName(String ownerUserPrincipalName) {
        this.ownerUserPrincipalName = ownerUserPrincipalName;
        return this;
    }

    /**
     * Get the createdByUserId property: The object identifier of the creator of the virtual machine.
     *
     * @return the createdByUserId value.
     */
    public String createdByUserId() {
        return this.createdByUserId;
    }

    /**
     * Get the createdByUser property: The email address of creator of the virtual machine.
     *
     * @return the createdByUser value.
     */
    public String createdByUser() {
        return this.createdByUser;
    }

    /**
     * Get the createdDate property: The creation date of the virtual machine.
     *
     * @return the createdDate value.
     */
    public OffsetDateTime createdDate() {
        return this.createdDate;
    }

    /**
     * Set the createdDate property: The creation date of the virtual machine.
     *
     * @param createdDate the createdDate value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withCreatedDate(OffsetDateTime createdDate) {
        this.createdDate = createdDate;
        return this;
    }

    /**
     * Get the computeId property: The resource identifier (Microsoft.Compute) of the virtual machine.
     *
     * @return the computeId value.
     */
    public String computeId() {
        return this.computeId;
    }

    /**
     * Get the customImageId property: The custom image identifier of the virtual machine.
     *
     * @return the customImageId value.
     */
    public String customImageId() {
        return this.customImageId;
    }

    /**
     * Set the customImageId property: The custom image identifier of the virtual machine.
     *
     * @param customImageId the customImageId value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withCustomImageId(String customImageId) {
        this.customImageId = customImageId;
        return this;
    }

    /**
     * Get the galleryImageVersionId property: The shared gallery image version resource identifier of the virtual
     * machine.
     *
     * @return the galleryImageVersionId value.
     */
    public String galleryImageVersionId() {
        return this.galleryImageVersionId;
    }

    /**
     * Set the galleryImageVersionId property: The shared gallery image version resource identifier of the virtual
     * machine.
     *
     * @param galleryImageVersionId the galleryImageVersionId value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withGalleryImageVersionId(String galleryImageVersionId) {
        this.galleryImageVersionId = galleryImageVersionId;
        return this;
    }

    /**
     * Get the sharedImageId property: The shared image resource identifier of the virtual machine.
     *
     * @return the sharedImageId value.
     */
    public String sharedImageId() {
        return this.sharedImageId;
    }

    /**
     * Set the sharedImageId property: The shared image resource identifier of the virtual machine.
     *
     * @param sharedImageId the sharedImageId value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withSharedImageId(String sharedImageId) {
        this.sharedImageId = sharedImageId;
        return this;
    }

    /**
     * Get the sharedImageVersion property: The shared image version for the specified shared image Id. Will use latest
     * if not specified.
     *
     * @return the sharedImageVersion value.
     */
    public String sharedImageVersion() {
        return this.sharedImageVersion;
    }

    /**
     * Set the sharedImageVersion property: The shared image version for the specified shared image Id. Will use latest
     * if not specified.
     *
     * @param sharedImageVersion the sharedImageVersion value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withSharedImageVersion(String sharedImageVersion) {
        this.sharedImageVersion = sharedImageVersion;
        return this;
    }

    /**
     * Get the osType property: The OS type of the virtual machine.
     *
     * @return the osType value.
     */
    public String osType() {
        return this.osType;
    }

    /**
     * Get the size property: The size of the virtual machine.
     *
     * @return the size value.
     */
    public String size() {
        return this.size;
    }

    /**
     * Set the size property: The size of the virtual machine.
     *
     * @param size the size value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withSize(String size) {
        this.size = size;
        return this;
    }

    /**
     * Get the username property: The user name of the virtual machine.
     *
     * @return the username value.
     */
    public String username() {
        return this.username;
    }

    /**
     * Set the username property: The user name of the virtual machine.
     *
     * @param username the username value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withUsername(String username) {
        this.username = username;
        return this;
    }

    /**
     * Get the password property: The password of the virtual machine administrator.
     *
     * @return the password value.
     */
    public String password() {
        return this.password;
    }

    /**
     * Set the password property: The password of the virtual machine administrator.
     *
     * @param password the password value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withPassword(String password) {
        this.password = password;
        return this;
    }

    /**
     * Get the sshKey property: The SSH key of the virtual machine administrator.
     *
     * @return the sshKey value.
     */
    public String sshKey() {
        return this.sshKey;
    }

    /**
     * Set the sshKey property: The SSH key of the virtual machine administrator.
     *
     * @param sshKey the sshKey value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withSshKey(String sshKey) {
        this.sshKey = sshKey;
        return this;
    }

    /**
     * Get the isAuthenticationWithSshKey property: Indicates whether this virtual machine uses an SSH key for
     * authentication.
     *
     * @return the isAuthenticationWithSshKey value.
     */
    public Boolean isAuthenticationWithSshKey() {
        return this.isAuthenticationWithSshKey;
    }

    /**
     * Set the isAuthenticationWithSshKey property: Indicates whether this virtual machine uses an SSH key for
     * authentication.
     *
     * @param isAuthenticationWithSshKey the isAuthenticationWithSshKey value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withIsAuthenticationWithSshKey(
        Boolean isAuthenticationWithSshKey) {
        this.isAuthenticationWithSshKey = isAuthenticationWithSshKey;
        return this;
    }

    /**
     * Get the fqdn property: The fully-qualified domain name of the virtual machine.
     *
     * @return the fqdn value.
     */
    public String fqdn() {
        return this.fqdn;
    }

    /**
     * Get the labSubnetName property: The lab subnet name of the virtual machine.
     *
     * @return the labSubnetName value.
     */
    public String labSubnetName() {
        return this.labSubnetName;
    }

    /**
     * Set the labSubnetName property: The lab subnet name of the virtual machine.
     *
     * @param labSubnetName the labSubnetName value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withLabSubnetName(String labSubnetName) {
        this.labSubnetName = labSubnetName;
        return this;
    }

    /**
     * Get the labVirtualNetworkId property: The lab virtual network identifier of the virtual machine.
     *
     * @return the labVirtualNetworkId value.
     */
    public String labVirtualNetworkId() {
        return this.labVirtualNetworkId;
    }

    /**
     * Set the labVirtualNetworkId property: The lab virtual network identifier of the virtual machine.
     *
     * @param labVirtualNetworkId the labVirtualNetworkId value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withLabVirtualNetworkId(String labVirtualNetworkId) {
        this.labVirtualNetworkId = labVirtualNetworkId;
        return this;
    }

    /**
     * Get the disallowPublicIpAddress property: Indicates whether the virtual machine is to be created without a public
     * IP address.
     *
     * @return the disallowPublicIpAddress value.
     */
    public Boolean disallowPublicIpAddress() {
        return this.disallowPublicIpAddress;
    }

    /**
     * Set the disallowPublicIpAddress property: Indicates whether the virtual machine is to be created without a public
     * IP address.
     *
     * @param disallowPublicIpAddress the disallowPublicIpAddress value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withDisallowPublicIpAddress(
        Boolean disallowPublicIpAddress) {
        this.disallowPublicIpAddress = disallowPublicIpAddress;
        return this;
    }

    /**
     * Get the artifacts property: The artifacts to be installed on the virtual machine.
     *
     * @return the artifacts value.
     */
    public List<ArtifactInstallProperties> artifacts() {
        return this.artifacts;
    }

    /**
     * Set the artifacts property: The artifacts to be installed on the virtual machine.
     *
     * @param artifacts the artifacts value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withArtifacts(List<ArtifactInstallProperties> artifacts) {
        this.artifacts = artifacts;
        return this;
    }

    /**
     * Get the innerArtifactDeploymentStatus property: The artifact deployment status for the virtual machine.
     *
     * @return the innerArtifactDeploymentStatus value.
     */
    private ArtifactDeploymentStatusProperties innerArtifactDeploymentStatus() {
        return this.innerArtifactDeploymentStatus;
    }

    /**
     * Get the innerGalleryImageReference property: The Microsoft Azure Marketplace image reference of the virtual
     * machine.
     *
     * @return the innerGalleryImageReference value.
     */
    private GalleryImageReference innerGalleryImageReference() {
        return this.innerGalleryImageReference;
    }

    /**
     * Get the planId property: The id of the plan associated with the virtual machine image.
     *
     * @return the planId value.
     */
    public String planId() {
        return this.planId;
    }

    /**
     * Set the planId property: The id of the plan associated with the virtual machine image.
     *
     * @param planId the planId value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withPlanId(String planId) {
        this.planId = planId;
        return this;
    }

    /**
     * Get the osDiskSizeGb property: Specifies the size of an empty data disk in gigabytes. This element can be used to
     * overwrite the size of the disk in a virtual machine image.
     *
     * @return the osDiskSizeGb value.
     */
    public Integer osDiskSizeGb() {
        return this.osDiskSizeGb;
    }

    /**
     * Set the osDiskSizeGb property: Specifies the size of an empty data disk in gigabytes. This element can be used to
     * overwrite the size of the disk in a virtual machine image.
     *
     * @param osDiskSizeGb the osDiskSizeGb value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withOsDiskSizeGb(Integer osDiskSizeGb) {
        this.osDiskSizeGb = osDiskSizeGb;
        return this;
    }

    /**
     * Get the innerComputeVm property: The compute virtual machine properties.
     *
     * @return the innerComputeVm value.
     */
    private ComputeVmProperties innerComputeVm() {
        return this.innerComputeVm;
    }

    /**
     * Get the innerNetworkInterface property: The network interface properties.
     *
     * @return the innerNetworkInterface value.
     */
    private NetworkInterfaceProperties innerNetworkInterface() {
        return this.innerNetworkInterface;
    }

    /**
     * Get the innerApplicableSchedule property: The applicable schedule for the virtual machine.
     *
     * @return the innerApplicableSchedule value.
     */
    private ApplicableScheduleInner innerApplicableSchedule() {
        return this.innerApplicableSchedule;
    }

    /**
     * Get the expirationDate property: The expiration date for VM.
     *
     * @return the expirationDate value.
     */
    public OffsetDateTime expirationDate() {
        return this.expirationDate;
    }

    /**
     * Set the expirationDate property: The expiration date for VM.
     *
     * @param expirationDate the expirationDate value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withExpirationDate(OffsetDateTime expirationDate) {
        this.expirationDate = expirationDate;
        return this;
    }

    /**
     * Get the allowClaim property: Indicates whether another user can take ownership of the virtual machine.
     *
     * @return the allowClaim value.
     */
    public Boolean allowClaim() {
        return this.allowClaim;
    }

    /**
     * Set the allowClaim property: Indicates whether another user can take ownership of the virtual machine.
     *
     * @param allowClaim the allowClaim value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withAllowClaim(Boolean allowClaim) {
        this.allowClaim = allowClaim;
        return this;
    }

    /**
     * Get the storageType property: Storage type to use for virtual machine (i.e. Standard, Premium, StandardSSD).
     *
     * @return the storageType value.
     */
    public StorageType storageType() {
        return this.storageType;
    }

    /**
     * Set the storageType property: Storage type to use for virtual machine (i.e. Standard, Premium, StandardSSD).
     *
     * @param storageType the storageType value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withStorageType(StorageType storageType) {
        this.storageType = storageType;
        return this;
    }

    /**
     * Get the virtualMachineCreationSource property: Tells source of creation of lab virtual machine. Output property
     * only.
     *
     * @return the virtualMachineCreationSource value.
     */
    public VirtualMachineCreationSource virtualMachineCreationSource() {
        return this.virtualMachineCreationSource;
    }

    /**
     * Get the environmentId property: The resource ID of the environment that contains this virtual machine, if any.
     *
     * @return the environmentId value.
     */
    public String environmentId() {
        return this.environmentId;
    }

    /**
     * Set the environmentId property: The resource ID of the environment that contains this virtual machine, if any.
     *
     * @param environmentId the environmentId value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withEnvironmentId(String environmentId) {
        this.environmentId = environmentId;
        return this;
    }

    /**
     * Get the dataDiskParameters property: New or existing data disks to attach to the virtual machine after creation.
     *
     * @return the dataDiskParameters value.
     */
    public List<DataDiskProperties> dataDiskParameters() {
        return this.dataDiskParameters;
    }

    /**
     * Set the dataDiskParameters property: New or existing data disks to attach to the virtual machine after creation.
     *
     * @param dataDiskParameters the dataDiskParameters value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withDataDiskParameters(
        List<DataDiskProperties> dataDiskParameters) {
        this.dataDiskParameters = dataDiskParameters;
        return this;
    }

    /**
     * Get the scheduleParameters property: Virtual Machine schedules to be created.
     *
     * @return the scheduleParameters value.
     */
    public List<ScheduleCreationParameter> scheduleParameters() {
        return this.scheduleParameters;
    }

    /**
     * Set the scheduleParameters property: Virtual Machine schedules to be created.
     *
     * @param scheduleParameters the scheduleParameters value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withScheduleParameters(
        List<ScheduleCreationParameter> scheduleParameters) {
        this.scheduleParameters = scheduleParameters;
        return this;
    }

    /**
     * Get the lastKnownPowerState property: Last known compute power state captured in DTL.
     *
     * @return the lastKnownPowerState value.
     */
    public String lastKnownPowerState() {
        return this.lastKnownPowerState;
    }

    /**
     * Get the canApplyArtifacts property: Flag to determine if apply artifacts can be triggered at the time of fetching
     * the document.
     *
     * @return the canApplyArtifacts value.
     */
    public Boolean canApplyArtifacts() {
        return this.canApplyArtifacts;
    }

    /**
     * Get the provisioningState property: The provisioning status of the resource.
     *
     * @return the provisioningState value.
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the uniqueIdentifier property: The unique immutable identifier of a resource (Guid).
     *
     * @return the uniqueIdentifier value.
     */
    public String uniqueIdentifier() {
        return this.uniqueIdentifier;
    }

    /**
     * Get the instanceCount property: The number of virtual machine instances to create.
     *
     * @return the instanceCount value.
     */
    public Integer instanceCount() {
        return this.innerBulkCreationParameters() == null ? null : this.innerBulkCreationParameters().instanceCount();
    }

    /**
     * Set the instanceCount property: The number of virtual machine instances to create.
     *
     * @param instanceCount the instanceCount value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withInstanceCount(Integer instanceCount) {
        if (this.innerBulkCreationParameters() == null) {
            this.innerBulkCreationParameters = new BulkCreationParameters();
        }
        this.innerBulkCreationParameters().withInstanceCount(instanceCount);
        return this;
    }

    /**
     * Get the deploymentStatus property: The deployment status of the artifact.
     *
     * @return the deploymentStatus value.
     */
    public String deploymentStatus() {
        return this.innerArtifactDeploymentStatus() == null
            ? null
            : this.innerArtifactDeploymentStatus().deploymentStatus();
    }

    /**
     * Set the deploymentStatus property: The deployment status of the artifact.
     *
     * @param deploymentStatus the deploymentStatus value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withDeploymentStatus(String deploymentStatus) {
        if (this.innerArtifactDeploymentStatus() == null) {
            this.innerArtifactDeploymentStatus = new ArtifactDeploymentStatusProperties();
        }
        this.innerArtifactDeploymentStatus().withDeploymentStatus(deploymentStatus);
        return this;
    }

    /**
     * Get the artifactsApplied property: The total count of the artifacts that were successfully applied.
     *
     * @return the artifactsApplied value.
     */
    public Integer artifactsApplied() {
        return this.innerArtifactDeploymentStatus() == null
            ? null
            : this.innerArtifactDeploymentStatus().artifactsApplied();
    }

    /**
     * Set the artifactsApplied property: The total count of the artifacts that were successfully applied.
     *
     * @param artifactsApplied the artifactsApplied value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withArtifactsApplied(Integer artifactsApplied) {
        if (this.innerArtifactDeploymentStatus() == null) {
            this.innerArtifactDeploymentStatus = new ArtifactDeploymentStatusProperties();
        }
        this.innerArtifactDeploymentStatus().withArtifactsApplied(artifactsApplied);
        return this;
    }

    /**
     * Get the totalArtifacts property: The total count of the artifacts that were tentatively applied.
     *
     * @return the totalArtifacts value.
     */
    public Integer totalArtifacts() {
        return this.innerArtifactDeploymentStatus() == null
            ? null
            : this.innerArtifactDeploymentStatus().totalArtifacts();
    }

    /**
     * Set the totalArtifacts property: The total count of the artifacts that were tentatively applied.
     *
     * @param totalArtifacts the totalArtifacts value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withTotalArtifacts(Integer totalArtifacts) {
        if (this.innerArtifactDeploymentStatus() == null) {
            this.innerArtifactDeploymentStatus = new ArtifactDeploymentStatusProperties();
        }
        this.innerArtifactDeploymentStatus().withTotalArtifacts(totalArtifacts);
        return this;
    }

    /**
     * Get the offer property: The offer of the gallery image.
     *
     * @return the offer value.
     */
    public String offer() {
        return this.innerGalleryImageReference() == null ? null : this.innerGalleryImageReference().offer();
    }

    /**
     * Set the offer property: The offer of the gallery image.
     *
     * @param offer the offer value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withOffer(String offer) {
        if (this.innerGalleryImageReference() == null) {
            this.innerGalleryImageReference = new GalleryImageReference();
        }
        this.innerGalleryImageReference().withOffer(offer);
        return this;
    }

    /**
     * Get the publisher property: The publisher of the gallery image.
     *
     * @return the publisher value.
     */
    public String publisher() {
        return this.innerGalleryImageReference() == null ? null : this.innerGalleryImageReference().publisher();
    }

    /**
     * Set the publisher property: The publisher of the gallery image.
     *
     * @param publisher the publisher value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withPublisher(String publisher) {
        if (this.innerGalleryImageReference() == null) {
            this.innerGalleryImageReference = new GalleryImageReference();
        }
        this.innerGalleryImageReference().withPublisher(publisher);
        return this;
    }

    /**
     * Get the sku property: The SKU of the gallery image.
     *
     * @return the sku value.
     */
    public String sku() {
        return this.innerGalleryImageReference() == null ? null : this.innerGalleryImageReference().sku();
    }

    /**
     * Set the sku property: The SKU of the gallery image.
     *
     * @param sku the sku value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withSku(String sku) {
        if (this.innerGalleryImageReference() == null) {
            this.innerGalleryImageReference = new GalleryImageReference();
        }
        this.innerGalleryImageReference().withSku(sku);
        return this;
    }

    /**
     * Get the osType property: The OS type of the gallery image.
     *
     * @return the osType value.
     */
    public String osTypeGalleryImageReferenceOsType() {
        return this.innerGalleryImageReference() == null ? null : this.innerGalleryImageReference().osType();
    }

    /**
     * Set the osType property: The OS type of the gallery image.
     *
     * @param osType the osType value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withOsTypeGalleryImageReferenceOsType(String osType) {
        if (this.innerGalleryImageReference() == null) {
            this.innerGalleryImageReference = new GalleryImageReference();
        }
        this.innerGalleryImageReference().withOsType(osType);
        return this;
    }

    /**
     * Get the version property: The version of the gallery image.
     *
     * @return the version value.
     */
    public String version() {
        return this.innerGalleryImageReference() == null ? null : this.innerGalleryImageReference().version();
    }

    /**
     * Set the version property: The version of the gallery image.
     *
     * @param version the version value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withVersion(String version) {
        if (this.innerGalleryImageReference() == null) {
            this.innerGalleryImageReference = new GalleryImageReference();
        }
        this.innerGalleryImageReference().withVersion(version);
        return this;
    }

    /**
     * Get the statuses property: Gets the statuses of the virtual machine.
     *
     * @return the statuses value.
     */
    public List<ComputeVmInstanceViewStatus> statuses() {
        return this.innerComputeVm() == null ? null : this.innerComputeVm().statuses();
    }

    /**
     * Set the statuses property: Gets the statuses of the virtual machine.
     *
     * @param statuses the statuses value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withStatuses(List<ComputeVmInstanceViewStatus> statuses) {
        if (this.innerComputeVm() == null) {
            this.innerComputeVm = new ComputeVmProperties();
        }
        this.innerComputeVm().withStatuses(statuses);
        return this;
    }

    /**
     * Get the osType property: Gets the OS type of the virtual machine.
     *
     * @return the osType value.
     */
    public String osTypeComputeVmOsType() {
        return this.innerComputeVm() == null ? null : this.innerComputeVm().osType();
    }

    /**
     * Set the osType property: Gets the OS type of the virtual machine.
     *
     * @param osType the osType value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withOsTypeComputeVmOsType(String osType) {
        if (this.innerComputeVm() == null) {
            this.innerComputeVm = new ComputeVmProperties();
        }
        this.innerComputeVm().withOsType(osType);
        return this;
    }

    /**
     * Get the vmSize property: Gets the size of the virtual machine.
     *
     * @return the vmSize value.
     */
    public String vmSize() {
        return this.innerComputeVm() == null ? null : this.innerComputeVm().vmSize();
    }

    /**
     * Set the vmSize property: Gets the size of the virtual machine.
     *
     * @param vmSize the vmSize value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withVmSize(String vmSize) {
        if (this.innerComputeVm() == null) {
            this.innerComputeVm = new ComputeVmProperties();
        }
        this.innerComputeVm().withVmSize(vmSize);
        return this;
    }

    /**
     * Get the networkInterfaceId property: Gets the network interface ID of the virtual machine.
     *
     * @return the networkInterfaceId value.
     */
    public String networkInterfaceId() {
        return this.innerComputeVm() == null ? null : this.innerComputeVm().networkInterfaceId();
    }

    /**
     * Set the networkInterfaceId property: Gets the network interface ID of the virtual machine.
     *
     * @param networkInterfaceId the networkInterfaceId value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withNetworkInterfaceId(String networkInterfaceId) {
        if (this.innerComputeVm() == null) {
            this.innerComputeVm = new ComputeVmProperties();
        }
        this.innerComputeVm().withNetworkInterfaceId(networkInterfaceId);
        return this;
    }

    /**
     * Get the osDiskId property: Gets OS disk blob uri for the virtual machine.
     *
     * @return the osDiskId value.
     */
    public String osDiskId() {
        return this.innerComputeVm() == null ? null : this.innerComputeVm().osDiskId();
    }

    /**
     * Set the osDiskId property: Gets OS disk blob uri for the virtual machine.
     *
     * @param osDiskId the osDiskId value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withOsDiskId(String osDiskId) {
        if (this.innerComputeVm() == null) {
            this.innerComputeVm = new ComputeVmProperties();
        }
        this.innerComputeVm().withOsDiskId(osDiskId);
        return this;
    }

    /**
     * Get the dataDiskIds property: Gets data disks blob uri for the virtual machine.
     *
     * @return the dataDiskIds value.
     */
    public List<String> dataDiskIds() {
        return this.innerComputeVm() == null ? null : this.innerComputeVm().dataDiskIds();
    }

    /**
     * Set the dataDiskIds property: Gets data disks blob uri for the virtual machine.
     *
     * @param dataDiskIds the dataDiskIds value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withDataDiskIds(List<String> dataDiskIds) {
        if (this.innerComputeVm() == null) {
            this.innerComputeVm = new ComputeVmProperties();
        }
        this.innerComputeVm().withDataDiskIds(dataDiskIds);
        return this;
    }

    /**
     * Get the dataDisks property: Gets all data disks attached to the virtual machine.
     *
     * @return the dataDisks value.
     */
    public List<ComputeDataDisk> dataDisks() {
        return this.innerComputeVm() == null ? null : this.innerComputeVm().dataDisks();
    }

    /**
     * Set the dataDisks property: Gets all data disks attached to the virtual machine.
     *
     * @param dataDisks the dataDisks value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withDataDisks(List<ComputeDataDisk> dataDisks) {
        if (this.innerComputeVm() == null) {
            this.innerComputeVm = new ComputeVmProperties();
        }
        this.innerComputeVm().withDataDisks(dataDisks);
        return this;
    }

    /**
     * Get the virtualNetworkId property: The resource ID of the virtual network.
     *
     * @return the virtualNetworkId value.
     */
    public String virtualNetworkId() {
        return this.innerNetworkInterface() == null ? null : this.innerNetworkInterface().virtualNetworkId();
    }

    /**
     * Set the virtualNetworkId property: The resource ID of the virtual network.
     *
     * @param virtualNetworkId the virtualNetworkId value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withVirtualNetworkId(String virtualNetworkId) {
        if (this.innerNetworkInterface() == null) {
            this.innerNetworkInterface = new NetworkInterfaceProperties();
        }
        this.innerNetworkInterface().withVirtualNetworkId(virtualNetworkId);
        return this;
    }

    /**
     * Get the subnetId property: The resource ID of the sub net.
     *
     * @return the subnetId value.
     */
    public String subnetId() {
        return this.innerNetworkInterface() == null ? null : this.innerNetworkInterface().subnetId();
    }

    /**
     * Set the subnetId property: The resource ID of the sub net.
     *
     * @param subnetId the subnetId value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withSubnetId(String subnetId) {
        if (this.innerNetworkInterface() == null) {
            this.innerNetworkInterface = new NetworkInterfaceProperties();
        }
        this.innerNetworkInterface().withSubnetId(subnetId);
        return this;
    }

    /**
     * Get the publicIpAddressId property: The resource ID of the public IP address.
     *
     * @return the publicIpAddressId value.
     */
    public String publicIpAddressId() {
        return this.innerNetworkInterface() == null ? null : this.innerNetworkInterface().publicIpAddressId();
    }

    /**
     * Set the publicIpAddressId property: The resource ID of the public IP address.
     *
     * @param publicIpAddressId the publicIpAddressId value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withPublicIpAddressId(String publicIpAddressId) {
        if (this.innerNetworkInterface() == null) {
            this.innerNetworkInterface = new NetworkInterfaceProperties();
        }
        this.innerNetworkInterface().withPublicIpAddressId(publicIpAddressId);
        return this;
    }

    /**
     * Get the publicIpAddress property: The public IP address.
     *
     * @return the publicIpAddress value.
     */
    public String publicIpAddress() {
        return this.innerNetworkInterface() == null ? null : this.innerNetworkInterface().publicIpAddress();
    }

    /**
     * Set the publicIpAddress property: The public IP address.
     *
     * @param publicIpAddress the publicIpAddress value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withPublicIpAddress(String publicIpAddress) {
        if (this.innerNetworkInterface() == null) {
            this.innerNetworkInterface = new NetworkInterfaceProperties();
        }
        this.innerNetworkInterface().withPublicIpAddress(publicIpAddress);
        return this;
    }

    /**
     * Get the privateIpAddress property: The private IP address.
     *
     * @return the privateIpAddress value.
     */
    public String privateIpAddress() {
        return this.innerNetworkInterface() == null ? null : this.innerNetworkInterface().privateIpAddress();
    }

    /**
     * Set the privateIpAddress property: The private IP address.
     *
     * @param privateIpAddress the privateIpAddress value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withPrivateIpAddress(String privateIpAddress) {
        if (this.innerNetworkInterface() == null) {
            this.innerNetworkInterface = new NetworkInterfaceProperties();
        }
        this.innerNetworkInterface().withPrivateIpAddress(privateIpAddress);
        return this;
    }

    /**
     * Get the dnsName property: The DNS name.
     *
     * @return the dnsName value.
     */
    public String dnsName() {
        return this.innerNetworkInterface() == null ? null : this.innerNetworkInterface().dnsName();
    }

    /**
     * Set the dnsName property: The DNS name.
     *
     * @param dnsName the dnsName value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withDnsName(String dnsName) {
        if (this.innerNetworkInterface() == null) {
            this.innerNetworkInterface = new NetworkInterfaceProperties();
        }
        this.innerNetworkInterface().withDnsName(dnsName);
        return this;
    }

    /**
     * Get the rdpAuthority property: The RdpAuthority property is a server DNS host name or IP address followed by the
     * service port number for RDP (Remote Desktop Protocol).
     *
     * @return the rdpAuthority value.
     */
    public String rdpAuthority() {
        return this.innerNetworkInterface() == null ? null : this.innerNetworkInterface().rdpAuthority();
    }

    /**
     * Set the rdpAuthority property: The RdpAuthority property is a server DNS host name or IP address followed by the
     * service port number for RDP (Remote Desktop Protocol).
     *
     * @param rdpAuthority the rdpAuthority value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withRdpAuthority(String rdpAuthority) {
        if (this.innerNetworkInterface() == null) {
            this.innerNetworkInterface = new NetworkInterfaceProperties();
        }
        this.innerNetworkInterface().withRdpAuthority(rdpAuthority);
        return this;
    }

    /**
     * Get the sshAuthority property: The SshAuthority property is a server DNS host name or IP address followed by the
     * service port number for SSH.
     *
     * @return the sshAuthority value.
     */
    public String sshAuthority() {
        return this.innerNetworkInterface() == null ? null : this.innerNetworkInterface().sshAuthority();
    }

    /**
     * Set the sshAuthority property: The SshAuthority property is a server DNS host name or IP address followed by the
     * service port number for SSH.
     *
     * @param sshAuthority the sshAuthority value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withSshAuthority(String sshAuthority) {
        if (this.innerNetworkInterface() == null) {
            this.innerNetworkInterface = new NetworkInterfaceProperties();
        }
        this.innerNetworkInterface().withSshAuthority(sshAuthority);
        return this;
    }

    /**
     * Get the inboundNatRules property: The incoming NAT rules.
     *
     * @return the inboundNatRules value.
     */
    public List<InboundNatRule> inboundNatRules() {
        return this.innerNetworkInterface() == null ? null : this.innerNetworkInterface().inboundNatRules();
    }

    /**
     * Set the inboundNatRules property: The incoming NAT rules.
     *
     * @param inboundNatRules the inboundNatRules value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withInboundNatRules(List<InboundNatRule> inboundNatRules) {
        if (this.innerNetworkInterface() == null) {
            this.innerNetworkInterface = new NetworkInterfaceProperties();
        }
        this.innerNetworkInterface().withInboundNatRules(inboundNatRules);
        return this;
    }

    /**
     * Get the systemData property: The system metadata relating to this resource.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().systemData();
    }

    /**
     * Get the systemDataPropertiesSystemData property: The system metadata relating to this resource.
     *
     * @return the systemDataPropertiesSystemData value.
     */
    public SystemData systemDataPropertiesSystemData() {
        return this.innerApplicableSchedule() == null
            ? null
            : this.innerApplicableSchedule().systemDataPropertiesSystemData();
    }

    /**
     * Get the status property: The status of the schedule (i.e. Enabled, Disabled).
     *
     * @return the status value.
     */
    public EnableStatus status() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().status();
    }

    /**
     * Set the status property: The status of the schedule (i.e. Enabled, Disabled).
     *
     * @param status the status value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withStatus(EnableStatus status) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withStatus(status);
        return this;
    }

    /**
     * Get the taskType property: The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).
     *
     * @return the taskType value.
     */
    public String taskType() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().taskType();
    }

    /**
     * Set the taskType property: The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).
     *
     * @param taskType the taskType value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withTaskType(String taskType) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withTaskType(taskType);
        return this;
    }

    /**
     * Get the timeZoneId property: The time zone ID (e.g. Pacific Standard time).
     *
     * @return the timeZoneId value.
     */
    public String timeZoneId() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().timeZoneId();
    }

    /**
     * Set the timeZoneId property: The time zone ID (e.g. Pacific Standard time).
     *
     * @param timeZoneId the timeZoneId value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withTimeZoneId(String timeZoneId) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withTimeZoneId(timeZoneId);
        return this;
    }

    /**
     * Get the createdDate property: The creation date of the schedule.
     *
     * @return the createdDate value.
     */
    public OffsetDateTime createdDateApplicableScheduleCreatedDate() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().createdDate();
    }

    /**
     * Get the targetResourceId property: The resource ID to which the schedule belongs.
     *
     * @return the targetResourceId value.
     */
    public String targetResourceId() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().targetResourceId();
    }

    /**
     * Set the targetResourceId property: The resource ID to which the schedule belongs.
     *
     * @param targetResourceId the targetResourceId value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withTargetResourceId(String targetResourceId) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withTargetResourceId(targetResourceId);
        return this;
    }

    /**
     * Get the provisioningState property: The provisioning status of the resource.
     *
     * @return the provisioningState value.
     */
    public String provisioningStateApplicableScheduleProvisioningState() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().provisioningState();
    }

    /**
     * Get the uniqueIdentifier property: The unique immutable identifier of a resource (Guid).
     *
     * @return the uniqueIdentifier value.
     */
    public String uniqueIdentifierApplicableScheduleUniqueIdentifier() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().uniqueIdentifier();
    }

    /**
     * Get the weekdays property: The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday,
     * etc.).
     *
     * @return the weekdays value.
     */
    public List<String> weekdays() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().weekdays();
    }

    /**
     * Set the weekdays property: The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday,
     * etc.).
     *
     * @param weekdays the weekdays value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withWeekdays(List<String> weekdays) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withWeekdays(weekdays);
        return this;
    }

    /**
     * Get the time property: The time of the day the schedule will occur.
     *
     * @return the time value.
     */
    public String time() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().time();
    }

    /**
     * Set the time property: The time of the day the schedule will occur.
     *
     * @param time the time value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withTime(String time) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withTime(time);
        return this;
    }

    /**
     * Get the timeDailyRecurrenceTime property: The time of day the schedule will occur.
     *
     * @return the timeDailyRecurrenceTime value.
     */
    public String timeDailyRecurrenceTime() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().timeDailyRecurrenceTime();
    }

    /**
     * Set the timeDailyRecurrenceTime property: The time of day the schedule will occur.
     *
     * @param timeDailyRecurrenceTime the timeDailyRecurrenceTime value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withTimeDailyRecurrenceTime(
        String timeDailyRecurrenceTime) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withTimeDailyRecurrenceTime(timeDailyRecurrenceTime);
        return this;
    }

    /**
     * Get the minute property: Minutes of the hour the schedule will run.
     *
     * @return the minute value.
     */
    public Integer minute() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().minute();
    }

    /**
     * Set the minute property: Minutes of the hour the schedule will run.
     *
     * @param minute the minute value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withMinute(Integer minute) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withMinute(minute);
        return this;
    }

    /**
     * Get the statusNotificationSettingsStatus property: If notifications are enabled for this schedule (i.e. Enabled,
     * Disabled).
     *
     * @return the statusNotificationSettingsStatus value.
     */
    public EnableStatus statusNotificationSettingsStatus() {
        return this.innerApplicableSchedule() == null
            ? null
            : this.innerApplicableSchedule().statusNotificationSettingsStatus();
    }

    /**
     * Set the statusNotificationSettingsStatus property: If notifications are enabled for this schedule (i.e. Enabled,
     * Disabled).
     *
     * @param statusNotificationSettingsStatus the statusNotificationSettingsStatus value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withStatusNotificationSettingsStatus(
        EnableStatus statusNotificationSettingsStatus) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withStatusNotificationSettingsStatus(statusNotificationSettingsStatus);
        return this;
    }

    /**
     * Get the timeInMinutes property: Time in minutes before event at which notification will be sent.
     *
     * @return the timeInMinutes value.
     */
    public Integer timeInMinutes() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().timeInMinutes();
    }

    /**
     * Set the timeInMinutes property: Time in minutes before event at which notification will be sent.
     *
     * @param timeInMinutes the timeInMinutes value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withTimeInMinutes(Integer timeInMinutes) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withTimeInMinutes(timeInMinutes);
        return this;
    }

    /**
     * Get the webhookUrl property: The webhook URL to which the notification will be sent.
     *
     * @return the webhookUrl value.
     */
    public String webhookUrl() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().webhookUrl();
    }

    /**
     * Set the webhookUrl property: The webhook URL to which the notification will be sent.
     *
     * @param webhookUrl the webhookUrl value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withWebhookUrl(String webhookUrl) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withWebhookUrl(webhookUrl);
        return this;
    }

    /**
     * Get the emailRecipient property: The email recipient to send notifications to (can be a list of semi-colon
     * separated email addresses).
     *
     * @return the emailRecipient value.
     */
    public String emailRecipient() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().emailRecipient();
    }

    /**
     * Set the emailRecipient property: The email recipient to send notifications to (can be a list of semi-colon
     * separated email addresses).
     *
     * @param emailRecipient the emailRecipient value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withEmailRecipient(String emailRecipient) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withEmailRecipient(emailRecipient);
        return this;
    }

    /**
     * Get the notificationLocale property: The locale to use when sending a notification (fallback for unsupported
     * languages is EN).
     *
     * @return the notificationLocale value.
     */
    public String notificationLocale() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().notificationLocale();
    }

    /**
     * Set the notificationLocale property: The locale to use when sending a notification (fallback for unsupported
     * languages is EN).
     *
     * @param notificationLocale the notificationLocale value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withNotificationLocale(String notificationLocale) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withNotificationLocale(notificationLocale);
        return this;
    }

    /**
     * Get the idPropertiesId property: Fully qualified resource ID for the resource. Ex -
     * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
     *
     * @return the idPropertiesId value.
     */
    public String idPropertiesId() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().idPropertiesId();
    }

    /**
     * Get the namePropertiesName property: The name of the resource.
     *
     * @return the namePropertiesName value.
     */
    public String namePropertiesName() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().namePropertiesName();
    }

    /**
     * Get the typePropertiesType property: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     * "Microsoft.Storage/storageAccounts".
     *
     * @return the typePropertiesType value.
     */
    public String typePropertiesType() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().typePropertiesType();
    }

    /**
     * Get the tagsPropertiesTags property: Resource tags.
     *
     * @return the tagsPropertiesTags value.
     */
    public Map<String, String> tagsPropertiesTags() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().tagsPropertiesTags();
    }

    /**
     * Set the tagsPropertiesTags property: Resource tags.
     *
     * @param tagsPropertiesTags the tagsPropertiesTags value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withTagsPropertiesTags(
        Map<String, String> tagsPropertiesTags) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withTagsPropertiesTags(tagsPropertiesTags);
        return this;
    }

    /**
     * Get the locationPropertiesLocation property: The geo-location where the resource lives.
     *
     * @return the locationPropertiesLocation value.
     */
    public String locationPropertiesLocation() {
        return this.innerApplicableSchedule() == null
            ? null
            : this.innerApplicableSchedule().locationPropertiesLocation();
    }

    /**
     * Set the locationPropertiesLocation property: The geo-location where the resource lives.
     *
     * @param locationPropertiesLocation the locationPropertiesLocation value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withLocationPropertiesLocation(
        String locationPropertiesLocation) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withLocationPropertiesLocation(locationPropertiesLocation);
        return this;
    }

    /**
     * Get the systemDataLabVmsStartupSystemData property: The system metadata relating to this resource.
     *
     * @return the systemDataLabVmsStartupSystemData value.
     */
    public SystemData systemDataLabVmsStartupSystemData() {
        return this.innerApplicableSchedule() == null
            ? null
            : this.innerApplicableSchedule().systemDataLabVmsStartupSystemData();
    }

    /**
     * Get the statusLabVmsStartupStatus property: The status of the schedule (i.e. Enabled, Disabled).
     *
     * @return the statusLabVmsStartupStatus value.
     */
    public EnableStatus statusLabVmsStartupStatus() {
        return this.innerApplicableSchedule() == null
            ? null
            : this.innerApplicableSchedule().statusLabVmsStartupStatus();
    }

    /**
     * Set the statusLabVmsStartupStatus property: The status of the schedule (i.e. Enabled, Disabled).
     *
     * @param statusLabVmsStartupStatus the statusLabVmsStartupStatus value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withStatusLabVmsStartupStatus(
        EnableStatus statusLabVmsStartupStatus) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withStatusLabVmsStartupStatus(statusLabVmsStartupStatus);
        return this;
    }

    /**
     * Get the taskTypeLabVmsStartupTaskType property: The task type of the schedule (e.g. LabVmsShutdownTask,
     * LabVmAutoStart).
     *
     * @return the taskTypeLabVmsStartupTaskType value.
     */
    public String taskTypeLabVmsStartupTaskType() {
        return this.innerApplicableSchedule() == null
            ? null
            : this.innerApplicableSchedule().taskTypeLabVmsStartupTaskType();
    }

    /**
     * Set the taskTypeLabVmsStartupTaskType property: The task type of the schedule (e.g. LabVmsShutdownTask,
     * LabVmAutoStart).
     *
     * @param taskTypeLabVmsStartupTaskType the taskTypeLabVmsStartupTaskType value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withTaskTypeLabVmsStartupTaskType(
        String taskTypeLabVmsStartupTaskType) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withTaskTypeLabVmsStartupTaskType(taskTypeLabVmsStartupTaskType);
        return this;
    }

    /**
     * Get the timeZoneIdLabVmsStartupTimeZoneId property: The time zone ID (e.g. Pacific Standard time).
     *
     * @return the timeZoneIdLabVmsStartupTimeZoneId value.
     */
    public String timeZoneIdLabVmsStartupTimeZoneId() {
        return this.innerApplicableSchedule() == null
            ? null
            : this.innerApplicableSchedule().timeZoneIdLabVmsStartupTimeZoneId();
    }

    /**
     * Set the timeZoneIdLabVmsStartupTimeZoneId property: The time zone ID (e.g. Pacific Standard time).
     *
     * @param timeZoneIdLabVmsStartupTimeZoneId the timeZoneIdLabVmsStartupTimeZoneId value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withTimeZoneIdLabVmsStartupTimeZoneId(
        String timeZoneIdLabVmsStartupTimeZoneId) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withTimeZoneIdLabVmsStartupTimeZoneId(timeZoneIdLabVmsStartupTimeZoneId);
        return this;
    }

    /**
     * Get the createdDateLabVmsStartupCreatedDate property: The creation date of the schedule.
     *
     * @return the createdDateLabVmsStartupCreatedDate value.
     */
    public OffsetDateTime createdDateLabVmsStartupCreatedDate() {
        return this.innerApplicableSchedule() == null
            ? null
            : this.innerApplicableSchedule().createdDateLabVmsStartupCreatedDate();
    }

    /**
     * Get the targetResourceIdLabVmsStartupTargetResourceId property: The resource ID to which the schedule belongs.
     *
     * @return the targetResourceIdLabVmsStartupTargetResourceId value.
     */
    public String targetResourceIdLabVmsStartupTargetResourceId() {
        return this.innerApplicableSchedule() == null
            ? null
            : this.innerApplicableSchedule().targetResourceIdLabVmsStartupTargetResourceId();
    }

    /**
     * Set the targetResourceIdLabVmsStartupTargetResourceId property: The resource ID to which the schedule belongs.
     *
     * @param targetResourceIdLabVmsStartupTargetResourceId the targetResourceIdLabVmsStartupTargetResourceId value to
     *     set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withTargetResourceIdLabVmsStartupTargetResourceId(
        String targetResourceIdLabVmsStartupTargetResourceId) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this
            .innerApplicableSchedule()
            .withTargetResourceIdLabVmsStartupTargetResourceId(targetResourceIdLabVmsStartupTargetResourceId);
        return this;
    }

    /**
     * Get the provisioningStateLabVmsStartupProvisioningState property: The provisioning status of the resource.
     *
     * @return the provisioningStateLabVmsStartupProvisioningState value.
     */
    public String provisioningStateLabVmsStartupProvisioningState() {
        return this.innerApplicableSchedule() == null
            ? null
            : this.innerApplicableSchedule().provisioningStateLabVmsStartupProvisioningState();
    }

    /**
     * Get the uniqueIdentifierLabVmsStartupUniqueIdentifier property: The unique immutable identifier of a resource
     * (Guid).
     *
     * @return the uniqueIdentifierLabVmsStartupUniqueIdentifier value.
     */
    public String uniqueIdentifierLabVmsStartupUniqueIdentifier() {
        return this.innerApplicableSchedule() == null
            ? null
            : this.innerApplicableSchedule().uniqueIdentifierLabVmsStartupUniqueIdentifier();
    }

    /**
     * Get the weekdaysLabVmsStartupWeekdays property: The days of the week for which the schedule is set (e.g. Sunday,
     * Monday, Tuesday, etc.).
     *
     * @return the weekdaysLabVmsStartupWeekdays value.
     */
    public List<String> weekdaysLabVmsStartupWeekdays() {
        return this.innerApplicableSchedule() == null
            ? null
            : this.innerApplicableSchedule().weekdaysLabVmsStartupWeekdays();
    }

    /**
     * Set the weekdaysLabVmsStartupWeekdays property: The days of the week for which the schedule is set (e.g. Sunday,
     * Monday, Tuesday, etc.).
     *
     * @param weekdaysLabVmsStartupWeekdays the weekdaysLabVmsStartupWeekdays value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withWeekdaysLabVmsStartupWeekdays(
        List<String> weekdaysLabVmsStartupWeekdays) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withWeekdaysLabVmsStartupWeekdays(weekdaysLabVmsStartupWeekdays);
        return this;
    }

    /**
     * Get the timeLabVmsStartupTime property: The time of the day the schedule will occur.
     *
     * @return the timeLabVmsStartupTime value.
     */
    public String timeLabVmsStartupTime() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().timeLabVmsStartupTime();
    }

    /**
     * Set the timeLabVmsStartupTime property: The time of the day the schedule will occur.
     *
     * @param timeLabVmsStartupTime the timeLabVmsStartupTime value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withTimeLabVmsStartupTime(String timeLabVmsStartupTime) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withTimeLabVmsStartupTime(timeLabVmsStartupTime);
        return this;
    }

    /**
     * Get the timeDailyRecurrenceTimeLabVmsStartupTimeDailyRecurrenceTime property: The time of day the schedule will
     * occur.
     *
     * @return the timeDailyRecurrenceTimeLabVmsStartupTimeDailyRecurrenceTime value.
     */
    public String timeDailyRecurrenceTimeLabVmsStartupTimeDailyRecurrenceTime() {
        return this.innerApplicableSchedule() == null
            ? null
            : this.innerApplicableSchedule().timeDailyRecurrenceTimeLabVmsStartupTimeDailyRecurrenceTime();
    }

    /**
     * Set the timeDailyRecurrenceTimeLabVmsStartupTimeDailyRecurrenceTime property: The time of day the schedule will
     * occur.
     *
     * @param timeDailyRecurrenceTimeLabVmsStartupTimeDailyRecurrenceTime the
     *     timeDailyRecurrenceTimeLabVmsStartupTimeDailyRecurrenceTime value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner
        withTimeDailyRecurrenceTimeLabVmsStartupTimeDailyRecurrenceTime(
            String timeDailyRecurrenceTimeLabVmsStartupTimeDailyRecurrenceTime) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this
            .innerApplicableSchedule()
            .withTimeDailyRecurrenceTimeLabVmsStartupTimeDailyRecurrenceTime(
                timeDailyRecurrenceTimeLabVmsStartupTimeDailyRecurrenceTime);
        return this;
    }

    /**
     * Get the minuteLabVmsStartupMinute property: Minutes of the hour the schedule will run.
     *
     * @return the minuteLabVmsStartupMinute value.
     */
    public Integer minuteLabVmsStartupMinute() {
        return this.innerApplicableSchedule() == null
            ? null
            : this.innerApplicableSchedule().minuteLabVmsStartupMinute();
    }

    /**
     * Set the minuteLabVmsStartupMinute property: Minutes of the hour the schedule will run.
     *
     * @param minuteLabVmsStartupMinute the minuteLabVmsStartupMinute value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withMinuteLabVmsStartupMinute(
        Integer minuteLabVmsStartupMinute) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withMinuteLabVmsStartupMinute(minuteLabVmsStartupMinute);
        return this;
    }

    /**
     * Get the statusNotificationSettingsStatusLabVmsStartupStatusNotificationSettingsStatus property: If notifications
     * are enabled for this schedule (i.e. Enabled, Disabled).
     *
     * @return the statusNotificationSettingsStatusLabVmsStartupStatusNotificationSettingsStatus value.
     */
    public EnableStatus statusNotificationSettingsStatusLabVmsStartupStatusNotificationSettingsStatus() {
        return this.innerApplicableSchedule() == null
            ? null
            : this
                .innerApplicableSchedule()
                .statusNotificationSettingsStatusLabVmsStartupStatusNotificationSettingsStatus();
    }

    /**
     * Set the statusNotificationSettingsStatusLabVmsStartupStatusNotificationSettingsStatus property: If notifications
     * are enabled for this schedule (i.e. Enabled, Disabled).
     *
     * @param statusNotificationSettingsStatusLabVmsStartupStatusNotificationSettingsStatus the
     *     statusNotificationSettingsStatusLabVmsStartupStatusNotificationSettingsStatus value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner
        withStatusNotificationSettingsStatusLabVmsStartupStatusNotificationSettingsStatus(
            EnableStatus statusNotificationSettingsStatusLabVmsStartupStatusNotificationSettingsStatus) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this
            .innerApplicableSchedule()
            .withStatusNotificationSettingsStatusLabVmsStartupStatusNotificationSettingsStatus(
                statusNotificationSettingsStatusLabVmsStartupStatusNotificationSettingsStatus);
        return this;
    }

    /**
     * Get the timeInMinutesLabVmsStartupTimeInMinutes property: Time in minutes before event at which notification will
     * be sent.
     *
     * @return the timeInMinutesLabVmsStartupTimeInMinutes value.
     */
    public Integer timeInMinutesLabVmsStartupTimeInMinutes() {
        return this.innerApplicableSchedule() == null
            ? null
            : this.innerApplicableSchedule().timeInMinutesLabVmsStartupTimeInMinutes();
    }

    /**
     * Set the timeInMinutesLabVmsStartupTimeInMinutes property: Time in minutes before event at which notification will
     * be sent.
     *
     * @param timeInMinutesLabVmsStartupTimeInMinutes the timeInMinutesLabVmsStartupTimeInMinutes value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withTimeInMinutesLabVmsStartupTimeInMinutes(
        Integer timeInMinutesLabVmsStartupTimeInMinutes) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this
            .innerApplicableSchedule()
            .withTimeInMinutesLabVmsStartupTimeInMinutes(timeInMinutesLabVmsStartupTimeInMinutes);
        return this;
    }

    /**
     * Get the webhookUrlLabVmsStartupWebhookUrl property: The webhook URL to which the notification will be sent.
     *
     * @return the webhookUrlLabVmsStartupWebhookUrl value.
     */
    public String webhookUrlLabVmsStartupWebhookUrl() {
        return this.innerApplicableSchedule() == null
            ? null
            : this.innerApplicableSchedule().webhookUrlLabVmsStartupWebhookUrl();
    }

    /**
     * Set the webhookUrlLabVmsStartupWebhookUrl property: The webhook URL to which the notification will be sent.
     *
     * @param webhookUrlLabVmsStartupWebhookUrl the webhookUrlLabVmsStartupWebhookUrl value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withWebhookUrlLabVmsStartupWebhookUrl(
        String webhookUrlLabVmsStartupWebhookUrl) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withWebhookUrlLabVmsStartupWebhookUrl(webhookUrlLabVmsStartupWebhookUrl);
        return this;
    }

    /**
     * Get the emailRecipientLabVmsStartupEmailRecipient property: The email recipient to send notifications to (can be
     * a list of semi-colon separated email addresses).
     *
     * @return the emailRecipientLabVmsStartupEmailRecipient value.
     */
    public String emailRecipientLabVmsStartupEmailRecipient() {
        return this.innerApplicableSchedule() == null
            ? null
            : this.innerApplicableSchedule().emailRecipientLabVmsStartupEmailRecipient();
    }

    /**
     * Set the emailRecipientLabVmsStartupEmailRecipient property: The email recipient to send notifications to (can be
     * a list of semi-colon separated email addresses).
     *
     * @param emailRecipientLabVmsStartupEmailRecipient the emailRecipientLabVmsStartupEmailRecipient value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withEmailRecipientLabVmsStartupEmailRecipient(
        String emailRecipientLabVmsStartupEmailRecipient) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this
            .innerApplicableSchedule()
            .withEmailRecipientLabVmsStartupEmailRecipient(emailRecipientLabVmsStartupEmailRecipient);
        return this;
    }

    /**
     * Get the notificationLocaleLabVmsStartupNotificationLocale property: The locale to use when sending a notification
     * (fallback for unsupported languages is EN).
     *
     * @return the notificationLocaleLabVmsStartupNotificationLocale value.
     */
    public String notificationLocaleLabVmsStartupNotificationLocale() {
        return this.innerApplicableSchedule() == null
            ? null
            : this.innerApplicableSchedule().notificationLocaleLabVmsStartupNotificationLocale();
    }

    /**
     * Set the notificationLocaleLabVmsStartupNotificationLocale property: The locale to use when sending a notification
     * (fallback for unsupported languages is EN).
     *
     * @param notificationLocaleLabVmsStartupNotificationLocale the notificationLocaleLabVmsStartupNotificationLocale
     *     value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withNotificationLocaleLabVmsStartupNotificationLocale(
        String notificationLocaleLabVmsStartupNotificationLocale) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this
            .innerApplicableSchedule()
            .withNotificationLocaleLabVmsStartupNotificationLocale(notificationLocaleLabVmsStartupNotificationLocale);
        return this;
    }

    /**
     * Get the idLabVmsStartupId property: Fully qualified resource ID for the resource. Ex -
     * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
     *
     * @return the idLabVmsStartupId value.
     */
    public String idLabVmsStartupId() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().idLabVmsStartupId();
    }

    /**
     * Get the nameLabVmsStartupName property: The name of the resource.
     *
     * @return the nameLabVmsStartupName value.
     */
    public String nameLabVmsStartupName() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().nameLabVmsStartupName();
    }

    /**
     * Get the typeLabVmsStartupType property: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     * "Microsoft.Storage/storageAccounts".
     *
     * @return the typeLabVmsStartupType value.
     */
    public String typeLabVmsStartupType() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().typeLabVmsStartupType();
    }

    /**
     * Get the tagsLabVmsStartupTags property: Resource tags.
     *
     * @return the tagsLabVmsStartupTags value.
     */
    public Map<String, String> tagsLabVmsStartupTags() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().tagsLabVmsStartupTags();
    }

    /**
     * Set the tagsLabVmsStartupTags property: Resource tags.
     *
     * @param tagsLabVmsStartupTags the tagsLabVmsStartupTags value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withTagsLabVmsStartupTags(
        Map<String, String> tagsLabVmsStartupTags) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withTagsLabVmsStartupTags(tagsLabVmsStartupTags);
        return this;
    }

    /**
     * Get the locationLabVmsStartupLocation property: The geo-location where the resource lives.
     *
     * @return the locationLabVmsStartupLocation value.
     */
    public String locationLabVmsStartupLocation() {
        return this.innerApplicableSchedule() == null
            ? null
            : this.innerApplicableSchedule().locationLabVmsStartupLocation();
    }

    /**
     * Set the locationLabVmsStartupLocation property: The geo-location where the resource lives.
     *
     * @param locationLabVmsStartupLocation the locationLabVmsStartupLocation value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withLocationLabVmsStartupLocation(
        String locationLabVmsStartupLocation) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withLocationLabVmsStartupLocation(locationLabVmsStartupLocation);
        return this;
    }

    /**
     * Get the id property: Fully qualified resource ID for the resource. Ex -
     * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
     *
     * @return the id value.
     */
    public String id() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().id();
    }

    /**
     * Get the name property: The name of the resource.
     *
     * @return the name value.
     */
    public String name() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().name();
    }

    /**
     * Get the type property: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     * "Microsoft.Storage/storageAccounts".
     *
     * @return the type value.
     */
    public String type() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().type();
    }

    /**
     * Get the tags property: Resource tags.
     *
     * @return the tags value.
     */
    public Map<String, String> tags() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().tags();
    }

    /**
     * Set the tags property: Resource tags.
     *
     * @param tags the tags value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withTags(Map<String, String> tags) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withTags(tags);
        return this;
    }

    /**
     * Get the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    public String location() {
        return this.innerApplicableSchedule() == null ? null : this.innerApplicableSchedule().location();
    }

    /**
     * Set the location property: The geo-location where the resource lives.
     *
     * @param location the location value to set.
     * @return the LabVirtualMachineCreationParameterPropertiesInner object itself.
     */
    public LabVirtualMachineCreationParameterPropertiesInner withLocation(String location) {
        if (this.innerApplicableSchedule() == null) {
            this.innerApplicableSchedule = new ApplicableScheduleInner();
        }
        this.innerApplicableSchedule().withLocation(location);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerBulkCreationParameters() != null) {
            innerBulkCreationParameters().validate();
        }
        if (artifacts() != null) {
            artifacts().forEach(e -> e.validate());
        }
        if (innerArtifactDeploymentStatus() != null) {
            innerArtifactDeploymentStatus().validate();
        }
        if (innerGalleryImageReference() != null) {
            innerGalleryImageReference().validate();
        }
        if (innerComputeVm() != null) {
            innerComputeVm().validate();
        }
        if (innerNetworkInterface() != null) {
            innerNetworkInterface().validate();
        }
        if (innerApplicableSchedule() != null) {
            innerApplicableSchedule().validate();
        }
        if (dataDiskParameters() != null) {
            dataDiskParameters().forEach(e -> e.validate());
        }
        if (scheduleParameters() != null) {
            scheduleParameters().forEach(e -> e.validate());
        }
    }
}
