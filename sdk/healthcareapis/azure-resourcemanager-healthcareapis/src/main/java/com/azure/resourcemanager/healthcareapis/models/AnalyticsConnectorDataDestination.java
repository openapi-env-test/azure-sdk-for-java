// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.healthcareapis.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.HashMap;
import java.util.Map;

/** Data destination configuration for Analytics Connector. */
@Fluent
public class AnalyticsConnectorDataDestination {
    /*
     * Type of data destination.
     */
    @JsonProperty(value = "type")
    private AnalyticsConnectorDataDestinationType type;

    /*
     * Name of data destination.
     */
    @JsonProperty(value = "name")
    private String name;

    /*
     * Data destination configuration for Analytics Connector.
     */
    @JsonIgnore private Map<String, Object> additionalProperties;

    /**
     * Get the type property: Type of data destination.
     *
     * @return the type value.
     */
    public AnalyticsConnectorDataDestinationType type() {
        return this.type;
    }

    /**
     * Set the type property: Type of data destination.
     *
     * @param type the type value to set.
     * @return the AnalyticsConnectorDataDestination object itself.
     */
    public AnalyticsConnectorDataDestination withType(AnalyticsConnectorDataDestinationType type) {
        this.type = type;
        return this;
    }

    /**
     * Get the name property: Name of data destination.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: Name of data destination.
     *
     * @param name the name value to set.
     * @return the AnalyticsConnectorDataDestination object itself.
     */
    public AnalyticsConnectorDataDestination withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the additionalProperties property: Data destination configuration for Analytics Connector.
     *
     * @return the additionalProperties value.
     */
    @JsonAnyGetter
    public Map<String, Object> additionalProperties() {
        return this.additionalProperties;
    }

    /**
     * Set the additionalProperties property: Data destination configuration for Analytics Connector.
     *
     * @param additionalProperties the additionalProperties value to set.
     * @return the AnalyticsConnectorDataDestination object itself.
     */
    public AnalyticsConnectorDataDestination withAdditionalProperties(Map<String, Object> additionalProperties) {
        this.additionalProperties = additionalProperties;
        return this;
    }

    @JsonAnySetter
    void withAdditionalProperties(String key, Object value) {
        if (additionalProperties == null) {
            additionalProperties = new HashMap<>();
        }
        additionalProperties.put(key, value);
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
