// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.healthcareapis.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The FHIR service data source for Analytics Connector. */
@Fluent
public final class AnalyticsConnectorFhirServiceDataSource extends AnalyticsConnectorDataSource {
    /*
     * The URL of FHIR service.
     */
    @JsonProperty(value = "url", required = true)
    private String url;

    /*
     * The kind of FHIR Service.
     */
    @JsonProperty(value = "kind", required = true)
    private FhirServiceVersion kind;

    /**
     * Get the url property: The URL of FHIR service.
     *
     * @return the url value.
     */
    public String url() {
        return this.url;
    }

    /**
     * Set the url property: The URL of FHIR service.
     *
     * @param url the url value to set.
     * @return the AnalyticsConnectorFhirServiceDataSource object itself.
     */
    public AnalyticsConnectorFhirServiceDataSource withUrl(String url) {
        this.url = url;
        return this;
    }

    /**
     * Get the kind property: The kind of FHIR Service.
     *
     * @return the kind value.
     */
    public FhirServiceVersion kind() {
        return this.kind;
    }

    /**
     * Set the kind property: The kind of FHIR Service.
     *
     * @param kind the kind value to set.
     * @return the AnalyticsConnectorFhirServiceDataSource object itself.
     */
    public AnalyticsConnectorFhirServiceDataSource withKind(FhirServiceVersion kind) {
        this.kind = kind;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AnalyticsConnectorFhirServiceDataSource withType(AnalyticsConnectorDataSourceType type) {
        super.withType(type);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (url() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property url in model AnalyticsConnectorFhirServiceDataSource"));
        }
        if (kind() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property kind in model AnalyticsConnectorFhirServiceDataSource"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(AnalyticsConnectorFhirServiceDataSource.class);
}
