// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.healthcareapis.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** FHIR Service data mapping configuration for Analytics Connector. */
@Fluent
public final class AnalyticsConnectorFhirToParquetMapping extends AnalyticsConnectorMapping {
    /*
     * Artifact reference for filter configurations.
     */
    @JsonProperty(value = "filterConfigurationReference")
    private String filterConfigurationReference;

    /*
     * Artifact reference for extension schema.
     */
    @JsonProperty(value = "extensionSchemaReference")
    private String extensionSchemaReference;

    /*
     * Artifact reference for data transformation schema.
     */
    @JsonProperty(value = "transformationSchemaReference")
    private String transformationSchemaReference;

    /*
     * Artifact reference for data anonymization schema.
     */
    @JsonProperty(value = "anonymizationSchemaReference")
    private String anonymizationSchemaReference;

    /**
     * Get the filterConfigurationReference property: Artifact reference for filter configurations.
     *
     * @return the filterConfigurationReference value.
     */
    public String filterConfigurationReference() {
        return this.filterConfigurationReference;
    }

    /**
     * Set the filterConfigurationReference property: Artifact reference for filter configurations.
     *
     * @param filterConfigurationReference the filterConfigurationReference value to set.
     * @return the AnalyticsConnectorFhirToParquetMapping object itself.
     */
    public AnalyticsConnectorFhirToParquetMapping withFilterConfigurationReference(
        String filterConfigurationReference) {
        this.filterConfigurationReference = filterConfigurationReference;
        return this;
    }

    /**
     * Get the extensionSchemaReference property: Artifact reference for extension schema.
     *
     * @return the extensionSchemaReference value.
     */
    public String extensionSchemaReference() {
        return this.extensionSchemaReference;
    }

    /**
     * Set the extensionSchemaReference property: Artifact reference for extension schema.
     *
     * @param extensionSchemaReference the extensionSchemaReference value to set.
     * @return the AnalyticsConnectorFhirToParquetMapping object itself.
     */
    public AnalyticsConnectorFhirToParquetMapping withExtensionSchemaReference(String extensionSchemaReference) {
        this.extensionSchemaReference = extensionSchemaReference;
        return this;
    }

    /**
     * Get the transformationSchemaReference property: Artifact reference for data transformation schema.
     *
     * @return the transformationSchemaReference value.
     */
    public String transformationSchemaReference() {
        return this.transformationSchemaReference;
    }

    /**
     * Set the transformationSchemaReference property: Artifact reference for data transformation schema.
     *
     * @param transformationSchemaReference the transformationSchemaReference value to set.
     * @return the AnalyticsConnectorFhirToParquetMapping object itself.
     */
    public AnalyticsConnectorFhirToParquetMapping withTransformationSchemaReference(
        String transformationSchemaReference) {
        this.transformationSchemaReference = transformationSchemaReference;
        return this;
    }

    /**
     * Get the anonymizationSchemaReference property: Artifact reference for data anonymization schema.
     *
     * @return the anonymizationSchemaReference value.
     */
    public String anonymizationSchemaReference() {
        return this.anonymizationSchemaReference;
    }

    /**
     * Set the anonymizationSchemaReference property: Artifact reference for data anonymization schema.
     *
     * @param anonymizationSchemaReference the anonymizationSchemaReference value to set.
     * @return the AnalyticsConnectorFhirToParquetMapping object itself.
     */
    public AnalyticsConnectorFhirToParquetMapping withAnonymizationSchemaReference(
        String anonymizationSchemaReference) {
        this.anonymizationSchemaReference = anonymizationSchemaReference;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AnalyticsConnectorFhirToParquetMapping withType(AnalyticsConnectorMappingType type) {
        super.withType(type);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
