// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.healthcareapis.implementation;

import com.azure.core.management.Region;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.healthcareapis.fluent.models.AnalyticsConnectorInner;
import com.azure.resourcemanager.healthcareapis.models.AnalyticsConnector;
import com.azure.resourcemanager.healthcareapis.models.AnalyticsConnectorDataDestination;
import com.azure.resourcemanager.healthcareapis.models.AnalyticsConnectorDataSource;
import com.azure.resourcemanager.healthcareapis.models.AnalyticsConnectorMapping;
import com.azure.resourcemanager.healthcareapis.models.ProvisioningState;
import com.azure.resourcemanager.healthcareapis.models.ServiceManagedIdentityIdentity;
import java.util.Collections;
import java.util.Map;

public final class AnalyticsConnectorImpl
    implements AnalyticsConnector, AnalyticsConnector.Definition, AnalyticsConnector.Update {
    private AnalyticsConnectorInner innerObject;

    private final com.azure.resourcemanager.healthcareapis.HealthcareApisManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String etag() {
        return this.innerModel().etag();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public ServiceManagedIdentityIdentity identity() {
        return this.innerModel().identity();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public AnalyticsConnectorDataSource dataSourceConfiguration() {
        return this.innerModel().dataSourceConfiguration();
    }

    public AnalyticsConnectorMapping dataMappingConfiguration() {
        return this.innerModel().dataMappingConfiguration();
    }

    public AnalyticsConnectorDataDestination dataDestinationConfiguration() {
        return this.innerModel().dataDestinationConfiguration();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public AnalyticsConnectorInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.healthcareapis.HealthcareApisManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String workspaceName;

    private String analyticsConnectorName;

    public AnalyticsConnectorImpl withExistingWorkspace(String resourceGroupName, String workspaceName) {
        this.resourceGroupName = resourceGroupName;
        this.workspaceName = workspaceName;
        return this;
    }

    public AnalyticsConnector create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAnalyticsConnectors()
                .createOrUpdate(
                    resourceGroupName, workspaceName, analyticsConnectorName, this.innerModel(), Context.NONE);
        return this;
    }

    public AnalyticsConnector create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAnalyticsConnectors()
                .createOrUpdate(resourceGroupName, workspaceName, analyticsConnectorName, this.innerModel(), context);
        return this;
    }

    AnalyticsConnectorImpl(String name, com.azure.resourcemanager.healthcareapis.HealthcareApisManager serviceManager) {
        this.innerObject = new AnalyticsConnectorInner();
        this.serviceManager = serviceManager;
        this.analyticsConnectorName = name;
    }

    public AnalyticsConnectorImpl update() {
        return this;
    }

    public AnalyticsConnector apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAnalyticsConnectors()
                .createOrUpdate(
                    resourceGroupName, workspaceName, analyticsConnectorName, this.innerModel(), Context.NONE);
        return this;
    }

    public AnalyticsConnector apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAnalyticsConnectors()
                .createOrUpdate(resourceGroupName, workspaceName, analyticsConnectorName, this.innerModel(), context);
        return this;
    }

    AnalyticsConnectorImpl(
        AnalyticsConnectorInner innerObject,
        com.azure.resourcemanager.healthcareapis.HealthcareApisManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.workspaceName = Utils.getValueFromIdByName(innerObject.id(), "workspaces");
        this.analyticsConnectorName = Utils.getValueFromIdByName(innerObject.id(), "analyticsconnectors");
    }

    public AnalyticsConnector refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAnalyticsConnectors()
                .getWithResponse(resourceGroupName, workspaceName, analyticsConnectorName, Context.NONE)
                .getValue();
        return this;
    }

    public AnalyticsConnector refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getAnalyticsConnectors()
                .getWithResponse(resourceGroupName, workspaceName, analyticsConnectorName, context)
                .getValue();
        return this;
    }

    public AnalyticsConnectorImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public AnalyticsConnectorImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public AnalyticsConnectorImpl withTags(Map<String, String> tags) {
        this.innerModel().withTags(tags);
        return this;
    }

    public AnalyticsConnectorImpl withEtag(String etag) {
        this.innerModel().withEtag(etag);
        return this;
    }

    public AnalyticsConnectorImpl withIdentity(ServiceManagedIdentityIdentity identity) {
        this.innerModel().withIdentity(identity);
        return this;
    }

    public AnalyticsConnectorImpl withDataSourceConfiguration(AnalyticsConnectorDataSource dataSourceConfiguration) {
        this.innerModel().withDataSourceConfiguration(dataSourceConfiguration);
        return this;
    }

    public AnalyticsConnectorImpl withDataMappingConfiguration(AnalyticsConnectorMapping dataMappingConfiguration) {
        this.innerModel().withDataMappingConfiguration(dataMappingConfiguration);
        return this;
    }

    public AnalyticsConnectorImpl withDataDestinationConfiguration(
        AnalyticsConnectorDataDestination dataDestinationConfiguration) {
        this.innerModel().withDataDestinationConfiguration(dataDestinationConfiguration);
        return this;
    }
}
