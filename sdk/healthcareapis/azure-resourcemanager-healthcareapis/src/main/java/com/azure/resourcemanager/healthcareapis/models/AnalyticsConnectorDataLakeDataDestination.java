// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.healthcareapis.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The Data Lake data destination for Analytics Connector. */
@Fluent
public final class AnalyticsConnectorDataLakeDataDestination extends AnalyticsConnectorDataDestination {
    /*
     * The name for the Data Lake.
     */
    @JsonProperty(value = "dataLakeName", required = true)
    private String dataLakeName;

    /**
     * Get the dataLakeName property: The name for the Data Lake.
     *
     * @return the dataLakeName value.
     */
    public String dataLakeName() {
        return this.dataLakeName;
    }

    /**
     * Set the dataLakeName property: The name for the Data Lake.
     *
     * @param dataLakeName the dataLakeName value to set.
     * @return the AnalyticsConnectorDataLakeDataDestination object itself.
     */
    public AnalyticsConnectorDataLakeDataDestination withDataLakeName(String dataLakeName) {
        this.dataLakeName = dataLakeName;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AnalyticsConnectorDataLakeDataDestination withType(AnalyticsConnectorDataDestinationType type) {
        super.withType(type);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AnalyticsConnectorDataLakeDataDestination withName(String name) {
        super.withName(name);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (dataLakeName() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property dataLakeName in model AnalyticsConnectorDataLakeDataDestination"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(AnalyticsConnectorDataLakeDataDestination.class);
}
