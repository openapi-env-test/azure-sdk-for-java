// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.healthcareapis.generated;

import com.azure.resourcemanager.healthcareapis.models.AnalyticsConnectorDataDestination;
import com.azure.resourcemanager.healthcareapis.models.AnalyticsConnectorDataDestinationType;
import com.azure.resourcemanager.healthcareapis.models.AnalyticsConnectorDataSource;
import com.azure.resourcemanager.healthcareapis.models.AnalyticsConnectorDataSourceType;
import com.azure.resourcemanager.healthcareapis.models.AnalyticsConnectorMapping;
import com.azure.resourcemanager.healthcareapis.models.AnalyticsConnectorMappingType;
import java.util.HashMap;
import java.util.Map;

/** Samples for AnalyticsConnectors CreateOrUpdate. */
public final class AnalyticsConnectorsCreateOrUpdateSamples {
    /*
     * x-ms-original-file: specification/healthcareapis/resource-manager/Microsoft.HealthcareApis/preview/2022-10-01-preview/examples/analyticsconnectors/AnalyticsConnectors_Create.json
     */
    /**
     * Sample code: Create or update a Analytics Connectors Service.
     *
     * @param manager Entry point to HealthcareApisManager.
     */
    public static void createOrUpdateAAnalyticsConnectorsService(
        com.azure.resourcemanager.healthcareapis.HealthcareApisManager manager) {
        manager
            .analyticsConnectors()
            .define("exampleconnector")
            .withExistingWorkspace("testRG", "workspace1")
            .withRegion("westus")
            .withDataSourceConfiguration(
                new AnalyticsConnectorDataSource()
                    .withType(AnalyticsConnectorDataSourceType.FHIRSERVICE)
                    .withAdditionalProperties(
                        mapOf("kind", "R4", "url", "https://workspace-examplefhir.fhir.azurehealthcareapis.com")))
            .withDataMappingConfiguration(
                new AnalyticsConnectorMapping()
                    .withType(AnalyticsConnectorMappingType.FHIR_TO_PARQUET)
                    .withAdditionalProperties(
                        mapOf(
                            "filterConfigurationReference",
                            "acrexample.azurecr.io/blah@sha256xxx",
                            "extensionSchemaReference",
                            "acrexample.azurecr.io/blah@sha256aaa/Extension",
                            "anonymizationSchemaReference",
                            "acrexample.azurecr.io/blah@sha256ccc",
                            "transformationSchemaReference",
                            "acrexample.azurecr.io/blah@sha256bbb")))
            .withDataDestinationConfiguration(
                new AnalyticsConnectorDataDestination()
                    .withType(AnalyticsConnectorDataDestinationType.DATALAKE)
                    .withAdditionalProperties(mapOf("dataLakeName", "exampledatalake")))
            .create();
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
