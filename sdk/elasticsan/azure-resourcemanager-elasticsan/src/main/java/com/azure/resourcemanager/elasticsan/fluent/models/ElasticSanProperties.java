// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.elasticsan.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.elasticsan.models.ProvisioningStates;
import com.azure.resourcemanager.elasticsan.models.Sku;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Elastic San response properties. */
@Fluent
public final class ElasticSanProperties {
    /*
     * resource sku
     */
    @JsonProperty(value = "sku")
    private Sku sku;

    /*
     * Logical zone for Elastic San resource; example: ["1"].
     */
    @JsonProperty(value = "availabilityZones", required = true)
    private List<String> availabilityZones;

    /*
     * State of the operation on the resource.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningStates provisioningState;

    /*
     * Base size of the Elastic San appliance in TB.
     */
    @JsonProperty(value = "baseSizeTB", required = true)
    private long baseSizeTB;

    /*
     * Extended size of the Elastic San appliance in TB.
     */
    @JsonProperty(value = "extendedSizeTB", required = true)
    private long extendedSizeTB;

    /*
     * Total size of the Elastic San appliance in TB.
     */
    @JsonProperty(value = "totalSizeTB", access = JsonProperty.Access.WRITE_ONLY)
    private Long totalSizeTB;

    /*
     * Provisioned IOPS of the Elastic San appliance.
     */
    @JsonProperty(value = "provisionedIops", access = JsonProperty.Access.WRITE_ONLY)
    private Long provisionedIops;

    /*
     * Provisioned MBps Elastic San appliance.
     */
    @JsonProperty(value = "provisionedMBps", access = JsonProperty.Access.WRITE_ONLY)
    private Long provisionedMBps;

    /*
     * Total Number of Volume Groups Created in Elastic San.
     */
    @JsonProperty(value = "volumeGroupCount", access = JsonProperty.Access.WRITE_ONLY)
    private Long volumeGroupCount;

    /*
     * Total Provisioned size of Volumes.
     */
    @JsonProperty(value = "totalVolumeSizeGiB", access = JsonProperty.Access.WRITE_ONLY)
    private Long totalVolumeSizeGiB;

    /**
     * Get the sku property: resource sku.
     *
     * @return the sku value.
     */
    public Sku sku() {
        return this.sku;
    }

    /**
     * Set the sku property: resource sku.
     *
     * @param sku the sku value to set.
     * @return the ElasticSanProperties object itself.
     */
    public ElasticSanProperties withSku(Sku sku) {
        this.sku = sku;
        return this;
    }

    /**
     * Get the availabilityZones property: Logical zone for Elastic San resource; example: ["1"].
     *
     * @return the availabilityZones value.
     */
    public List<String> availabilityZones() {
        return this.availabilityZones;
    }

    /**
     * Set the availabilityZones property: Logical zone for Elastic San resource; example: ["1"].
     *
     * @param availabilityZones the availabilityZones value to set.
     * @return the ElasticSanProperties object itself.
     */
    public ElasticSanProperties withAvailabilityZones(List<String> availabilityZones) {
        this.availabilityZones = availabilityZones;
        return this;
    }

    /**
     * Get the provisioningState property: State of the operation on the resource.
     *
     * @return the provisioningState value.
     */
    public ProvisioningStates provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the baseSizeTB property: Base size of the Elastic San appliance in TB.
     *
     * @return the baseSizeTB value.
     */
    public long baseSizeTB() {
        return this.baseSizeTB;
    }

    /**
     * Set the baseSizeTB property: Base size of the Elastic San appliance in TB.
     *
     * @param baseSizeTB the baseSizeTB value to set.
     * @return the ElasticSanProperties object itself.
     */
    public ElasticSanProperties withBaseSizeTB(long baseSizeTB) {
        this.baseSizeTB = baseSizeTB;
        return this;
    }

    /**
     * Get the extendedSizeTB property: Extended size of the Elastic San appliance in TB.
     *
     * @return the extendedSizeTB value.
     */
    public long extendedSizeTB() {
        return this.extendedSizeTB;
    }

    /**
     * Set the extendedSizeTB property: Extended size of the Elastic San appliance in TB.
     *
     * @param extendedSizeTB the extendedSizeTB value to set.
     * @return the ElasticSanProperties object itself.
     */
    public ElasticSanProperties withExtendedSizeTB(long extendedSizeTB) {
        this.extendedSizeTB = extendedSizeTB;
        return this;
    }

    /**
     * Get the totalSizeTB property: Total size of the Elastic San appliance in TB.
     *
     * @return the totalSizeTB value.
     */
    public Long totalSizeTB() {
        return this.totalSizeTB;
    }

    /**
     * Get the provisionedIops property: Provisioned IOPS of the Elastic San appliance.
     *
     * @return the provisionedIops value.
     */
    public Long provisionedIops() {
        return this.provisionedIops;
    }

    /**
     * Get the provisionedMBps property: Provisioned MBps Elastic San appliance.
     *
     * @return the provisionedMBps value.
     */
    public Long provisionedMBps() {
        return this.provisionedMBps;
    }

    /**
     * Get the volumeGroupCount property: Total Number of Volume Groups Created in Elastic San.
     *
     * @return the volumeGroupCount value.
     */
    public Long volumeGroupCount() {
        return this.volumeGroupCount;
    }

    /**
     * Get the totalVolumeSizeGiB property: Total Provisioned size of Volumes.
     *
     * @return the totalVolumeSizeGiB value.
     */
    public Long totalVolumeSizeGiB() {
        return this.totalVolumeSizeGiB;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (sku() != null) {
            sku().validate();
        }
        if (availabilityZones() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property availabilityZones in model ElasticSanProperties"));
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(ElasticSanProperties.class);
}
