// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.elasticsan.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Iscsi target information. */
@Fluent
public final class IscsiTargetInfo {
    /*
     * iSCSI Target IQN (iSCSI Qualified Name); example:
     * "iqn.2005-03.org.iscsi:server".
     */
    @JsonProperty(value = "targetIqn", access = JsonProperty.Access.WRITE_ONLY)
    private String targetIqn;

    /*
     * State of the operation on the resource.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningStates provisioningState;

    /*
     * Operational status of the iSCSI Target.
     */
    @JsonProperty(value = "status")
    private OperationalStatus status;

    /*
     * List of private IPv4 addresses to connect to the storage Target.
     */
    @JsonProperty(value = "endpoints")
    private List<String> endpoints;

    /**
     * Get the targetIqn property: iSCSI Target IQN (iSCSI Qualified Name); example: "iqn.2005-03.org.iscsi:server".
     *
     * @return the targetIqn value.
     */
    public String targetIqn() {
        return this.targetIqn;
    }

    /**
     * Get the provisioningState property: State of the operation on the resource.
     *
     * @return the provisioningState value.
     */
    public ProvisioningStates provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the status property: Operational status of the iSCSI Target.
     *
     * @return the status value.
     */
    public OperationalStatus status() {
        return this.status;
    }

    /**
     * Set the status property: Operational status of the iSCSI Target.
     *
     * @param status the status value to set.
     * @return the IscsiTargetInfo object itself.
     */
    public IscsiTargetInfo withStatus(OperationalStatus status) {
        this.status = status;
        return this;
    }

    /**
     * Get the endpoints property: List of private IPv4 addresses to connect to the storage Target.
     *
     * @return the endpoints value.
     */
    public List<String> endpoints() {
        return this.endpoints;
    }

    /**
     * Set the endpoints property: List of private IPv4 addresses to connect to the storage Target.
     *
     * @param endpoints the endpoints value to set.
     * @return the IscsiTargetInfo object itself.
     */
    public IscsiTargetInfo withEndpoints(List<String> endpoints) {
        this.endpoints = endpoints;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
