// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.elasticsan.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Volume scalability target. */
@Immutable
public final class VolumeTierInfo {
    /*
     * Maximum San account capacity in GB
     */
    @JsonProperty(value = "maxSizeGB", access = JsonProperty.Access.WRITE_ONLY)
    private Long maxSizeGB;

    /*
     * Minimum San account capacity in GB
     */
    @JsonProperty(value = "minSizeGB", access = JsonProperty.Access.WRITE_ONLY)
    private Long minSizeGB;

    /*
     * Increment the San capacity in TB
     */
    @JsonProperty(value = "minIncrementSizeGB", access = JsonProperty.Access.WRITE_ONLY)
    private Long minIncrementSizeGB;

    /*
     * Maximum IOPS
     */
    @JsonProperty(value = "maxIopsPerGB", access = JsonProperty.Access.WRITE_ONLY)
    private Long maxIopsPerGB;

    /*
     * Maximum MBps
     */
    @JsonProperty(value = "maxMBpsPerGB", access = JsonProperty.Access.WRITE_ONLY)
    private Long maxMBpsPerGB;

    /*
     * Maximum IOPS
     */
    @JsonProperty(value = "maxIops", access = JsonProperty.Access.WRITE_ONLY)
    private Long maxIops;

    /*
     * Maximum MBps
     */
    @JsonProperty(value = "maxMBps", access = JsonProperty.Access.WRITE_ONLY)
    private Long maxMBps;

    /*
     * Maximum number of Snapshots per Volume
     */
    @JsonProperty(value = "maxSnapshotCount", access = JsonProperty.Access.WRITE_ONLY)
    private Long maxSnapshotCount;

    /*
     * Maximum number of connected clients count per Volume
     */
    @JsonProperty(value = "maxConnectedClientCount", access = JsonProperty.Access.WRITE_ONLY)
    private Long maxConnectedClientCount;

    /**
     * Get the maxSizeGB property: Maximum San account capacity in GB.
     *
     * @return the maxSizeGB value.
     */
    public Long maxSizeGB() {
        return this.maxSizeGB;
    }

    /**
     * Get the minSizeGB property: Minimum San account capacity in GB.
     *
     * @return the minSizeGB value.
     */
    public Long minSizeGB() {
        return this.minSizeGB;
    }

    /**
     * Get the minIncrementSizeGB property: Increment the San capacity in TB.
     *
     * @return the minIncrementSizeGB value.
     */
    public Long minIncrementSizeGB() {
        return this.minIncrementSizeGB;
    }

    /**
     * Get the maxIopsPerGB property: Maximum IOPS.
     *
     * @return the maxIopsPerGB value.
     */
    public Long maxIopsPerGB() {
        return this.maxIopsPerGB;
    }

    /**
     * Get the maxMBpsPerGB property: Maximum MBps.
     *
     * @return the maxMBpsPerGB value.
     */
    public Long maxMBpsPerGB() {
        return this.maxMBpsPerGB;
    }

    /**
     * Get the maxIops property: Maximum IOPS.
     *
     * @return the maxIops value.
     */
    public Long maxIops() {
        return this.maxIops;
    }

    /**
     * Get the maxMBps property: Maximum MBps.
     *
     * @return the maxMBps value.
     */
    public Long maxMBps() {
        return this.maxMBps;
    }

    /**
     * Get the maxSnapshotCount property: Maximum number of Snapshots per Volume.
     *
     * @return the maxSnapshotCount value.
     */
    public Long maxSnapshotCount() {
        return this.maxSnapshotCount;
    }

    /**
     * Get the maxConnectedClientCount property: Maximum number of connected clients count per Volume.
     *
     * @return the maxConnectedClientCount value.
     */
    public Long maxConnectedClientCount() {
        return this.maxConnectedClientCount;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
