// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.elasticsan.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonProperty;

/** San scalability target. */
@Immutable
public final class SanTierInfo {
    /*
     * Maximum San account capacity in TB
     */
    @JsonProperty(value = "maxSizeTB", access = JsonProperty.Access.WRITE_ONLY)
    private Long maxSizeTB;

    /*
     * Minimum San account capacity in TB
     */
    @JsonProperty(value = "minSizeTB", access = JsonProperty.Access.WRITE_ONLY)
    private Long minSizeTB;

    /*
     * Increment the San capacity in TB
     */
    @JsonProperty(value = "minIncrementSizeTB", access = JsonProperty.Access.WRITE_ONLY)
    private Long minIncrementSizeTB;

    /*
     * Maximum IOPS
     */
    @JsonProperty(value = "maxIopsPerTB", access = JsonProperty.Access.WRITE_ONLY)
    private Long maxIopsPerTB;

    /*
     * Maximum MBps
     */
    @JsonProperty(value = "maxMBpsPerTB", access = JsonProperty.Access.WRITE_ONLY)
    private Long maxMBpsPerTB;

    /*
     * Maximum IOPS
     */
    @JsonProperty(value = "maxIops", access = JsonProperty.Access.WRITE_ONLY)
    private Long maxIops;

    /*
     * Maximum MBps
     */
    @JsonProperty(value = "maxMBps", access = JsonProperty.Access.WRITE_ONLY)
    private Long maxMBps;

    /*
     * Maximum number of volume groups per San account
     */
    @JsonProperty(value = "maxVolumeGroupCount", access = JsonProperty.Access.WRITE_ONLY)
    private Long maxVolumeGroupCount;

    /**
     * Get the maxSizeTB property: Maximum San account capacity in TB.
     *
     * @return the maxSizeTB value.
     */
    public Long maxSizeTB() {
        return this.maxSizeTB;
    }

    /**
     * Get the minSizeTB property: Minimum San account capacity in TB.
     *
     * @return the minSizeTB value.
     */
    public Long minSizeTB() {
        return this.minSizeTB;
    }

    /**
     * Get the minIncrementSizeTB property: Increment the San capacity in TB.
     *
     * @return the minIncrementSizeTB value.
     */
    public Long minIncrementSizeTB() {
        return this.minIncrementSizeTB;
    }

    /**
     * Get the maxIopsPerTB property: Maximum IOPS.
     *
     * @return the maxIopsPerTB value.
     */
    public Long maxIopsPerTB() {
        return this.maxIopsPerTB;
    }

    /**
     * Get the maxMBpsPerTB property: Maximum MBps.
     *
     * @return the maxMBpsPerTB value.
     */
    public Long maxMBpsPerTB() {
        return this.maxMBpsPerTB;
    }

    /**
     * Get the maxIops property: Maximum IOPS.
     *
     * @return the maxIops value.
     */
    public Long maxIops() {
        return this.maxIops;
    }

    /**
     * Get the maxMBps property: Maximum MBps.
     *
     * @return the maxMBps value.
     */
    public Long maxMBps() {
        return this.maxMBps;
    }

    /**
     * Get the maxVolumeGroupCount property: Maximum number of volume groups per San account.
     *
     * @return the maxVolumeGroupCount value.
     */
    public Long maxVolumeGroupCount() {
        return this.maxVolumeGroupCount;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
