// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.generated;

import com.azure.resourcemanager.sql.generated.models.BaselineName;
import com.azure.resourcemanager.sql.generated.models.VulnerabilityAssessmentName;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

/** Samples for DatabaseSqlVulnerabilityAssessmentBaselines CreateOrUpdate. */
public final class DatabaseSqlVulnerabilityAssessmentBaselinesCreateOrUpdateSamples {
    /*
     * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2022-02-01-preview/examples/DatabaseSqlVulnerabilityAssessmentBaselineAddLatest.json
     */
    /**
     * Sample code: Add a database's vulnerability assessment rule baseline from the latest scan result.
     *
     * @param manager Entry point to SqlManager.
     */
    public static void addADatabaseSVulnerabilityAssessmentRuleBaselineFromTheLatestScanResult(
        com.azure.resourcemanager.sql.generated.SqlManager manager) {
        manager
            .databaseSqlVulnerabilityAssessmentBaselines()
            .define(BaselineName.DEFAULT)
            .withExistingSqlVulnerabilityAssessment(
                "vulnerabilityaseessmenttest-4799",
                "vulnerabilityaseessmenttest-6440",
                "testdb",
                VulnerabilityAssessmentName.DEFAULT)
            .withLatestScan(true)
            .withResults(mapOf())
            .create();
    }

    /*
     * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2022-02-01-preview/examples/DatabaseSqlVulnerabilityAssessmentBaselineAdd.json
     */
    /**
     * Sample code: Add a database's vulnerability assessment rule baseline list.
     *
     * @param manager Entry point to SqlManager.
     */
    public static void addADatabaseSVulnerabilityAssessmentRuleBaselineList(
        com.azure.resourcemanager.sql.generated.SqlManager manager) {
        manager
            .databaseSqlVulnerabilityAssessmentBaselines()
            .define(BaselineName.DEFAULT)
            .withExistingSqlVulnerabilityAssessment(
                "vulnerabilityaseessmenttest-4799",
                "vulnerabilityaseessmenttest-6440",
                "testdb",
                VulnerabilityAssessmentName.DEFAULT)
            .withLatestScan(false)
            .withResults(
                mapOf(
                    "VA2063",
                    Arrays.asList(Arrays.asList("AllowAll", "0.0.0.0", "255.255.255.255")),
                    "VA2065",
                    Arrays.asList(Arrays.asList("AllowAll", "0.0.0.0", "255.255.255.255"))))
            .create();
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
