// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.models;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.sql.generated.fluent.models.AdvisorInner;
import java.time.OffsetDateTime;

/** An immutable client-side representation of Advisor. */
public interface Advisor {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the kind property: Resource kind.
     *
     * @return the kind value.
     */
    String kind();

    /**
     * Gets the location property: Resource location.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the advisorStatus property: Gets the status of availability of this advisor to customers. Possible values
     * are 'GA', 'PublicPreview', 'LimitedPublicPreview' and 'PrivatePreview'.
     *
     * @return the advisorStatus value.
     */
    AdvisorStatus advisorStatus();

    /**
     * Gets the autoExecuteValue property: Gets the auto-execute status (whether to let the system execute the
     * recommendations) of this advisor. Possible values are 'Enabled' and 'Disabled'.
     *
     * @return the autoExecuteValue value.
     */
    AutoExecuteStatus autoExecuteValue();

    /**
     * Gets the recommendationsStatus property: Gets that status of recommendations for this advisor and reason for not
     * having any recommendations. Possible values include, but are not limited to, 'Ok' (Recommendations available),
     * LowActivity (not enough workload to analyze), 'DbSeemsTuned' (Database is doing well), etc.
     *
     * @return the recommendationsStatus value.
     */
    String recommendationsStatus();

    /**
     * Gets the lastChecked property: Gets the time when the current resource was analyzed for recommendations by this
     * advisor.
     *
     * @return the lastChecked value.
     */
    OffsetDateTime lastChecked();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the inner com.azure.resourcemanager.sql.generated.fluent.models.AdvisorInner object.
     *
     * @return the inner object.
     */
    AdvisorInner innerModel();

    /** The entirety of the Advisor definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }
    /** The Advisor definition stages. */
    interface DefinitionStages {
        /** The first stage of the Advisor definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the Advisor definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, serverName.
             *
             * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this
             *     value from the Azure Resource Manager API or the portal.
             * @param serverName The name of the server.
             * @return the next definition stage.
             */
            WithCreate withExistingServer(String resourceGroupName, String serverName);
        }
        /**
         * The stage of the Advisor definition which contains all the minimum required properties for the resource to be
         * created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithAutoExecuteValue {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            Advisor create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            Advisor create(Context context);
        }
        /** The stage of the Advisor definition allowing to specify autoExecuteValue. */
        interface WithAutoExecuteValue {
            /**
             * Specifies the autoExecuteValue property: Gets the auto-execute status (whether to let the system execute
             * the recommendations) of this advisor. Possible values are 'Enabled' and 'Disabled'.
             *
             * @param autoExecuteValue Gets the auto-execute status (whether to let the system execute the
             *     recommendations) of this advisor. Possible values are 'Enabled' and 'Disabled'.
             * @return the next definition stage.
             */
            WithCreate withAutoExecuteValue(AutoExecuteStatus autoExecuteValue);
        }
    }
    /**
     * Begins update for the Advisor resource.
     *
     * @return the stage of resource update.
     */
    Advisor.Update update();

    /** The template for Advisor update. */
    interface Update extends UpdateStages.WithAutoExecuteValue {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        Advisor apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        Advisor apply(Context context);
    }
    /** The Advisor update stages. */
    interface UpdateStages {
        /** The stage of the Advisor update allowing to specify autoExecuteValue. */
        interface WithAutoExecuteValue {
            /**
             * Specifies the autoExecuteValue property: Gets the auto-execute status (whether to let the system execute
             * the recommendations) of this advisor. Possible values are 'Enabled' and 'Disabled'.
             *
             * @param autoExecuteValue Gets the auto-execute status (whether to let the system execute the
             *     recommendations) of this advisor. Possible values are 'Enabled' and 'Disabled'.
             * @return the next definition stage.
             */
            Update withAutoExecuteValue(AutoExecuteStatus autoExecuteValue);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    Advisor refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    Advisor refresh(Context context);
}
