// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.sql.generated.SqlManager;
import com.azure.resourcemanager.sql.generated.fluent.models.ImportExportResponseInner;
import com.azure.resourcemanager.sql.generated.models.AuthenticationType;
import com.azure.resourcemanager.sql.generated.models.ExtensionName;
import com.azure.resourcemanager.sql.generated.models.ImportExportResponse;
import com.azure.resourcemanager.sql.generated.models.ImportExtensionRequest;
import com.azure.resourcemanager.sql.generated.models.ImportOperationMode;
import com.azure.resourcemanager.sql.generated.models.StorageKeyType;
import java.util.UUID;

public final class ImportExportResponseImpl implements ImportExportResponse, ImportExportResponse.Definition {
    private ImportExportResponseInner innerObject;

    private final SqlManager serviceManager;

    ImportExportResponseImpl(ImportExportResponseInner innerObject, SqlManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String requestType() {
        return this.innerModel().requestType();
    }

    public UUID requestId() {
        return this.innerModel().requestId();
    }

    public String serverName() {
        return this.innerModel().serverName();
    }

    public String databaseName() {
        return this.innerModel().databaseName();
    }

    public String status() {
        return this.innerModel().status();
    }

    public String lastModifiedTime() {
        return this.innerModel().lastModifiedTime();
    }

    public String queuedTime() {
        return this.innerModel().queuedTime();
    }

    public String blobUri() {
        return this.innerModel().blobUri();
    }

    public String errorMessage() {
        return this.innerModel().errorMessage();
    }

    public ImportExportResponseInner innerModel() {
        return this.innerObject;
    }

    private SqlManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String serverName;

    private String databaseName;

    private ExtensionName extensionName;

    private ImportExtensionRequest createParameters;

    public ImportExportResponseImpl withExistingDatabase(
        String resourceGroupName, String serverName, String databaseName) {
        this.resourceGroupName = resourceGroupName;
        this.serverName = serverName;
        this.databaseName = databaseName;
        return this;
    }

    public ImportExportResponse create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getDatabases()
                .createImportOperation(
                    resourceGroupName, serverName, databaseName, extensionName, createParameters, Context.NONE);
        return this;
    }

    public ImportExportResponse create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getDatabases()
                .createImportOperation(
                    resourceGroupName, serverName, databaseName, extensionName, createParameters, context);
        return this;
    }

    ImportExportResponseImpl(ExtensionName name, SqlManager serviceManager) {
        this.innerObject = new ImportExportResponseInner();
        this.serviceManager = serviceManager;
        this.extensionName = name;
        this.createParameters = new ImportExtensionRequest();
    }

    public ImportExportResponseImpl withName(String name) {
        this.createParameters.withName(name);
        return this;
    }

    public ImportExportResponseImpl withType(String type) {
        this.createParameters.withType(type);
        return this;
    }

    public ImportExportResponseImpl withStorageKeyType(StorageKeyType storageKeyType) {
        this.createParameters.withStorageKeyType(storageKeyType);
        return this;
    }

    public ImportExportResponseImpl withStorageKey(String storageKey) {
        this.createParameters.withStorageKey(storageKey);
        return this;
    }

    public ImportExportResponseImpl withStorageUri(String storageUri) {
        this.createParameters.withStorageUri(storageUri);
        return this;
    }

    public ImportExportResponseImpl withAdministratorLogin(String administratorLogin) {
        this.createParameters.withAdministratorLogin(administratorLogin);
        return this;
    }

    public ImportExportResponseImpl withAdministratorLoginPassword(String administratorLoginPassword) {
        this.createParameters.withAdministratorLoginPassword(administratorLoginPassword);
        return this;
    }

    public ImportExportResponseImpl withAuthenticationType(AuthenticationType authenticationType) {
        this.createParameters.withAuthenticationType(authenticationType);
        return this;
    }

    public ImportExportResponseImpl withOperationMode(ImportOperationMode operationMode) {
        this.createParameters.withOperationMode(operationMode);
        return this;
    }
}
