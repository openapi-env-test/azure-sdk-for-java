// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.sql.generated.SqlManager;
import com.azure.resourcemanager.sql.generated.fluent.QueryTextsClient;
import com.azure.resourcemanager.sql.generated.fluent.models.QueryTextInner;
import com.azure.resourcemanager.sql.generated.models.QueryText;
import com.azure.resourcemanager.sql.generated.models.QueryTexts;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class QueryTextsImpl implements QueryTexts {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(QueryTextsImpl.class);

    private final QueryTextsClient innerClient;

    private final SqlManager serviceManager;

    public QueryTextsImpl(QueryTextsClient innerClient, SqlManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<QueryText> listByQuery(
        String resourceGroupName, String serverName, String databaseName, String queryId) {
        PagedIterable<QueryTextInner> inner =
            this.serviceClient().listByQuery(resourceGroupName, serverName, databaseName, queryId);
        return inner.mapPage(inner1 -> new QueryTextImpl(inner1, this.manager()));
    }

    public PagedIterable<QueryText> listByQuery(
        String resourceGroupName, String serverName, String databaseName, String queryId, Context context) {
        PagedIterable<QueryTextInner> inner =
            this.serviceClient().listByQuery(resourceGroupName, serverName, databaseName, queryId, context);
        return inner.mapPage(inner1 -> new QueryTextImpl(inner1, this.manager()));
    }

    private QueryTextsClient serviceClient() {
        return this.innerClient;
    }

    private SqlManager manager() {
        return this.serviceManager;
    }
}
