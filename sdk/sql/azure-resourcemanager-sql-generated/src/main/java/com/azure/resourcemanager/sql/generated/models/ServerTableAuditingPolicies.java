// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.models;

import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of ServerTableAuditingPolicies. */
public interface ServerTableAuditingPolicies {
    /**
     * Gets a server's table auditing policy. Table auditing is deprecated, use blob auditing instead.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     *     from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param tableAuditingPolicyName The name of the table auditing policy.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a server's table auditing policy.
     */
    ServerTableAuditingPolicy get(
        String resourceGroupName, String serverName, TableAuditingPolicyName tableAuditingPolicyName);

    /**
     * Gets a server's table auditing policy. Table auditing is deprecated, use blob auditing instead.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     *     from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param tableAuditingPolicyName The name of the table auditing policy.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a server's table auditing policy.
     */
    Response<ServerTableAuditingPolicy> getWithResponse(
        String resourceGroupName, String serverName, TableAuditingPolicyName tableAuditingPolicyName, Context context);

    /**
     * Lists a server's table auditing policies. Table auditing is deprecated, use blob auditing instead.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     *     from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents the response to a list server table auditing policies request.
     */
    ServerTableAuditingPolicyListResult listByServer(String resourceGroupName, String serverName);

    /**
     * Lists a server's table auditing policies. Table auditing is deprecated, use blob auditing instead.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     *     from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents the response to a list server table auditing policies request.
     */
    Response<ServerTableAuditingPolicyListResult> listByServerWithResponse(
        String resourceGroupName, String serverName, Context context);

    /**
     * Gets a server's table auditing policy. Table auditing is deprecated, use blob auditing instead.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a server's table auditing policy.
     */
    ServerTableAuditingPolicy getById(String id);

    /**
     * Gets a server's table auditing policy. Table auditing is deprecated, use blob auditing instead.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a server's table auditing policy.
     */
    Response<ServerTableAuditingPolicy> getByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new ServerTableAuditingPolicy resource.
     *
     * @param name resource name.
     * @return the first stage of the new ServerTableAuditingPolicy definition.
     */
    ServerTableAuditingPolicy.DefinitionStages.Blank define(TableAuditingPolicyName name);
}
