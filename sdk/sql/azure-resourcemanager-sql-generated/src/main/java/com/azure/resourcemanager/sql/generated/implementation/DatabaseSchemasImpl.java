// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.Resource;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.sql.generated.SqlManager;
import com.azure.resourcemanager.sql.generated.fluent.DatabaseSchemasClient;
import com.azure.resourcemanager.sql.generated.models.DatabaseSchemas;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class DatabaseSchemasImpl implements DatabaseSchemas {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(DatabaseSchemasImpl.class);

    private final DatabaseSchemasClient innerClient;

    private final SqlManager serviceManager;

    public DatabaseSchemasImpl(DatabaseSchemasClient innerClient, SqlManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<Resource> listByDatabase(String resourceGroupName, String serverName, String databaseName) {
        return this.serviceClient().listByDatabase(resourceGroupName, serverName, databaseName);
    }

    public PagedIterable<Resource> listByDatabase(
        String resourceGroupName, String serverName, String databaseName, String filter, Context context) {
        return this.serviceClient().listByDatabase(resourceGroupName, serverName, databaseName, filter, context);
    }

    public Resource get(String resourceGroupName, String serverName, String databaseName, String schemaName) {
        return this.serviceClient().get(resourceGroupName, serverName, databaseName, schemaName);
    }

    public Response<Resource> getWithResponse(
        String resourceGroupName, String serverName, String databaseName, String schemaName, Context context) {
        return this.serviceClient().getWithResponse(resourceGroupName, serverName, databaseName, schemaName, context);
    }

    private DatabaseSchemasClient serviceClient() {
        return this.innerClient;
    }

    private SqlManager manager() {
        return this.serviceManager;
    }
}
