// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.implementation;

import com.azure.core.annotation.ServiceClient;
import com.azure.core.http.HttpHeaders;
import com.azure.core.http.HttpPipeline;
import com.azure.core.http.HttpResponse;
import com.azure.core.http.rest.Response;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.exception.ManagementError;
import com.azure.core.management.exception.ManagementException;
import com.azure.core.management.polling.PollResult;
import com.azure.core.management.polling.PollerFactory;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.core.util.polling.AsyncPollResponse;
import com.azure.core.util.polling.LongRunningOperationStatus;
import com.azure.core.util.polling.PollerFlux;
import com.azure.core.util.serializer.SerializerAdapter;
import com.azure.core.util.serializer.SerializerEncoding;
import com.azure.resourcemanager.sql.generated.fluent.CapabilitiesClient;
import com.azure.resourcemanager.sql.generated.fluent.DataMaskingPoliciesClient;
import com.azure.resourcemanager.sql.generated.fluent.DataMaskingRulesClient;
import com.azure.resourcemanager.sql.generated.fluent.DatabaseAdvisorsClient;
import com.azure.resourcemanager.sql.generated.fluent.DatabaseConnectionPoliciesClient;
import com.azure.resourcemanager.sql.generated.fluent.DatabaseTableAuditingPoliciesClient;
import com.azure.resourcemanager.sql.generated.fluent.DatabaseThreatDetectionPoliciesClient;
import com.azure.resourcemanager.sql.generated.fluent.DatabaseUsagesClient;
import com.azure.resourcemanager.sql.generated.fluent.DatabasesClient;
import com.azure.resourcemanager.sql.generated.fluent.DisasterRecoveryConfigurationsClient;
import com.azure.resourcemanager.sql.generated.fluent.ElasticPoolActivitiesClient;
import com.azure.resourcemanager.sql.generated.fluent.ElasticPoolDatabaseActivitiesClient;
import com.azure.resourcemanager.sql.generated.fluent.ElasticPoolsClient;
import com.azure.resourcemanager.sql.generated.fluent.ExtensionsClient;
import com.azure.resourcemanager.sql.generated.fluent.FirewallRulesClient;
import com.azure.resourcemanager.sql.generated.fluent.GeoBackupPoliciesClient;
import com.azure.resourcemanager.sql.generated.fluent.OperationsClient;
import com.azure.resourcemanager.sql.generated.fluent.QueriesClient;
import com.azure.resourcemanager.sql.generated.fluent.QueryStatisticsClient;
import com.azure.resourcemanager.sql.generated.fluent.QueryTextsClient;
import com.azure.resourcemanager.sql.generated.fluent.RecommendedElasticPoolsClient;
import com.azure.resourcemanager.sql.generated.fluent.RecoverableDatabasesClient;
import com.azure.resourcemanager.sql.generated.fluent.ReplicationLinksClient;
import com.azure.resourcemanager.sql.generated.fluent.RestorableDroppedDatabasesClient;
import com.azure.resourcemanager.sql.generated.fluent.RestorePointsClient;
import com.azure.resourcemanager.sql.generated.fluent.ServerAdvisorsClient;
import com.azure.resourcemanager.sql.generated.fluent.ServerAzureADAdministratorsClient;
import com.azure.resourcemanager.sql.generated.fluent.ServerCommunicationLinksClient;
import com.azure.resourcemanager.sql.generated.fluent.ServerConnectionPoliciesClient;
import com.azure.resourcemanager.sql.generated.fluent.ServerTableAuditingPoliciesClient;
import com.azure.resourcemanager.sql.generated.fluent.ServerUsagesClient;
import com.azure.resourcemanager.sql.generated.fluent.ServersClient;
import com.azure.resourcemanager.sql.generated.fluent.ServiceObjectivesClient;
import com.azure.resourcemanager.sql.generated.fluent.ServiceTierAdvisorsClient;
import com.azure.resourcemanager.sql.generated.fluent.SqlManagementClient;
import com.azure.resourcemanager.sql.generated.fluent.TransparentDataEncryptionActivitiesClient;
import com.azure.resourcemanager.sql.generated.fluent.TransparentDataEncryptionConfigurationsClient;
import com.azure.resourcemanager.sql.generated.fluent.TransparentDataEncryptionsClient;
import java.io.IOException;
import java.lang.reflect.Type;
import java.nio.ByteBuffer;
import java.nio.charset.Charset;
import java.nio.charset.StandardCharsets;
import java.time.Duration;
import java.util.Map;
import reactor.core.publisher.Flux;
import reactor.core.publisher.Mono;

/** Initializes a new instance of the SqlManagementClientImpl type. */
@ServiceClient(builder = SqlManagementClientBuilder.class)
public final class SqlManagementClientImpl implements SqlManagementClient {
    private final ClientLogger logger = new ClientLogger(SqlManagementClientImpl.class);

    /** The subscription ID that identifies an Azure subscription. */
    private final String subscriptionId;

    /**
     * Gets The subscription ID that identifies an Azure subscription.
     *
     * @return the subscriptionId value.
     */
    public String getSubscriptionId() {
        return this.subscriptionId;
    }

    /** server parameter. */
    private final String endpoint;

    /**
     * Gets server parameter.
     *
     * @return the endpoint value.
     */
    public String getEndpoint() {
        return this.endpoint;
    }

    /** Api Version. */
    private final String apiVersion;

    /**
     * Gets Api Version.
     *
     * @return the apiVersion value.
     */
    public String getApiVersion() {
        return this.apiVersion;
    }

    /** The HTTP pipeline to send requests through. */
    private final HttpPipeline httpPipeline;

    /**
     * Gets The HTTP pipeline to send requests through.
     *
     * @return the httpPipeline value.
     */
    public HttpPipeline getHttpPipeline() {
        return this.httpPipeline;
    }

    /** The serializer to serialize an object into a string. */
    private final SerializerAdapter serializerAdapter;

    /**
     * Gets The serializer to serialize an object into a string.
     *
     * @return the serializerAdapter value.
     */
    SerializerAdapter getSerializerAdapter() {
        return this.serializerAdapter;
    }

    /** The default poll interval for long-running operation. */
    private final Duration defaultPollInterval;

    /**
     * Gets The default poll interval for long-running operation.
     *
     * @return the defaultPollInterval value.
     */
    public Duration getDefaultPollInterval() {
        return this.defaultPollInterval;
    }

    /** The ServerAdvisorsClient object to access its operations. */
    private final ServerAdvisorsClient serverAdvisors;

    /**
     * Gets the ServerAdvisorsClient object to access its operations.
     *
     * @return the ServerAdvisorsClient object.
     */
    public ServerAdvisorsClient getServerAdvisors() {
        return this.serverAdvisors;
    }

    /** The DatabaseAdvisorsClient object to access its operations. */
    private final DatabaseAdvisorsClient databaseAdvisors;

    /**
     * Gets the DatabaseAdvisorsClient object to access its operations.
     *
     * @return the DatabaseAdvisorsClient object.
     */
    public DatabaseAdvisorsClient getDatabaseAdvisors() {
        return this.databaseAdvisors;
    }

    /** The RecoverableDatabasesClient object to access its operations. */
    private final RecoverableDatabasesClient recoverableDatabases;

    /**
     * Gets the RecoverableDatabasesClient object to access its operations.
     *
     * @return the RecoverableDatabasesClient object.
     */
    public RecoverableDatabasesClient getRecoverableDatabases() {
        return this.recoverableDatabases;
    }

    /** The RestorableDroppedDatabasesClient object to access its operations. */
    private final RestorableDroppedDatabasesClient restorableDroppedDatabases;

    /**
     * Gets the RestorableDroppedDatabasesClient object to access its operations.
     *
     * @return the RestorableDroppedDatabasesClient object.
     */
    public RestorableDroppedDatabasesClient getRestorableDroppedDatabases() {
        return this.restorableDroppedDatabases;
    }

    /** The CapabilitiesClient object to access its operations. */
    private final CapabilitiesClient capabilities;

    /**
     * Gets the CapabilitiesClient object to access its operations.
     *
     * @return the CapabilitiesClient object.
     */
    public CapabilitiesClient getCapabilities() {
        return this.capabilities;
    }

    /** The ServersClient object to access its operations. */
    private final ServersClient servers;

    /**
     * Gets the ServersClient object to access its operations.
     *
     * @return the ServersClient object.
     */
    public ServersClient getServers() {
        return this.servers;
    }

    /** The ServerConnectionPoliciesClient object to access its operations. */
    private final ServerConnectionPoliciesClient serverConnectionPolicies;

    /**
     * Gets the ServerConnectionPoliciesClient object to access its operations.
     *
     * @return the ServerConnectionPoliciesClient object.
     */
    public ServerConnectionPoliciesClient getServerConnectionPolicies() {
        return this.serverConnectionPolicies;
    }

    /** The DatabasesClient object to access its operations. */
    private final DatabasesClient databases;

    /**
     * Gets the DatabasesClient object to access its operations.
     *
     * @return the DatabasesClient object.
     */
    public DatabasesClient getDatabases() {
        return this.databases;
    }

    /** The DatabaseThreatDetectionPoliciesClient object to access its operations. */
    private final DatabaseThreatDetectionPoliciesClient databaseThreatDetectionPolicies;

    /**
     * Gets the DatabaseThreatDetectionPoliciesClient object to access its operations.
     *
     * @return the DatabaseThreatDetectionPoliciesClient object.
     */
    public DatabaseThreatDetectionPoliciesClient getDatabaseThreatDetectionPolicies() {
        return this.databaseThreatDetectionPolicies;
    }

    /** The DataMaskingPoliciesClient object to access its operations. */
    private final DataMaskingPoliciesClient dataMaskingPolicies;

    /**
     * Gets the DataMaskingPoliciesClient object to access its operations.
     *
     * @return the DataMaskingPoliciesClient object.
     */
    public DataMaskingPoliciesClient getDataMaskingPolicies() {
        return this.dataMaskingPolicies;
    }

    /** The DataMaskingRulesClient object to access its operations. */
    private final DataMaskingRulesClient dataMaskingRules;

    /**
     * Gets the DataMaskingRulesClient object to access its operations.
     *
     * @return the DataMaskingRulesClient object.
     */
    public DataMaskingRulesClient getDataMaskingRules() {
        return this.dataMaskingRules;
    }

    /** The TransparentDataEncryptionConfigurationsClient object to access its operations. */
    private final TransparentDataEncryptionConfigurationsClient transparentDataEncryptionConfigurations;

    /**
     * Gets the TransparentDataEncryptionConfigurationsClient object to access its operations.
     *
     * @return the TransparentDataEncryptionConfigurationsClient object.
     */
    public TransparentDataEncryptionConfigurationsClient getTransparentDataEncryptionConfigurations() {
        return this.transparentDataEncryptionConfigurations;
    }

    /** The ExtensionsClient object to access its operations. */
    private final ExtensionsClient extensions;

    /**
     * Gets the ExtensionsClient object to access its operations.
     *
     * @return the ExtensionsClient object.
     */
    public ExtensionsClient getExtensions() {
        return this.extensions;
    }

    /** The DisasterRecoveryConfigurationsClient object to access its operations. */
    private final DisasterRecoveryConfigurationsClient disasterRecoveryConfigurations;

    /**
     * Gets the DisasterRecoveryConfigurationsClient object to access its operations.
     *
     * @return the DisasterRecoveryConfigurationsClient object.
     */
    public DisasterRecoveryConfigurationsClient getDisasterRecoveryConfigurations() {
        return this.disasterRecoveryConfigurations;
    }

    /** The ElasticPoolsClient object to access its operations. */
    private final ElasticPoolsClient elasticPools;

    /**
     * Gets the ElasticPoolsClient object to access its operations.
     *
     * @return the ElasticPoolsClient object.
     */
    public ElasticPoolsClient getElasticPools() {
        return this.elasticPools;
    }

    /** The FirewallRulesClient object to access its operations. */
    private final FirewallRulesClient firewallRules;

    /**
     * Gets the FirewallRulesClient object to access its operations.
     *
     * @return the FirewallRulesClient object.
     */
    public FirewallRulesClient getFirewallRules() {
        return this.firewallRules;
    }

    /** The GeoBackupPoliciesClient object to access its operations. */
    private final GeoBackupPoliciesClient geoBackupPolicies;

    /**
     * Gets the GeoBackupPoliciesClient object to access its operations.
     *
     * @return the GeoBackupPoliciesClient object.
     */
    public GeoBackupPoliciesClient getGeoBackupPolicies() {
        return this.geoBackupPolicies;
    }

    /** The OperationsClient object to access its operations. */
    private final OperationsClient operations;

    /**
     * Gets the OperationsClient object to access its operations.
     *
     * @return the OperationsClient object.
     */
    public OperationsClient getOperations() {
        return this.operations;
    }

    /** The QueriesClient object to access its operations. */
    private final QueriesClient queries;

    /**
     * Gets the QueriesClient object to access its operations.
     *
     * @return the QueriesClient object.
     */
    public QueriesClient getQueries() {
        return this.queries;
    }

    /** The QueryStatisticsClient object to access its operations. */
    private final QueryStatisticsClient queryStatistics;

    /**
     * Gets the QueryStatisticsClient object to access its operations.
     *
     * @return the QueryStatisticsClient object.
     */
    public QueryStatisticsClient getQueryStatistics() {
        return this.queryStatistics;
    }

    /** The QueryTextsClient object to access its operations. */
    private final QueryTextsClient queryTexts;

    /**
     * Gets the QueryTextsClient object to access its operations.
     *
     * @return the QueryTextsClient object.
     */
    public QueryTextsClient getQueryTexts() {
        return this.queryTexts;
    }

    /** The RecommendedElasticPoolsClient object to access its operations. */
    private final RecommendedElasticPoolsClient recommendedElasticPools;

    /**
     * Gets the RecommendedElasticPoolsClient object to access its operations.
     *
     * @return the RecommendedElasticPoolsClient object.
     */
    public RecommendedElasticPoolsClient getRecommendedElasticPools() {
        return this.recommendedElasticPools;
    }

    /** The ReplicationLinksClient object to access its operations. */
    private final ReplicationLinksClient replicationLinks;

    /**
     * Gets the ReplicationLinksClient object to access its operations.
     *
     * @return the ReplicationLinksClient object.
     */
    public ReplicationLinksClient getReplicationLinks() {
        return this.replicationLinks;
    }

    /** The RestorePointsClient object to access its operations. */
    private final RestorePointsClient restorePoints;

    /**
     * Gets the RestorePointsClient object to access its operations.
     *
     * @return the RestorePointsClient object.
     */
    public RestorePointsClient getRestorePoints() {
        return this.restorePoints;
    }

    /** The ServerAzureADAdministratorsClient object to access its operations. */
    private final ServerAzureADAdministratorsClient serverAzureADAdministrators;

    /**
     * Gets the ServerAzureADAdministratorsClient object to access its operations.
     *
     * @return the ServerAzureADAdministratorsClient object.
     */
    public ServerAzureADAdministratorsClient getServerAzureADAdministrators() {
        return this.serverAzureADAdministrators;
    }

    /** The ServerCommunicationLinksClient object to access its operations. */
    private final ServerCommunicationLinksClient serverCommunicationLinks;

    /**
     * Gets the ServerCommunicationLinksClient object to access its operations.
     *
     * @return the ServerCommunicationLinksClient object.
     */
    public ServerCommunicationLinksClient getServerCommunicationLinks() {
        return this.serverCommunicationLinks;
    }

    /** The ServiceObjectivesClient object to access its operations. */
    private final ServiceObjectivesClient serviceObjectives;

    /**
     * Gets the ServiceObjectivesClient object to access its operations.
     *
     * @return the ServiceObjectivesClient object.
     */
    public ServiceObjectivesClient getServiceObjectives() {
        return this.serviceObjectives;
    }

    /** The ElasticPoolActivitiesClient object to access its operations. */
    private final ElasticPoolActivitiesClient elasticPoolActivities;

    /**
     * Gets the ElasticPoolActivitiesClient object to access its operations.
     *
     * @return the ElasticPoolActivitiesClient object.
     */
    public ElasticPoolActivitiesClient getElasticPoolActivities() {
        return this.elasticPoolActivities;
    }

    /** The ElasticPoolDatabaseActivitiesClient object to access its operations. */
    private final ElasticPoolDatabaseActivitiesClient elasticPoolDatabaseActivities;

    /**
     * Gets the ElasticPoolDatabaseActivitiesClient object to access its operations.
     *
     * @return the ElasticPoolDatabaseActivitiesClient object.
     */
    public ElasticPoolDatabaseActivitiesClient getElasticPoolDatabaseActivities() {
        return this.elasticPoolDatabaseActivities;
    }

    /** The ServiceTierAdvisorsClient object to access its operations. */
    private final ServiceTierAdvisorsClient serviceTierAdvisors;

    /**
     * Gets the ServiceTierAdvisorsClient object to access its operations.
     *
     * @return the ServiceTierAdvisorsClient object.
     */
    public ServiceTierAdvisorsClient getServiceTierAdvisors() {
        return this.serviceTierAdvisors;
    }

    /** The TransparentDataEncryptionsClient object to access its operations. */
    private final TransparentDataEncryptionsClient transparentDataEncryptions;

    /**
     * Gets the TransparentDataEncryptionsClient object to access its operations.
     *
     * @return the TransparentDataEncryptionsClient object.
     */
    public TransparentDataEncryptionsClient getTransparentDataEncryptions() {
        return this.transparentDataEncryptions;
    }

    /** The TransparentDataEncryptionActivitiesClient object to access its operations. */
    private final TransparentDataEncryptionActivitiesClient transparentDataEncryptionActivities;

    /**
     * Gets the TransparentDataEncryptionActivitiesClient object to access its operations.
     *
     * @return the TransparentDataEncryptionActivitiesClient object.
     */
    public TransparentDataEncryptionActivitiesClient getTransparentDataEncryptionActivities() {
        return this.transparentDataEncryptionActivities;
    }

    /** The ServerTableAuditingPoliciesClient object to access its operations. */
    private final ServerTableAuditingPoliciesClient serverTableAuditingPolicies;

    /**
     * Gets the ServerTableAuditingPoliciesClient object to access its operations.
     *
     * @return the ServerTableAuditingPoliciesClient object.
     */
    public ServerTableAuditingPoliciesClient getServerTableAuditingPolicies() {
        return this.serverTableAuditingPolicies;
    }

    /** The DatabaseTableAuditingPoliciesClient object to access its operations. */
    private final DatabaseTableAuditingPoliciesClient databaseTableAuditingPolicies;

    /**
     * Gets the DatabaseTableAuditingPoliciesClient object to access its operations.
     *
     * @return the DatabaseTableAuditingPoliciesClient object.
     */
    public DatabaseTableAuditingPoliciesClient getDatabaseTableAuditingPolicies() {
        return this.databaseTableAuditingPolicies;
    }

    /** The DatabaseConnectionPoliciesClient object to access its operations. */
    private final DatabaseConnectionPoliciesClient databaseConnectionPolicies;

    /**
     * Gets the DatabaseConnectionPoliciesClient object to access its operations.
     *
     * @return the DatabaseConnectionPoliciesClient object.
     */
    public DatabaseConnectionPoliciesClient getDatabaseConnectionPolicies() {
        return this.databaseConnectionPolicies;
    }

    /** The ServerUsagesClient object to access its operations. */
    private final ServerUsagesClient serverUsages;

    /**
     * Gets the ServerUsagesClient object to access its operations.
     *
     * @return the ServerUsagesClient object.
     */
    public ServerUsagesClient getServerUsages() {
        return this.serverUsages;
    }

    /** The DatabaseUsagesClient object to access its operations. */
    private final DatabaseUsagesClient databaseUsages;

    /**
     * Gets the DatabaseUsagesClient object to access its operations.
     *
     * @return the DatabaseUsagesClient object.
     */
    public DatabaseUsagesClient getDatabaseUsages() {
        return this.databaseUsages;
    }

    /**
     * Initializes an instance of SqlManagementClient client.
     *
     * @param httpPipeline The HTTP pipeline to send requests through.
     * @param serializerAdapter The serializer to serialize an object into a string.
     * @param defaultPollInterval The default poll interval for long-running operation.
     * @param environment The Azure environment.
     * @param subscriptionId The subscription ID that identifies an Azure subscription.
     * @param endpoint server parameter.
     */
    SqlManagementClientImpl(
        HttpPipeline httpPipeline,
        SerializerAdapter serializerAdapter,
        Duration defaultPollInterval,
        AzureEnvironment environment,
        String subscriptionId,
        String endpoint) {
        this.httpPipeline = httpPipeline;
        this.serializerAdapter = serializerAdapter;
        this.defaultPollInterval = defaultPollInterval;
        this.subscriptionId = subscriptionId;
        this.endpoint = endpoint;
        this.apiVersion = "2014-04-01";
        this.serverAdvisors = new ServerAdvisorsClientImpl(this);
        this.databaseAdvisors = new DatabaseAdvisorsClientImpl(this);
        this.recoverableDatabases = new RecoverableDatabasesClientImpl(this);
        this.restorableDroppedDatabases = new RestorableDroppedDatabasesClientImpl(this);
        this.capabilities = new CapabilitiesClientImpl(this);
        this.servers = new ServersClientImpl(this);
        this.serverConnectionPolicies = new ServerConnectionPoliciesClientImpl(this);
        this.databases = new DatabasesClientImpl(this);
        this.databaseThreatDetectionPolicies = new DatabaseThreatDetectionPoliciesClientImpl(this);
        this.dataMaskingPolicies = new DataMaskingPoliciesClientImpl(this);
        this.dataMaskingRules = new DataMaskingRulesClientImpl(this);
        this.transparentDataEncryptionConfigurations = new TransparentDataEncryptionConfigurationsClientImpl(this);
        this.extensions = new ExtensionsClientImpl(this);
        this.disasterRecoveryConfigurations = new DisasterRecoveryConfigurationsClientImpl(this);
        this.elasticPools = new ElasticPoolsClientImpl(this);
        this.firewallRules = new FirewallRulesClientImpl(this);
        this.geoBackupPolicies = new GeoBackupPoliciesClientImpl(this);
        this.operations = new OperationsClientImpl(this);
        this.queries = new QueriesClientImpl(this);
        this.queryStatistics = new QueryStatisticsClientImpl(this);
        this.queryTexts = new QueryTextsClientImpl(this);
        this.recommendedElasticPools = new RecommendedElasticPoolsClientImpl(this);
        this.replicationLinks = new ReplicationLinksClientImpl(this);
        this.restorePoints = new RestorePointsClientImpl(this);
        this.serverAzureADAdministrators = new ServerAzureADAdministratorsClientImpl(this);
        this.serverCommunicationLinks = new ServerCommunicationLinksClientImpl(this);
        this.serviceObjectives = new ServiceObjectivesClientImpl(this);
        this.elasticPoolActivities = new ElasticPoolActivitiesClientImpl(this);
        this.elasticPoolDatabaseActivities = new ElasticPoolDatabaseActivitiesClientImpl(this);
        this.serviceTierAdvisors = new ServiceTierAdvisorsClientImpl(this);
        this.transparentDataEncryptions = new TransparentDataEncryptionsClientImpl(this);
        this.transparentDataEncryptionActivities = new TransparentDataEncryptionActivitiesClientImpl(this);
        this.serverTableAuditingPolicies = new ServerTableAuditingPoliciesClientImpl(this);
        this.databaseTableAuditingPolicies = new DatabaseTableAuditingPoliciesClientImpl(this);
        this.databaseConnectionPolicies = new DatabaseConnectionPoliciesClientImpl(this);
        this.serverUsages = new ServerUsagesClientImpl(this);
        this.databaseUsages = new DatabaseUsagesClientImpl(this);
    }

    /**
     * Gets default client context.
     *
     * @return the default client context.
     */
    public Context getContext() {
        return Context.NONE;
    }

    /**
     * Merges default client context with provided context.
     *
     * @param context the context to be merged with default client context.
     * @return the merged context.
     */
    public Context mergeContext(Context context) {
        for (Map.Entry<Object, Object> entry : this.getContext().getValues().entrySet()) {
            context = context.addData(entry.getKey(), entry.getValue());
        }
        return context;
    }

    /**
     * Gets long running operation result.
     *
     * @param activationResponse the response of activation operation.
     * @param httpPipeline the http pipeline.
     * @param pollResultType type of poll result.
     * @param finalResultType type of final result.
     * @param context the context shared by all requests.
     * @param <T> type of poll result.
     * @param <U> type of final result.
     * @return poller flux for poll result and final result.
     */
    public <T, U> PollerFlux<PollResult<T>, U> getLroResult(
        Mono<Response<Flux<ByteBuffer>>> activationResponse,
        HttpPipeline httpPipeline,
        Type pollResultType,
        Type finalResultType,
        Context context) {
        return PollerFactory
            .create(
                serializerAdapter,
                httpPipeline,
                pollResultType,
                finalResultType,
                defaultPollInterval,
                activationResponse,
                context);
    }

    /**
     * Gets the final result, or an error, based on last async poll response.
     *
     * @param response the last async poll response.
     * @param <T> type of poll result.
     * @param <U> type of final result.
     * @return the final result, or an error.
     */
    public <T, U> Mono<U> getLroFinalResultOrError(AsyncPollResponse<PollResult<T>, U> response) {
        if (response.getStatus() != LongRunningOperationStatus.SUCCESSFULLY_COMPLETED) {
            String errorMessage;
            ManagementError managementError = null;
            HttpResponse errorResponse = null;
            PollResult.Error lroError = response.getValue().getError();
            if (lroError != null) {
                errorResponse =
                    new HttpResponseImpl(
                        lroError.getResponseStatusCode(), lroError.getResponseHeaders(), lroError.getResponseBody());

                errorMessage = response.getValue().getError().getMessage();
                String errorBody = response.getValue().getError().getResponseBody();
                if (errorBody != null) {
                    // try to deserialize error body to ManagementError
                    try {
                        managementError =
                            this
                                .getSerializerAdapter()
                                .deserialize(errorBody, ManagementError.class, SerializerEncoding.JSON);
                        if (managementError.getCode() == null || managementError.getMessage() == null) {
                            managementError = null;
                        }
                    } catch (IOException ioe) {
                        logger.logThrowableAsWarning(ioe);
                    }
                }
            } else {
                // fallback to default error message
                errorMessage = "Long running operation failed.";
            }
            if (managementError == null) {
                // fallback to default ManagementError
                managementError = new ManagementError(response.getStatus().toString(), errorMessage);
            }
            return Mono.error(new ManagementException(errorMessage, errorResponse, managementError));
        } else {
            return response.getFinalResult();
        }
    }

    private static final class HttpResponseImpl extends HttpResponse {
        private final int statusCode;

        private final byte[] responseBody;

        private final HttpHeaders httpHeaders;

        HttpResponseImpl(int statusCode, HttpHeaders httpHeaders, String responseBody) {
            super(null);
            this.statusCode = statusCode;
            this.httpHeaders = httpHeaders;
            this.responseBody = responseBody.getBytes(StandardCharsets.UTF_8);
        }

        public int getStatusCode() {
            return statusCode;
        }

        public String getHeaderValue(String s) {
            return httpHeaders.getValue(s);
        }

        public HttpHeaders getHeaders() {
            return httpHeaders;
        }

        public Flux<ByteBuffer> getBody() {
            return Flux.just(ByteBuffer.wrap(responseBody));
        }

        public Mono<byte[]> getBodyAsByteArray() {
            return Mono.just(responseBody);
        }

        public Mono<String> getBodyAsString() {
            return Mono.just(new String(responseBody, StandardCharsets.UTF_8));
        }

        public Mono<String> getBodyAsString(Charset charset) {
            return Mono.just(new String(responseBody, charset));
        }
    }
}
