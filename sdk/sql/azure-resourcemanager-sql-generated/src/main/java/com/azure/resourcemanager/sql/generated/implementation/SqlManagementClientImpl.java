// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.implementation;

import com.azure.core.annotation.ServiceClient;
import com.azure.core.http.HttpHeaders;
import com.azure.core.http.HttpPipeline;
import com.azure.core.http.HttpResponse;
import com.azure.core.http.rest.Response;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.exception.ManagementError;
import com.azure.core.management.exception.ManagementException;
import com.azure.core.management.polling.PollResult;
import com.azure.core.management.polling.PollerFactory;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.core.util.polling.AsyncPollResponse;
import com.azure.core.util.polling.LongRunningOperationStatus;
import com.azure.core.util.polling.PollerFlux;
import com.azure.core.util.serializer.SerializerAdapter;
import com.azure.core.util.serializer.SerializerEncoding;
import com.azure.resourcemanager.sql.generated.fluent.BackupLongTermRetentionPoliciesClient;
import com.azure.resourcemanager.sql.generated.fluent.DataWarehouseUserActivitiesOperationsClient;
import com.azure.resourcemanager.sql.generated.fluent.DatabaseBlobAuditingPoliciesClient;
import com.azure.resourcemanager.sql.generated.fluent.DatabaseOperationsClient;
import com.azure.resourcemanager.sql.generated.fluent.DatabaseVulnerabilityAssessmentRuleBaselinesClient;
import com.azure.resourcemanager.sql.generated.fluent.DatabaseVulnerabilityAssessmentsClient;
import com.azure.resourcemanager.sql.generated.fluent.DatabasesClient;
import com.azure.resourcemanager.sql.generated.fluent.ExtendedDatabaseBlobAuditingPoliciesClient;
import com.azure.resourcemanager.sql.generated.fluent.ExtendedServerBlobAuditingPoliciesClient;
import com.azure.resourcemanager.sql.generated.fluent.JobAgentsClient;
import com.azure.resourcemanager.sql.generated.fluent.JobCredentialsClient;
import com.azure.resourcemanager.sql.generated.fluent.JobExecutionsClient;
import com.azure.resourcemanager.sql.generated.fluent.JobStepExecutionsClient;
import com.azure.resourcemanager.sql.generated.fluent.JobStepsClient;
import com.azure.resourcemanager.sql.generated.fluent.JobTargetExecutionsClient;
import com.azure.resourcemanager.sql.generated.fluent.JobTargetGroupsClient;
import com.azure.resourcemanager.sql.generated.fluent.JobVersionsClient;
import com.azure.resourcemanager.sql.generated.fluent.JobsClient;
import com.azure.resourcemanager.sql.generated.fluent.LongTermRetentionBackupsClient;
import com.azure.resourcemanager.sql.generated.fluent.ManagedBackupShortTermRetentionPoliciesClient;
import com.azure.resourcemanager.sql.generated.fluent.ManagedDatabaseSecurityAlertPoliciesClient;
import com.azure.resourcemanager.sql.generated.fluent.ManagedDatabasesClient;
import com.azure.resourcemanager.sql.generated.fluent.ManagedInstanceAdministratorsClient;
import com.azure.resourcemanager.sql.generated.fluent.ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesClient;
import com.azure.resourcemanager.sql.generated.fluent.ManagedServerSecurityAlertPoliciesClient;
import com.azure.resourcemanager.sql.generated.fluent.RestorableDroppedManagedDatabasesClient;
import com.azure.resourcemanager.sql.generated.fluent.RestorePointsClient;
import com.azure.resourcemanager.sql.generated.fluent.SensitivityLabelsClient;
import com.azure.resourcemanager.sql.generated.fluent.ServerAutomaticTuningsClient;
import com.azure.resourcemanager.sql.generated.fluent.ServerBlobAuditingPoliciesClient;
import com.azure.resourcemanager.sql.generated.fluent.ServerDnsAliasesClient;
import com.azure.resourcemanager.sql.generated.fluent.ServerSecurityAlertPoliciesClient;
import com.azure.resourcemanager.sql.generated.fluent.SqlManagementClient;
import java.io.IOException;
import java.lang.reflect.Type;
import java.nio.ByteBuffer;
import java.nio.charset.Charset;
import java.nio.charset.StandardCharsets;
import java.time.Duration;
import java.util.Map;
import reactor.core.publisher.Flux;
import reactor.core.publisher.Mono;

/** Initializes a new instance of the SqlManagementClientImpl type. */
@ServiceClient(builder = SqlManagementClientBuilder.class)
public final class SqlManagementClientImpl implements SqlManagementClient {
    private final ClientLogger logger = new ClientLogger(SqlManagementClientImpl.class);

    /** The subscription ID that identifies an Azure subscription. */
    private final String subscriptionId;

    /**
     * Gets The subscription ID that identifies an Azure subscription.
     *
     * @return the subscriptionId value.
     */
    public String getSubscriptionId() {
        return this.subscriptionId;
    }

    /** server parameter. */
    private final String endpoint;

    /**
     * Gets server parameter.
     *
     * @return the endpoint value.
     */
    public String getEndpoint() {
        return this.endpoint;
    }

    /** Api Version. */
    private final String apiVersion;

    /**
     * Gets Api Version.
     *
     * @return the apiVersion value.
     */
    public String getApiVersion() {
        return this.apiVersion;
    }

    /** The HTTP pipeline to send requests through. */
    private final HttpPipeline httpPipeline;

    /**
     * Gets The HTTP pipeline to send requests through.
     *
     * @return the httpPipeline value.
     */
    public HttpPipeline getHttpPipeline() {
        return this.httpPipeline;
    }

    /** The serializer to serialize an object into a string. */
    private final SerializerAdapter serializerAdapter;

    /**
     * Gets The serializer to serialize an object into a string.
     *
     * @return the serializerAdapter value.
     */
    SerializerAdapter getSerializerAdapter() {
        return this.serializerAdapter;
    }

    /** The default poll interval for long-running operation. */
    private final Duration defaultPollInterval;

    /**
     * Gets The default poll interval for long-running operation.
     *
     * @return the defaultPollInterval value.
     */
    public Duration getDefaultPollInterval() {
        return this.defaultPollInterval;
    }

    /** The ExtendedDatabaseBlobAuditingPoliciesClient object to access its operations. */
    private final ExtendedDatabaseBlobAuditingPoliciesClient extendedDatabaseBlobAuditingPolicies;

    /**
     * Gets the ExtendedDatabaseBlobAuditingPoliciesClient object to access its operations.
     *
     * @return the ExtendedDatabaseBlobAuditingPoliciesClient object.
     */
    public ExtendedDatabaseBlobAuditingPoliciesClient getExtendedDatabaseBlobAuditingPolicies() {
        return this.extendedDatabaseBlobAuditingPolicies;
    }

    /** The ExtendedServerBlobAuditingPoliciesClient object to access its operations. */
    private final ExtendedServerBlobAuditingPoliciesClient extendedServerBlobAuditingPolicies;

    /**
     * Gets the ExtendedServerBlobAuditingPoliciesClient object to access its operations.
     *
     * @return the ExtendedServerBlobAuditingPoliciesClient object.
     */
    public ExtendedServerBlobAuditingPoliciesClient getExtendedServerBlobAuditingPolicies() {
        return this.extendedServerBlobAuditingPolicies;
    }

    /** The ServerBlobAuditingPoliciesClient object to access its operations. */
    private final ServerBlobAuditingPoliciesClient serverBlobAuditingPolicies;

    /**
     * Gets the ServerBlobAuditingPoliciesClient object to access its operations.
     *
     * @return the ServerBlobAuditingPoliciesClient object.
     */
    public ServerBlobAuditingPoliciesClient getServerBlobAuditingPolicies() {
        return this.serverBlobAuditingPolicies;
    }

    /** The DatabaseBlobAuditingPoliciesClient object to access its operations. */
    private final DatabaseBlobAuditingPoliciesClient databaseBlobAuditingPolicies;

    /**
     * Gets the DatabaseBlobAuditingPoliciesClient object to access its operations.
     *
     * @return the DatabaseBlobAuditingPoliciesClient object.
     */
    public DatabaseBlobAuditingPoliciesClient getDatabaseBlobAuditingPolicies() {
        return this.databaseBlobAuditingPolicies;
    }

    /** The DatabaseOperationsClient object to access its operations. */
    private final DatabaseOperationsClient databaseOperations;

    /**
     * Gets the DatabaseOperationsClient object to access its operations.
     *
     * @return the DatabaseOperationsClient object.
     */
    public DatabaseOperationsClient getDatabaseOperations() {
        return this.databaseOperations;
    }

    /** The DatabasesClient object to access its operations. */
    private final DatabasesClient databases;

    /**
     * Gets the DatabasesClient object to access its operations.
     *
     * @return the DatabasesClient object.
     */
    public DatabasesClient getDatabases() {
        return this.databases;
    }

    /** The DatabaseVulnerabilityAssessmentRuleBaselinesClient object to access its operations. */
    private final DatabaseVulnerabilityAssessmentRuleBaselinesClient databaseVulnerabilityAssessmentRuleBaselines;

    /**
     * Gets the DatabaseVulnerabilityAssessmentRuleBaselinesClient object to access its operations.
     *
     * @return the DatabaseVulnerabilityAssessmentRuleBaselinesClient object.
     */
    public DatabaseVulnerabilityAssessmentRuleBaselinesClient getDatabaseVulnerabilityAssessmentRuleBaselines() {
        return this.databaseVulnerabilityAssessmentRuleBaselines;
    }

    /** The DatabaseVulnerabilityAssessmentsClient object to access its operations. */
    private final DatabaseVulnerabilityAssessmentsClient databaseVulnerabilityAssessments;

    /**
     * Gets the DatabaseVulnerabilityAssessmentsClient object to access its operations.
     *
     * @return the DatabaseVulnerabilityAssessmentsClient object.
     */
    public DatabaseVulnerabilityAssessmentsClient getDatabaseVulnerabilityAssessments() {
        return this.databaseVulnerabilityAssessments;
    }

    /** The DataWarehouseUserActivitiesOperationsClient object to access its operations. */
    private final DataWarehouseUserActivitiesOperationsClient dataWarehouseUserActivitiesOperations;

    /**
     * Gets the DataWarehouseUserActivitiesOperationsClient object to access its operations.
     *
     * @return the DataWarehouseUserActivitiesOperationsClient object.
     */
    public DataWarehouseUserActivitiesOperationsClient getDataWarehouseUserActivitiesOperations() {
        return this.dataWarehouseUserActivitiesOperations;
    }

    /** The JobAgentsClient object to access its operations. */
    private final JobAgentsClient jobAgents;

    /**
     * Gets the JobAgentsClient object to access its operations.
     *
     * @return the JobAgentsClient object.
     */
    public JobAgentsClient getJobAgents() {
        return this.jobAgents;
    }

    /** The JobCredentialsClient object to access its operations. */
    private final JobCredentialsClient jobCredentials;

    /**
     * Gets the JobCredentialsClient object to access its operations.
     *
     * @return the JobCredentialsClient object.
     */
    public JobCredentialsClient getJobCredentials() {
        return this.jobCredentials;
    }

    /** The JobExecutionsClient object to access its operations. */
    private final JobExecutionsClient jobExecutions;

    /**
     * Gets the JobExecutionsClient object to access its operations.
     *
     * @return the JobExecutionsClient object.
     */
    public JobExecutionsClient getJobExecutions() {
        return this.jobExecutions;
    }

    /** The JobsClient object to access its operations. */
    private final JobsClient jobs;

    /**
     * Gets the JobsClient object to access its operations.
     *
     * @return the JobsClient object.
     */
    public JobsClient getJobs() {
        return this.jobs;
    }

    /** The JobStepExecutionsClient object to access its operations. */
    private final JobStepExecutionsClient jobStepExecutions;

    /**
     * Gets the JobStepExecutionsClient object to access its operations.
     *
     * @return the JobStepExecutionsClient object.
     */
    public JobStepExecutionsClient getJobStepExecutions() {
        return this.jobStepExecutions;
    }

    /** The JobStepsClient object to access its operations. */
    private final JobStepsClient jobSteps;

    /**
     * Gets the JobStepsClient object to access its operations.
     *
     * @return the JobStepsClient object.
     */
    public JobStepsClient getJobSteps() {
        return this.jobSteps;
    }

    /** The JobTargetExecutionsClient object to access its operations. */
    private final JobTargetExecutionsClient jobTargetExecutions;

    /**
     * Gets the JobTargetExecutionsClient object to access its operations.
     *
     * @return the JobTargetExecutionsClient object.
     */
    public JobTargetExecutionsClient getJobTargetExecutions() {
        return this.jobTargetExecutions;
    }

    /** The JobTargetGroupsClient object to access its operations. */
    private final JobTargetGroupsClient jobTargetGroups;

    /**
     * Gets the JobTargetGroupsClient object to access its operations.
     *
     * @return the JobTargetGroupsClient object.
     */
    public JobTargetGroupsClient getJobTargetGroups() {
        return this.jobTargetGroups;
    }

    /** The JobVersionsClient object to access its operations. */
    private final JobVersionsClient jobVersions;

    /**
     * Gets the JobVersionsClient object to access its operations.
     *
     * @return the JobVersionsClient object.
     */
    public JobVersionsClient getJobVersions() {
        return this.jobVersions;
    }

    /** The LongTermRetentionBackupsClient object to access its operations. */
    private final LongTermRetentionBackupsClient longTermRetentionBackups;

    /**
     * Gets the LongTermRetentionBackupsClient object to access its operations.
     *
     * @return the LongTermRetentionBackupsClient object.
     */
    public LongTermRetentionBackupsClient getLongTermRetentionBackups() {
        return this.longTermRetentionBackups;
    }

    /** The BackupLongTermRetentionPoliciesClient object to access its operations. */
    private final BackupLongTermRetentionPoliciesClient backupLongTermRetentionPolicies;

    /**
     * Gets the BackupLongTermRetentionPoliciesClient object to access its operations.
     *
     * @return the BackupLongTermRetentionPoliciesClient object.
     */
    public BackupLongTermRetentionPoliciesClient getBackupLongTermRetentionPolicies() {
        return this.backupLongTermRetentionPolicies;
    }

    /** The ManagedBackupShortTermRetentionPoliciesClient object to access its operations. */
    private final ManagedBackupShortTermRetentionPoliciesClient managedBackupShortTermRetentionPolicies;

    /**
     * Gets the ManagedBackupShortTermRetentionPoliciesClient object to access its operations.
     *
     * @return the ManagedBackupShortTermRetentionPoliciesClient object.
     */
    public ManagedBackupShortTermRetentionPoliciesClient getManagedBackupShortTermRetentionPolicies() {
        return this.managedBackupShortTermRetentionPolicies;
    }

    /** The ManagedDatabasesClient object to access its operations. */
    private final ManagedDatabasesClient managedDatabases;

    /**
     * Gets the ManagedDatabasesClient object to access its operations.
     *
     * @return the ManagedDatabasesClient object.
     */
    public ManagedDatabasesClient getManagedDatabases() {
        return this.managedDatabases;
    }

    /** The ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesClient object to access its operations. */
    private final ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesClient
        managedRestorableDroppedDatabaseBackupShortTermRetentionPolicies;

    /**
     * Gets the ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesClient object to access its operations.
     *
     * @return the ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesClient object.
     */
    public ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesClient
        getManagedRestorableDroppedDatabaseBackupShortTermRetentionPolicies() {
        return this.managedRestorableDroppedDatabaseBackupShortTermRetentionPolicies;
    }

    /** The RestorableDroppedManagedDatabasesClient object to access its operations. */
    private final RestorableDroppedManagedDatabasesClient restorableDroppedManagedDatabases;

    /**
     * Gets the RestorableDroppedManagedDatabasesClient object to access its operations.
     *
     * @return the RestorableDroppedManagedDatabasesClient object.
     */
    public RestorableDroppedManagedDatabasesClient getRestorableDroppedManagedDatabases() {
        return this.restorableDroppedManagedDatabases;
    }

    /** The RestorePointsClient object to access its operations. */
    private final RestorePointsClient restorePoints;

    /**
     * Gets the RestorePointsClient object to access its operations.
     *
     * @return the RestorePointsClient object.
     */
    public RestorePointsClient getRestorePoints() {
        return this.restorePoints;
    }

    /** The ServerAutomaticTuningsClient object to access its operations. */
    private final ServerAutomaticTuningsClient serverAutomaticTunings;

    /**
     * Gets the ServerAutomaticTuningsClient object to access its operations.
     *
     * @return the ServerAutomaticTuningsClient object.
     */
    public ServerAutomaticTuningsClient getServerAutomaticTunings() {
        return this.serverAutomaticTunings;
    }

    /** The ServerDnsAliasesClient object to access its operations. */
    private final ServerDnsAliasesClient serverDnsAliases;

    /**
     * Gets the ServerDnsAliasesClient object to access its operations.
     *
     * @return the ServerDnsAliasesClient object.
     */
    public ServerDnsAliasesClient getServerDnsAliases() {
        return this.serverDnsAliases;
    }

    /** The ServerSecurityAlertPoliciesClient object to access its operations. */
    private final ServerSecurityAlertPoliciesClient serverSecurityAlertPolicies;

    /**
     * Gets the ServerSecurityAlertPoliciesClient object to access its operations.
     *
     * @return the ServerSecurityAlertPoliciesClient object.
     */
    public ServerSecurityAlertPoliciesClient getServerSecurityAlertPolicies() {
        return this.serverSecurityAlertPolicies;
    }

    /** The ManagedDatabaseSecurityAlertPoliciesClient object to access its operations. */
    private final ManagedDatabaseSecurityAlertPoliciesClient managedDatabaseSecurityAlertPolicies;

    /**
     * Gets the ManagedDatabaseSecurityAlertPoliciesClient object to access its operations.
     *
     * @return the ManagedDatabaseSecurityAlertPoliciesClient object.
     */
    public ManagedDatabaseSecurityAlertPoliciesClient getManagedDatabaseSecurityAlertPolicies() {
        return this.managedDatabaseSecurityAlertPolicies;
    }

    /** The ManagedServerSecurityAlertPoliciesClient object to access its operations. */
    private final ManagedServerSecurityAlertPoliciesClient managedServerSecurityAlertPolicies;

    /**
     * Gets the ManagedServerSecurityAlertPoliciesClient object to access its operations.
     *
     * @return the ManagedServerSecurityAlertPoliciesClient object.
     */
    public ManagedServerSecurityAlertPoliciesClient getManagedServerSecurityAlertPolicies() {
        return this.managedServerSecurityAlertPolicies;
    }

    /** The SensitivityLabelsClient object to access its operations. */
    private final SensitivityLabelsClient sensitivityLabels;

    /**
     * Gets the SensitivityLabelsClient object to access its operations.
     *
     * @return the SensitivityLabelsClient object.
     */
    public SensitivityLabelsClient getSensitivityLabels() {
        return this.sensitivityLabels;
    }

    /** The ManagedInstanceAdministratorsClient object to access its operations. */
    private final ManagedInstanceAdministratorsClient managedInstanceAdministrators;

    /**
     * Gets the ManagedInstanceAdministratorsClient object to access its operations.
     *
     * @return the ManagedInstanceAdministratorsClient object.
     */
    public ManagedInstanceAdministratorsClient getManagedInstanceAdministrators() {
        return this.managedInstanceAdministrators;
    }

    /**
     * Initializes an instance of SqlManagementClient client.
     *
     * @param httpPipeline The HTTP pipeline to send requests through.
     * @param serializerAdapter The serializer to serialize an object into a string.
     * @param defaultPollInterval The default poll interval for long-running operation.
     * @param environment The Azure environment.
     * @param subscriptionId The subscription ID that identifies an Azure subscription.
     * @param endpoint server parameter.
     */
    SqlManagementClientImpl(
        HttpPipeline httpPipeline,
        SerializerAdapter serializerAdapter,
        Duration defaultPollInterval,
        AzureEnvironment environment,
        String subscriptionId,
        String endpoint) {
        this.httpPipeline = httpPipeline;
        this.serializerAdapter = serializerAdapter;
        this.defaultPollInterval = defaultPollInterval;
        this.subscriptionId = subscriptionId;
        this.endpoint = endpoint;
        this.apiVersion = "2017-03-01-preview";
        this.extendedDatabaseBlobAuditingPolicies = new ExtendedDatabaseBlobAuditingPoliciesClientImpl(this);
        this.extendedServerBlobAuditingPolicies = new ExtendedServerBlobAuditingPoliciesClientImpl(this);
        this.serverBlobAuditingPolicies = new ServerBlobAuditingPoliciesClientImpl(this);
        this.databaseBlobAuditingPolicies = new DatabaseBlobAuditingPoliciesClientImpl(this);
        this.databaseOperations = new DatabaseOperationsClientImpl(this);
        this.databases = new DatabasesClientImpl(this);
        this.databaseVulnerabilityAssessmentRuleBaselines =
            new DatabaseVulnerabilityAssessmentRuleBaselinesClientImpl(this);
        this.databaseVulnerabilityAssessments = new DatabaseVulnerabilityAssessmentsClientImpl(this);
        this.dataWarehouseUserActivitiesOperations = new DataWarehouseUserActivitiesOperationsClientImpl(this);
        this.jobAgents = new JobAgentsClientImpl(this);
        this.jobCredentials = new JobCredentialsClientImpl(this);
        this.jobExecutions = new JobExecutionsClientImpl(this);
        this.jobs = new JobsClientImpl(this);
        this.jobStepExecutions = new JobStepExecutionsClientImpl(this);
        this.jobSteps = new JobStepsClientImpl(this);
        this.jobTargetExecutions = new JobTargetExecutionsClientImpl(this);
        this.jobTargetGroups = new JobTargetGroupsClientImpl(this);
        this.jobVersions = new JobVersionsClientImpl(this);
        this.longTermRetentionBackups = new LongTermRetentionBackupsClientImpl(this);
        this.backupLongTermRetentionPolicies = new BackupLongTermRetentionPoliciesClientImpl(this);
        this.managedBackupShortTermRetentionPolicies = new ManagedBackupShortTermRetentionPoliciesClientImpl(this);
        this.managedDatabases = new ManagedDatabasesClientImpl(this);
        this.managedRestorableDroppedDatabaseBackupShortTermRetentionPolicies =
            new ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesClientImpl(this);
        this.restorableDroppedManagedDatabases = new RestorableDroppedManagedDatabasesClientImpl(this);
        this.restorePoints = new RestorePointsClientImpl(this);
        this.serverAutomaticTunings = new ServerAutomaticTuningsClientImpl(this);
        this.serverDnsAliases = new ServerDnsAliasesClientImpl(this);
        this.serverSecurityAlertPolicies = new ServerSecurityAlertPoliciesClientImpl(this);
        this.managedDatabaseSecurityAlertPolicies = new ManagedDatabaseSecurityAlertPoliciesClientImpl(this);
        this.managedServerSecurityAlertPolicies = new ManagedServerSecurityAlertPoliciesClientImpl(this);
        this.sensitivityLabels = new SensitivityLabelsClientImpl(this);
        this.managedInstanceAdministrators = new ManagedInstanceAdministratorsClientImpl(this);
    }

    /**
     * Gets default client context.
     *
     * @return the default client context.
     */
    public Context getContext() {
        return Context.NONE;
    }

    /**
     * Merges default client context with provided context.
     *
     * @param context the context to be merged with default client context.
     * @return the merged context.
     */
    public Context mergeContext(Context context) {
        for (Map.Entry<Object, Object> entry : this.getContext().getValues().entrySet()) {
            context = context.addData(entry.getKey(), entry.getValue());
        }
        return context;
    }

    /**
     * Gets long running operation result.
     *
     * @param activationResponse the response of activation operation.
     * @param httpPipeline the http pipeline.
     * @param pollResultType type of poll result.
     * @param finalResultType type of final result.
     * @param context the context shared by all requests.
     * @param <T> type of poll result.
     * @param <U> type of final result.
     * @return poller flux for poll result and final result.
     */
    public <T, U> PollerFlux<PollResult<T>, U> getLroResult(
        Mono<Response<Flux<ByteBuffer>>> activationResponse,
        HttpPipeline httpPipeline,
        Type pollResultType,
        Type finalResultType,
        Context context) {
        return PollerFactory
            .create(
                serializerAdapter,
                httpPipeline,
                pollResultType,
                finalResultType,
                defaultPollInterval,
                activationResponse,
                context);
    }

    /**
     * Gets the final result, or an error, based on last async poll response.
     *
     * @param response the last async poll response.
     * @param <T> type of poll result.
     * @param <U> type of final result.
     * @return the final result, or an error.
     */
    public <T, U> Mono<U> getLroFinalResultOrError(AsyncPollResponse<PollResult<T>, U> response) {
        if (response.getStatus() != LongRunningOperationStatus.SUCCESSFULLY_COMPLETED) {
            String errorMessage;
            ManagementError managementError = null;
            HttpResponse errorResponse = null;
            PollResult.Error lroError = response.getValue().getError();
            if (lroError != null) {
                errorResponse =
                    new HttpResponseImpl(
                        lroError.getResponseStatusCode(), lroError.getResponseHeaders(), lroError.getResponseBody());

                errorMessage = response.getValue().getError().getMessage();
                String errorBody = response.getValue().getError().getResponseBody();
                if (errorBody != null) {
                    // try to deserialize error body to ManagementError
                    try {
                        managementError =
                            this
                                .getSerializerAdapter()
                                .deserialize(errorBody, ManagementError.class, SerializerEncoding.JSON);
                        if (managementError.getCode() == null || managementError.getMessage() == null) {
                            managementError = null;
                        }
                    } catch (IOException ioe) {
                        logger.logThrowableAsWarning(ioe);
                    }
                }
            } else {
                // fallback to default error message
                errorMessage = "Long running operation failed.";
            }
            if (managementError == null) {
                // fallback to default ManagementError
                managementError = new ManagementError(response.getStatus().toString(), errorMessage);
            }
            return Mono.error(new ManagementException(errorMessage, errorResponse, managementError));
        } else {
            return response.getFinalResult();
        }
    }

    private static final class HttpResponseImpl extends HttpResponse {
        private final int statusCode;

        private final byte[] responseBody;

        private final HttpHeaders httpHeaders;

        HttpResponseImpl(int statusCode, HttpHeaders httpHeaders, String responseBody) {
            super(null);
            this.statusCode = statusCode;
            this.httpHeaders = httpHeaders;
            this.responseBody = responseBody.getBytes(StandardCharsets.UTF_8);
        }

        public int getStatusCode() {
            return statusCode;
        }

        public String getHeaderValue(String s) {
            return httpHeaders.getValue(s);
        }

        public HttpHeaders getHeaders() {
            return httpHeaders;
        }

        public Flux<ByteBuffer> getBody() {
            return Flux.just(ByteBuffer.wrap(responseBody));
        }

        public Mono<byte[]> getBodyAsByteArray() {
            return Mono.just(responseBody);
        }

        public Mono<String> getBodyAsString() {
            return Mono.just(new String(responseBody, StandardCharsets.UTF_8));
        }

        public Mono<String> getBodyAsString(Charset charset) {
            return Mono.just(new String(responseBody, charset));
        }
    }
}
