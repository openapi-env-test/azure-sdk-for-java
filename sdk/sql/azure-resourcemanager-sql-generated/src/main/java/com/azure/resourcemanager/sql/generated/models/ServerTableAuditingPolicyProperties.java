// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import java.util.UUID;

/** Properties of a server table auditing policy. */
@Immutable
public final class ServerTableAuditingPolicyProperties extends TableAuditingPolicyProperties {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ServerTableAuditingPolicyProperties.class);

    /** {@inheritDoc} */
    @Override
    public ServerTableAuditingPolicyProperties withAuditingState(String auditingState) {
        super.withAuditingState(auditingState);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ServerTableAuditingPolicyProperties withAuditLogsTableName(String auditLogsTableName) {
        super.withAuditLogsTableName(auditLogsTableName);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ServerTableAuditingPolicyProperties withEventTypesToAudit(String eventTypesToAudit) {
        super.withEventTypesToAudit(eventTypesToAudit);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ServerTableAuditingPolicyProperties withFullAuditLogsTableName(String fullAuditLogsTableName) {
        super.withFullAuditLogsTableName(fullAuditLogsTableName);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ServerTableAuditingPolicyProperties withRetentionDays(String retentionDays) {
        super.withRetentionDays(retentionDays);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ServerTableAuditingPolicyProperties withStorageAccountKey(String storageAccountKey) {
        super.withStorageAccountKey(storageAccountKey);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ServerTableAuditingPolicyProperties withStorageAccountName(String storageAccountName) {
        super.withStorageAccountName(storageAccountName);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ServerTableAuditingPolicyProperties withStorageAccountResourceGroupName(
        String storageAccountResourceGroupName) {
        super.withStorageAccountResourceGroupName(storageAccountResourceGroupName);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ServerTableAuditingPolicyProperties withStorageAccountSecondaryKey(String storageAccountSecondaryKey) {
        super.withStorageAccountSecondaryKey(storageAccountSecondaryKey);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ServerTableAuditingPolicyProperties withStorageAccountSubscriptionId(UUID storageAccountSubscriptionId) {
        super.withStorageAccountSubscriptionId(storageAccountSubscriptionId);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ServerTableAuditingPolicyProperties withStorageTableEndpoint(String storageTableEndpoint) {
        super.withStorageTableEndpoint(storageTableEndpoint);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
