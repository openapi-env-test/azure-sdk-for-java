// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.util.Context;

/** Resource collection API of TransparentDataEncryptionConfigurations. */
public interface TransparentDataEncryptionConfigurations {
    /**
     * Gets a list of a database's transparent data encryption configurations. There is only ever one element, named
     * 'current', so GetTransparentDataEncryptionConfiguration should be used instead.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     *     from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param databaseName The name of the database for which the transparent data encryption applies.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of a database's transparent data encryption configurations.
     */
    PagedIterable<TransparentDataEncryption> listByDatabase(
        String resourceGroupName, String serverName, String databaseName);

    /**
     * Gets a list of a database's transparent data encryption configurations. There is only ever one element, named
     * 'current', so GetTransparentDataEncryptionConfiguration should be used instead.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     *     from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param databaseName The name of the database for which the transparent data encryption applies.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of a database's transparent data encryption configurations.
     */
    PagedIterable<TransparentDataEncryption> listByDatabase(
        String resourceGroupName, String serverName, String databaseName, Context context);
}
