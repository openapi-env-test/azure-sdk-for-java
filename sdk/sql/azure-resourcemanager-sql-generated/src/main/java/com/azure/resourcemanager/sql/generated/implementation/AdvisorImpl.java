// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.implementation;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.sql.generated.SqlManager;
import com.azure.resourcemanager.sql.generated.fluent.models.AdvisorInner;
import com.azure.resourcemanager.sql.generated.models.Advisor;
import com.azure.resourcemanager.sql.generated.models.AdvisorStatus;
import com.azure.resourcemanager.sql.generated.models.AutoExecuteStatus;
import java.time.OffsetDateTime;

public final class AdvisorImpl implements Advisor, Advisor.Definition, Advisor.Update {
    private AdvisorInner innerObject;

    private final SqlManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String kind() {
        return this.innerModel().kind();
    }

    public String location() {
        return this.innerModel().location();
    }

    public AdvisorStatus advisorStatus() {
        return this.innerModel().advisorStatus();
    }

    public AutoExecuteStatus autoExecuteValue() {
        return this.innerModel().autoExecuteValue();
    }

    public String recommendationsStatus() {
        return this.innerModel().recommendationsStatus();
    }

    public OffsetDateTime lastChecked() {
        return this.innerModel().lastChecked();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public AdvisorInner innerModel() {
        return this.innerObject;
    }

    private SqlManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String serverName;

    private String advisorName;

    public AdvisorImpl withExistingServer(String resourceGroupName, String serverName) {
        this.resourceGroupName = resourceGroupName;
        this.serverName = serverName;
        return this;
    }

    public Advisor create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getServerAdvisors()
                .createOrUpdateWithResponse(resourceGroupName, serverName, advisorName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public Advisor create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getServerAdvisors()
                .createOrUpdateWithResponse(resourceGroupName, serverName, advisorName, this.innerModel(), context)
                .getValue();
        return this;
    }

    AdvisorImpl(String name, SqlManager serviceManager) {
        this.innerObject = new AdvisorInner();
        this.serviceManager = serviceManager;
        this.advisorName = name;
    }

    public AdvisorImpl update() {
        return this;
    }

    public Advisor apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getServerAdvisors()
                .updateWithResponse(resourceGroupName, serverName, advisorName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public Advisor apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getServerAdvisors()
                .updateWithResponse(resourceGroupName, serverName, advisorName, this.innerModel(), context)
                .getValue();
        return this;
    }

    AdvisorImpl(AdvisorInner innerObject, SqlManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.serverName = Utils.getValueFromIdByName(innerObject.id(), "servers");
        this.advisorName = Utils.getValueFromIdByName(innerObject.id(), "advisors");
    }

    public Advisor refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getServerAdvisors()
                .getWithResponse(resourceGroupName, serverName, advisorName, Context.NONE)
                .getValue();
        return this;
    }

    public Advisor refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getServerAdvisors()
                .getWithResponse(resourceGroupName, serverName, advisorName, context)
                .getValue();
        return this;
    }

    public AdvisorImpl withAutoExecuteValue(AutoExecuteStatus autoExecuteValue) {
        this.innerModel().withAutoExecuteValue(autoExecuteValue);
        return this;
    }
}
