// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.sql.generated.SqlManager;
import com.azure.resourcemanager.sql.generated.fluent.DatabaseRecommendedActionsClient;
import com.azure.resourcemanager.sql.generated.fluent.models.RecommendedActionAutoGeneratedInner;
import com.azure.resourcemanager.sql.generated.models.DatabaseRecommendedActions;
import com.azure.resourcemanager.sql.generated.models.RecommendedActionAutoGenerated;
import com.fasterxml.jackson.annotation.JsonIgnore;
import java.util.Collections;
import java.util.List;
import java.util.stream.Collectors;

public final class DatabaseRecommendedActionsImpl implements DatabaseRecommendedActions {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(DatabaseRecommendedActionsImpl.class);

    private final DatabaseRecommendedActionsClient innerClient;

    private final SqlManager serviceManager;

    public DatabaseRecommendedActionsImpl(DatabaseRecommendedActionsClient innerClient, SqlManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public List<RecommendedActionAutoGenerated> listByDatabaseAdvisor(
        String resourceGroupName, String serverName, String databaseName, String advisorName) {
        List<RecommendedActionAutoGeneratedInner> inner =
            this.serviceClient().listByDatabaseAdvisor(resourceGroupName, serverName, databaseName, advisorName);
        if (inner != null) {
            return Collections
                .unmodifiableList(
                    inner
                        .stream()
                        .map(inner1 -> new RecommendedActionAutoGeneratedImpl(inner1, this.manager()))
                        .collect(Collectors.toList()));
        } else {
            return Collections.emptyList();
        }
    }

    public Response<List<RecommendedActionAutoGenerated>> listByDatabaseAdvisorWithResponse(
        String resourceGroupName, String serverName, String databaseName, String advisorName, Context context) {
        Response<List<RecommendedActionAutoGeneratedInner>> inner =
            this
                .serviceClient()
                .listByDatabaseAdvisorWithResponse(resourceGroupName, serverName, databaseName, advisorName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                inner
                    .getValue()
                    .stream()
                    .map(inner1 -> new RecommendedActionAutoGeneratedImpl(inner1, this.manager()))
                    .collect(Collectors.toList()));
        } else {
            return null;
        }
    }

    public RecommendedActionAutoGenerated get(
        String resourceGroupName,
        String serverName,
        String databaseName,
        String advisorName,
        String recommendedActionName) {
        RecommendedActionAutoGeneratedInner inner =
            this.serviceClient().get(resourceGroupName, serverName, databaseName, advisorName, recommendedActionName);
        if (inner != null) {
            return new RecommendedActionAutoGeneratedImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<RecommendedActionAutoGenerated> getWithResponse(
        String resourceGroupName,
        String serverName,
        String databaseName,
        String advisorName,
        String recommendedActionName,
        Context context) {
        Response<RecommendedActionAutoGeneratedInner> inner =
            this
                .serviceClient()
                .getWithResponse(
                    resourceGroupName, serverName, databaseName, advisorName, recommendedActionName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new RecommendedActionAutoGeneratedImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public RecommendedActionAutoGenerated update(
        String resourceGroupName,
        String serverName,
        String databaseName,
        String advisorName,
        String recommendedActionName,
        RecommendedActionAutoGeneratedInner parameters) {
        RecommendedActionAutoGeneratedInner inner =
            this
                .serviceClient()
                .update(resourceGroupName, serverName, databaseName, advisorName, recommendedActionName, parameters);
        if (inner != null) {
            return new RecommendedActionAutoGeneratedImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<RecommendedActionAutoGenerated> updateWithResponse(
        String resourceGroupName,
        String serverName,
        String databaseName,
        String advisorName,
        String recommendedActionName,
        RecommendedActionAutoGeneratedInner parameters,
        Context context) {
        Response<RecommendedActionAutoGeneratedInner> inner =
            this
                .serviceClient()
                .updateWithResponse(
                    resourceGroupName,
                    serverName,
                    databaseName,
                    advisorName,
                    recommendedActionName,
                    parameters,
                    context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new RecommendedActionAutoGeneratedImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    private DatabaseRecommendedActionsClient serviceClient() {
        return this.innerClient;
    }

    private SqlManager manager() {
        return this.serviceManager;
    }
}
