// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azurestackhci.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.Resource;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.azurestackhci.models.ClusterReportedProperties;
import com.azure.resourcemanager.azurestackhci.models.ProvisioningState;
import com.azure.resourcemanager.azurestackhci.models.Status;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.Map;

/** Cluster details. */
@JsonFlatten
@Fluent
public class ClusterInner extends Resource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ClusterInner.class);

    /*
     * Provisioning state.
     */
    @JsonProperty(value = "properties.provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /*
     * Status of the cluster agent.
     */
    @JsonProperty(value = "properties.status", access = JsonProperty.Access.WRITE_ONLY)
    private Status status;

    /*
     * Unique, immutable resource id.
     */
    @JsonProperty(value = "properties.cloudId", access = JsonProperty.Access.WRITE_ONLY)
    private String cloudId;

    /*
     * App id of cluster AAD identity.
     */
    @JsonProperty(value = "properties.aadClientId")
    private String aadClientId;

    /*
     * Tenant id of cluster AAD identity.
     */
    @JsonProperty(value = "properties.aadTenantId")
    private String aadTenantId;

    /*
     * Properties reported by cluster agent.
     */
    @JsonProperty(value = "properties.reportedProperties")
    private ClusterReportedProperties reportedProperties;

    /*
     * Number of days remaining in the trial period.
     */
    @JsonProperty(value = "properties.trialDaysRemaining", access = JsonProperty.Access.WRITE_ONLY)
    private Float trialDaysRemaining;

    /*
     * Type of billing applied to the resource.
     */
    @JsonProperty(value = "properties.billingModel", access = JsonProperty.Access.WRITE_ONLY)
    private String billingModel;

    /*
     * First cluster sync timestamp.
     */
    @JsonProperty(value = "properties.registrationTimestamp", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime registrationTimestamp;

    /*
     * Most recent cluster sync timestamp.
     */
    @JsonProperty(value = "properties.lastSyncTimestamp", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime lastSyncTimestamp;

    /*
     * Most recent billing meter timestamp.
     */
    @JsonProperty(value = "properties.lastBillingTimestamp", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime lastBillingTimestamp;

    /**
     * Get the provisioningState property: Provisioning state.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the status property: Status of the cluster agent.
     *
     * @return the status value.
     */
    public Status status() {
        return this.status;
    }

    /**
     * Get the cloudId property: Unique, immutable resource id.
     *
     * @return the cloudId value.
     */
    public String cloudId() {
        return this.cloudId;
    }

    /**
     * Get the aadClientId property: App id of cluster AAD identity.
     *
     * @return the aadClientId value.
     */
    public String aadClientId() {
        return this.aadClientId;
    }

    /**
     * Set the aadClientId property: App id of cluster AAD identity.
     *
     * @param aadClientId the aadClientId value to set.
     * @return the ClusterInner object itself.
     */
    public ClusterInner withAadClientId(String aadClientId) {
        this.aadClientId = aadClientId;
        return this;
    }

    /**
     * Get the aadTenantId property: Tenant id of cluster AAD identity.
     *
     * @return the aadTenantId value.
     */
    public String aadTenantId() {
        return this.aadTenantId;
    }

    /**
     * Set the aadTenantId property: Tenant id of cluster AAD identity.
     *
     * @param aadTenantId the aadTenantId value to set.
     * @return the ClusterInner object itself.
     */
    public ClusterInner withAadTenantId(String aadTenantId) {
        this.aadTenantId = aadTenantId;
        return this;
    }

    /**
     * Get the reportedProperties property: Properties reported by cluster agent.
     *
     * @return the reportedProperties value.
     */
    public ClusterReportedProperties reportedProperties() {
        return this.reportedProperties;
    }

    /**
     * Set the reportedProperties property: Properties reported by cluster agent.
     *
     * @param reportedProperties the reportedProperties value to set.
     * @return the ClusterInner object itself.
     */
    public ClusterInner withReportedProperties(ClusterReportedProperties reportedProperties) {
        this.reportedProperties = reportedProperties;
        return this;
    }

    /**
     * Get the trialDaysRemaining property: Number of days remaining in the trial period.
     *
     * @return the trialDaysRemaining value.
     */
    public Float trialDaysRemaining() {
        return this.trialDaysRemaining;
    }

    /**
     * Get the billingModel property: Type of billing applied to the resource.
     *
     * @return the billingModel value.
     */
    public String billingModel() {
        return this.billingModel;
    }

    /**
     * Get the registrationTimestamp property: First cluster sync timestamp.
     *
     * @return the registrationTimestamp value.
     */
    public OffsetDateTime registrationTimestamp() {
        return this.registrationTimestamp;
    }

    /**
     * Get the lastSyncTimestamp property: Most recent cluster sync timestamp.
     *
     * @return the lastSyncTimestamp value.
     */
    public OffsetDateTime lastSyncTimestamp() {
        return this.lastSyncTimestamp;
    }

    /**
     * Get the lastBillingTimestamp property: Most recent billing meter timestamp.
     *
     * @return the lastBillingTimestamp value.
     */
    public OffsetDateTime lastBillingTimestamp() {
        return this.lastBillingTimestamp;
    }

    /** {@inheritDoc} */
    @Override
    public ClusterInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ClusterInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (reportedProperties() != null) {
            reportedProperties().validate();
        }
    }
}
