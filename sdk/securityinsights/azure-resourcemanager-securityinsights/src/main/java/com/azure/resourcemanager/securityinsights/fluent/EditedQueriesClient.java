// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.securityinsights.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.securityinsights.fluent.models.EditedQueryInner;

/** An instance of this class provides access to all the operations defined in EditedQueriesClient. */
public interface EditedQueriesClient {
    /**
     * Gets all edited queries.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param queryId Query Id.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all edited queries as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<EditedQueryInner> list(String resourceGroupName, String workspaceName, String queryId);

    /**
     * Gets all edited queries.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param queryId Query Id.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return all edited queries as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<EditedQueryInner> list(
        String resourceGroupName, String workspaceName, String queryId, Context context);

    /**
     * Gets an edited query.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param queryId Query Id.
     * @param editedQueryId Edited Query Id (GUID).
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an edited query.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    EditedQueryInner get(String resourceGroupName, String workspaceName, String queryId, String editedQueryId);

    /**
     * Gets an edited query.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param queryId Query Id.
     * @param editedQueryId Edited Query Id (GUID).
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an edited query along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<EditedQueryInner> getWithResponse(
        String resourceGroupName, String workspaceName, String queryId, String editedQueryId, Context context);

    /**
     * Delete an edited queries.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param queryId Query Id.
     * @param editedQueryId Edited Query Id (GUID).
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String workspaceName, String queryId, String editedQueryId);

    /**
     * Delete an edited queries.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param queryId Query Id.
     * @param editedQueryId Edited Query Id (GUID).
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(
        String resourceGroupName, String workspaceName, String queryId, String editedQueryId, Context context);

    /**
     * Creates or updates an edited query.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param queryId Query Id.
     * @param editedQueryId Edited Query Id (GUID).
     * @param editedQuery The edited query.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a Edited Query in Azure Security Insights.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    EditedQueryInner createOrUpdate(
        String resourceGroupName,
        String workspaceName,
        String queryId,
        String editedQueryId,
        EditedQueryInner editedQuery);

    /**
     * Creates or updates an edited query.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param queryId Query Id.
     * @param editedQueryId Edited Query Id (GUID).
     * @param editedQuery The edited query.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents a Edited Query in Azure Security Insights along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<EditedQueryInner> createOrUpdateWithResponse(
        String resourceGroupName,
        String workspaceName,
        String queryId,
        String editedQueryId,
        EditedQueryInner editedQuery,
        Context context);
}
