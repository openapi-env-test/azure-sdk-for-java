// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azuredata.models;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.azuredata.fluent.models.SqlManagedInstanceInner;
import java.util.Map;

/** An immutable client-side representation of SqlManagedInstance. */
public interface SqlManagedInstance {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the dataControllerId property: null.
     *
     * @return the dataControllerId value.
     */
    String dataControllerId();

    /**
     * Gets the instanceEndpoint property: The on premise instance endpoint.
     *
     * @return the instanceEndpoint value.
     */
    String instanceEndpoint();

    /**
     * Gets the admin property: The instance admin user.
     *
     * @return the admin value.
     */
    String admin();

    /**
     * Gets the startTime property: The instance start time.
     *
     * @return the startTime value.
     */
    String startTime();

    /**
     * Gets the endTime property: The instance end time.
     *
     * @return the endTime value.
     */
    String endTime();

    /**
     * Gets the vCore property: The instance vCore.
     *
     * @return the vCore value.
     */
    String vCore();

    /**
     * Gets the systemData property: Read only system data.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the inner com.azure.resourcemanager.azuredata.fluent.models.SqlManagedInstanceInner object.
     *
     * @return the inner object.
     */
    SqlManagedInstanceInner innerModel();

    /** The entirety of the SqlManagedInstance definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithResourceGroup,
            DefinitionStages.WithCreate {
    }
    /** The SqlManagedInstance definition stages. */
    interface DefinitionStages {
        /** The first stage of the SqlManagedInstance definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the SqlManagedInstance definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }
        /** The stage of the SqlManagedInstance definition allowing to specify parent resource. */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             *
             * @param resourceGroupName The name of the Azure resource group.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceGroup(String resourceGroupName);
        }
        /**
         * The stage of the SqlManagedInstance definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags,
                DefinitionStages.WithDataControllerId,
                DefinitionStages.WithInstanceEndpoint,
                DefinitionStages.WithAdmin,
                DefinitionStages.WithStartTime,
                DefinitionStages.WithEndTime,
                DefinitionStages.WithVCore {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            SqlManagedInstance create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            SqlManagedInstance create(Context context);
        }
        /** The stage of the SqlManagedInstance definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the SqlManagedInstance definition allowing to specify dataControllerId. */
        interface WithDataControllerId {
            /**
             * Specifies the dataControllerId property: null.
             *
             * @param dataControllerId null.
             * @return the next definition stage.
             */
            WithCreate withDataControllerId(String dataControllerId);
        }
        /** The stage of the SqlManagedInstance definition allowing to specify instanceEndpoint. */
        interface WithInstanceEndpoint {
            /**
             * Specifies the instanceEndpoint property: The on premise instance endpoint.
             *
             * @param instanceEndpoint The on premise instance endpoint.
             * @return the next definition stage.
             */
            WithCreate withInstanceEndpoint(String instanceEndpoint);
        }
        /** The stage of the SqlManagedInstance definition allowing to specify admin. */
        interface WithAdmin {
            /**
             * Specifies the admin property: The instance admin user.
             *
             * @param admin The instance admin user.
             * @return the next definition stage.
             */
            WithCreate withAdmin(String admin);
        }
        /** The stage of the SqlManagedInstance definition allowing to specify startTime. */
        interface WithStartTime {
            /**
             * Specifies the startTime property: The instance start time.
             *
             * @param startTime The instance start time.
             * @return the next definition stage.
             */
            WithCreate withStartTime(String startTime);
        }
        /** The stage of the SqlManagedInstance definition allowing to specify endTime. */
        interface WithEndTime {
            /**
             * Specifies the endTime property: The instance end time.
             *
             * @param endTime The instance end time.
             * @return the next definition stage.
             */
            WithCreate withEndTime(String endTime);
        }
        /** The stage of the SqlManagedInstance definition allowing to specify vCore. */
        interface WithVCore {
            /**
             * Specifies the vCore property: The instance vCore.
             *
             * @param vCore The instance vCore.
             * @return the next definition stage.
             */
            WithCreate withVCore(String vCore);
        }
    }
    /**
     * Begins update for the SqlManagedInstance resource.
     *
     * @return the stage of resource update.
     */
    SqlManagedInstance.Update update();

    /** The template for SqlManagedInstance update. */
    interface Update extends UpdateStages.WithTags {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        SqlManagedInstance apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        SqlManagedInstance apply(Context context);
    }
    /** The SqlManagedInstance update stages. */
    interface UpdateStages {
        /** The stage of the SqlManagedInstance update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    SqlManagedInstance refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    SqlManagedInstance refresh(Context context);
}
