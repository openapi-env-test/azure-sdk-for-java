// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azuredata.models;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.azuredata.fluent.models.SqlServerInstanceInner;
import java.util.Map;

/** An immutable client-side representation of SqlServerInstance. */
public interface SqlServerInstance {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the version property: SQL Server version.
     *
     * @return the version value.
     */
    String version();

    /**
     * Gets the edition property: SQL Server edition.
     *
     * @return the edition value.
     */
    String edition();

    /**
     * Gets the containerResourceId property: ARM Resource id of the container resource (Azure Arc for Servers).
     *
     * @return the containerResourceId value.
     */
    String containerResourceId();

    /**
     * Gets the createTime property: The time when the resource was created.
     *
     * @return the createTime value.
     */
    String createTime();

    /**
     * Gets the updateTime property: The time when the resource was last updated.
     *
     * @return the updateTime value.
     */
    String updateTime();

    /**
     * Gets the vCore property: The number of logical processors used by the SQL Server instance.
     *
     * @return the vCore value.
     */
    String vCore();

    /**
     * Gets the status property: The cloud connectivity status.
     *
     * @return the status value.
     */
    String status();

    /**
     * Gets the systemData property: Read only system data.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the inner com.azure.resourcemanager.azuredata.fluent.models.SqlServerInstanceInner object.
     *
     * @return the inner object.
     */
    SqlServerInstanceInner innerModel();

    /** The entirety of the SqlServerInstance definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithResourceGroup,
            DefinitionStages.WithCreate {
    }
    /** The SqlServerInstance definition stages. */
    interface DefinitionStages {
        /** The first stage of the SqlServerInstance definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the SqlServerInstance definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }
        /** The stage of the SqlServerInstance definition allowing to specify parent resource. */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             *
             * @param resourceGroupName The name of the Azure resource group.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceGroup(String resourceGroupName);
        }
        /**
         * The stage of the SqlServerInstance definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags,
                DefinitionStages.WithVersion,
                DefinitionStages.WithEdition,
                DefinitionStages.WithContainerResourceId,
                DefinitionStages.WithVCore,
                DefinitionStages.WithStatus {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            SqlServerInstance create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            SqlServerInstance create(Context context);
        }
        /** The stage of the SqlServerInstance definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the SqlServerInstance definition allowing to specify version. */
        interface WithVersion {
            /**
             * Specifies the version property: SQL Server version..
             *
             * @param version SQL Server version.
             * @return the next definition stage.
             */
            WithCreate withVersion(String version);
        }
        /** The stage of the SqlServerInstance definition allowing to specify edition. */
        interface WithEdition {
            /**
             * Specifies the edition property: SQL Server edition..
             *
             * @param edition SQL Server edition.
             * @return the next definition stage.
             */
            WithCreate withEdition(String edition);
        }
        /** The stage of the SqlServerInstance definition allowing to specify containerResourceId. */
        interface WithContainerResourceId {
            /**
             * Specifies the containerResourceId property: ARM Resource id of the container resource (Azure Arc for
             * Servers).
             *
             * @param containerResourceId ARM Resource id of the container resource (Azure Arc for Servers).
             * @return the next definition stage.
             */
            WithCreate withContainerResourceId(String containerResourceId);
        }
        /** The stage of the SqlServerInstance definition allowing to specify vCore. */
        interface WithVCore {
            /**
             * Specifies the vCore property: The number of logical processors used by the SQL Server instance..
             *
             * @param vCore The number of logical processors used by the SQL Server instance.
             * @return the next definition stage.
             */
            WithCreate withVCore(String vCore);
        }
        /** The stage of the SqlServerInstance definition allowing to specify status. */
        interface WithStatus {
            /**
             * Specifies the status property: The cloud connectivity status..
             *
             * @param status The cloud connectivity status.
             * @return the next definition stage.
             */
            WithCreate withStatus(String status);
        }
    }
    /**
     * Begins update for the SqlServerInstance resource.
     *
     * @return the stage of resource update.
     */
    SqlServerInstance.Update update();

    /** The template for SqlServerInstance update. */
    interface Update extends UpdateStages.WithTags {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        SqlServerInstance apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        SqlServerInstance apply(Context context);
    }
    /** The SqlServerInstance update stages. */
    interface UpdateStages {
        /** The stage of the SqlServerInstance update allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            Update withTags(Map<String, String> tags);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    SqlServerInstance refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    SqlServerInstance refresh(Context context);
}
