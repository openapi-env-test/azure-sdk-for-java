// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azuredata.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** An update to a Postgres Instance. */
@Fluent
public final class PostgresInstanceUpdate {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(PostgresInstanceUpdate.class);

    /*
     * Resource tags.
     */
    @JsonProperty(value = "tags")
    private Map<String, String> tags;

    /*
     * null
     */
    @JsonProperty(value = "hybridDataManagerId")
    private String hybridDataManagerId;

    /**
     * Get the tags property: Resource tags.
     *
     * @return the tags value.
     */
    public Map<String, String> tags() {
        return this.tags;
    }

    /**
     * Set the tags property: Resource tags.
     *
     * @param tags the tags value to set.
     * @return the PostgresInstanceUpdate object itself.
     */
    public PostgresInstanceUpdate withTags(Map<String, String> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get the hybridDataManagerId property: null.
     *
     * @return the hybridDataManagerId value.
     */
    public String hybridDataManagerId() {
        return this.hybridDataManagerId;
    }

    /**
     * Set the hybridDataManagerId property: null.
     *
     * @param hybridDataManagerId the hybridDataManagerId value to set.
     * @return the PostgresInstanceUpdate object itself.
     */
    public PostgresInstanceUpdate withHybridDataManagerId(String hybridDataManagerId) {
        this.hybridDataManagerId = hybridDataManagerId;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
