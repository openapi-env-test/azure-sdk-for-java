// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.azuredata.implementation;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.azuredata.AzureDataManager;
import com.azure.resourcemanager.azuredata.fluent.models.SqlServerInstanceInner;
import com.azure.resourcemanager.azuredata.models.SqlServerInstance;
import com.azure.resourcemanager.azuredata.models.SqlServerInstanceUpdate;
import com.azure.resourcemanager.azuredata.models.SystemData;
import java.util.Collections;
import java.util.Map;

public final class SqlServerInstanceImpl
    implements SqlServerInstance, SqlServerInstance.Definition, SqlServerInstance.Update {
    private SqlServerInstanceInner innerObject;

    private final AzureDataManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public String version() {
        return this.innerModel().version();
    }

    public String edition() {
        return this.innerModel().edition();
    }

    public String containerResourceId() {
        return this.innerModel().containerResourceId();
    }

    public String createTime() {
        return this.innerModel().createTime();
    }

    public String updateTime() {
        return this.innerModel().updateTime();
    }

    public String vCore() {
        return this.innerModel().vCore();
    }

    public String status() {
        return this.innerModel().status();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public SqlServerInstanceInner innerModel() {
        return this.innerObject;
    }

    private AzureDataManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String sqlServerInstanceName;

    private SqlServerInstanceUpdate updateParameters;

    public SqlServerInstanceImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public SqlServerInstance create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSqlServerInstances()
                .createWithResponse(resourceGroupName, sqlServerInstanceName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public SqlServerInstance create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSqlServerInstances()
                .createWithResponse(resourceGroupName, sqlServerInstanceName, this.innerModel(), context)
                .getValue();
        return this;
    }

    SqlServerInstanceImpl(String name, AzureDataManager serviceManager) {
        this.innerObject = new SqlServerInstanceInner();
        this.serviceManager = serviceManager;
        this.sqlServerInstanceName = name;
    }

    public SqlServerInstanceImpl update() {
        this.updateParameters = new SqlServerInstanceUpdate();
        return this;
    }

    public SqlServerInstance apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSqlServerInstances()
                .updateWithResponse(resourceGroupName, sqlServerInstanceName, updateParameters, Context.NONE)
                .getValue();
        return this;
    }

    public SqlServerInstance apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSqlServerInstances()
                .updateWithResponse(resourceGroupName, sqlServerInstanceName, updateParameters, context)
                .getValue();
        return this;
    }

    SqlServerInstanceImpl(SqlServerInstanceInner innerObject, AzureDataManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.sqlServerInstanceName = Utils.getValueFromIdByName(innerObject.id(), "sqlServerInstances");
    }

    public SqlServerInstance refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSqlServerInstances()
                .getByResourceGroupWithResponse(resourceGroupName, sqlServerInstanceName, Context.NONE)
                .getValue();
        return this;
    }

    public SqlServerInstance refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getSqlServerInstances()
                .getByResourceGroupWithResponse(resourceGroupName, sqlServerInstanceName, context)
                .getValue();
        return this;
    }

    public SqlServerInstanceImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public SqlServerInstanceImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public SqlServerInstanceImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateParameters.withTags(tags);
            return this;
        }
    }

    public SqlServerInstanceImpl withVersion(String version) {
        this.innerModel().withVersion(version);
        return this;
    }

    public SqlServerInstanceImpl withEdition(String edition) {
        this.innerModel().withEdition(edition);
        return this;
    }

    public SqlServerInstanceImpl withContainerResourceId(String containerResourceId) {
        this.innerModel().withContainerResourceId(containerResourceId);
        return this;
    }

    public SqlServerInstanceImpl withVCore(String vCore) {
        this.innerModel().withVCore(vCore);
        return this;
    }

    public SqlServerInstanceImpl withStatus(String status) {
        this.innerModel().withStatus(status);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
