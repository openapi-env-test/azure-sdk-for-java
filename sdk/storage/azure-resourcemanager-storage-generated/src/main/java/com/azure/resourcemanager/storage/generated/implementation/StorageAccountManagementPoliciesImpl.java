// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.storage.generated.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.storage.generated.StorageManager;
import com.azure.resourcemanager.storage.generated.fluent.models.StorageAccountManagementPoliciesInner;
import com.azure.resourcemanager.storage.generated.models.ManagementPoliciesRulesSetParameter;
import com.azure.resourcemanager.storage.generated.models.ManagementPolicyName;
import com.azure.resourcemanager.storage.generated.models.StorageAccountManagementPolicies;
import java.time.OffsetDateTime;

public final class StorageAccountManagementPoliciesImpl
    implements StorageAccountManagementPolicies,
        StorageAccountManagementPolicies.Definition,
        StorageAccountManagementPolicies.Update {
    private StorageAccountManagementPoliciesInner innerObject;

    private final StorageManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public Object policy() {
        return this.innerModel().policy();
    }

    public OffsetDateTime lastModifiedTime() {
        return this.innerModel().lastModifiedTime();
    }

    public StorageAccountManagementPoliciesInner innerModel() {
        return this.innerObject;
    }

    private StorageManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String accountName;

    private ManagementPolicyName managementPolicyName;

    private ManagementPoliciesRulesSetParameter createProperties;

    private ManagementPoliciesRulesSetParameter updateProperties;

    public StorageAccountManagementPoliciesImpl withExistingStorageAccount(
        String resourceGroupName, String accountName) {
        this.resourceGroupName = resourceGroupName;
        this.accountName = accountName;
        return this;
    }

    public StorageAccountManagementPolicies create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getStorageAccounts()
                .createOrUpdateManagementPoliciesWithResponse(
                    resourceGroupName, accountName, managementPolicyName, createProperties, Context.NONE)
                .getValue();
        return this;
    }

    public StorageAccountManagementPolicies create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getStorageAccounts()
                .createOrUpdateManagementPoliciesWithResponse(
                    resourceGroupName, accountName, managementPolicyName, createProperties, context)
                .getValue();
        return this;
    }

    StorageAccountManagementPoliciesImpl(ManagementPolicyName name, StorageManager serviceManager) {
        this.innerObject = new StorageAccountManagementPoliciesInner();
        this.serviceManager = serviceManager;
        this.managementPolicyName = name;
        this.createProperties = new ManagementPoliciesRulesSetParameter();
    }

    public StorageAccountManagementPoliciesImpl update() {
        this.updateProperties = new ManagementPoliciesRulesSetParameter();
        return this;
    }

    public StorageAccountManagementPolicies apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getStorageAccounts()
                .createOrUpdateManagementPoliciesWithResponse(
                    resourceGroupName, accountName, managementPolicyName, updateProperties, Context.NONE)
                .getValue();
        return this;
    }

    public StorageAccountManagementPolicies apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getStorageAccounts()
                .createOrUpdateManagementPoliciesWithResponse(
                    resourceGroupName, accountName, managementPolicyName, updateProperties, context)
                .getValue();
        return this;
    }

    StorageAccountManagementPoliciesImpl(
        StorageAccountManagementPoliciesInner innerObject, StorageManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.accountName = Utils.getValueFromIdByName(innerObject.id(), "storageAccounts");
        this.managementPolicyName =
            ManagementPolicyName.fromString(Utils.getValueFromIdByName(innerObject.id(), "managementPolicies"));
    }

    public StorageAccountManagementPolicies refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getStorageAccounts()
                .getManagementPoliciesWithResponse(resourceGroupName, accountName, managementPolicyName, Context.NONE)
                .getValue();
        return this;
    }

    public StorageAccountManagementPolicies refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getStorageAccounts()
                .getManagementPoliciesWithResponse(resourceGroupName, accountName, managementPolicyName, context)
                .getValue();
        return this;
    }

    public StorageAccountManagementPoliciesImpl withPolicy(Object policy) {
        if (isInCreateMode()) {
            this.createProperties.withPolicy(policy);
            return this;
        } else {
            this.updateProperties.withPolicy(policy);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
