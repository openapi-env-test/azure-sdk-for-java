// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.msi.generated.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of FederatedIdentityCredentials. */
public interface FederatedIdentityCredentials {
    /**
     * Lists all the federated identity credentials under the specified user assigned identity.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the identity resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return values returned by the List operation for federated identity credentials as paginated response with
     *     {@link PagedIterable}.
     */
    PagedIterable<FederatedIdentityCredential> list(String resourceGroupName, String resourceName);

    /**
     * Lists all the federated identity credentials under the specified user assigned identity.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the identity resource.
     * @param top Number of records to return.
     * @param skiptoken A skip token is used to continue retrieving items after an operation returns a partial result.
     *     If a previous response contains a nextLink element, the value of the nextLink element will include a
     *     skipToken parameter that specifies a starting point to use for subsequent calls.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return values returned by the List operation for federated identity credentials as paginated response with
     *     {@link PagedIterable}.
     */
    PagedIterable<FederatedIdentityCredential> list(
        String resourceGroupName, String resourceName, Integer top, String skiptoken, Context context);

    /**
     * Gets the federated identity credential.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the identity resource.
     * @param federatedIdentityCredentialResourceName The name of the federated identity credential resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the federated identity credential along with {@link Response}.
     */
    Response<FederatedIdentityCredential> getWithResponse(
        String resourceGroupName, String resourceName, String federatedIdentityCredentialResourceName, Context context);

    /**
     * Gets the federated identity credential.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the identity resource.
     * @param federatedIdentityCredentialResourceName The name of the federated identity credential resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the federated identity credential.
     */
    FederatedIdentityCredential get(
        String resourceGroupName, String resourceName, String federatedIdentityCredentialResourceName);

    /**
     * Deletes the federated identity credential.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the identity resource.
     * @param federatedIdentityCredentialResourceName The name of the federated identity credential resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteWithResponse(
        String resourceGroupName, String resourceName, String federatedIdentityCredentialResourceName, Context context);

    /**
     * Deletes the federated identity credential.
     *
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param resourceName The name of the identity resource.
     * @param federatedIdentityCredentialResourceName The name of the federated identity credential resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String resourceName, String federatedIdentityCredentialResourceName);

    /**
     * Gets the federated identity credential.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the federated identity credential along with {@link Response}.
     */
    FederatedIdentityCredential getById(String id);

    /**
     * Gets the federated identity credential.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the federated identity credential along with {@link Response}.
     */
    Response<FederatedIdentityCredential> getByIdWithResponse(String id, Context context);

    /**
     * Deletes the federated identity credential.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes the federated identity credential.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new FederatedIdentityCredential resource.
     *
     * @param name resource name.
     * @return the first stage of the new FederatedIdentityCredential definition.
     */
    FederatedIdentityCredential.DefinitionStages.Blank define(String name);
}
