// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appplatform.generated.generated;

import com.azure.resourcemanager.appplatform.generated.models.AppResourceProperties;
import com.azure.resourcemanager.appplatform.generated.models.AzureFileVolume;
import com.azure.resourcemanager.appplatform.generated.models.CustomPersistentDiskResource;
import com.azure.resourcemanager.appplatform.generated.models.LoadedCertificate;
import com.azure.resourcemanager.appplatform.generated.models.PersistentDisk;
import com.azure.resourcemanager.appplatform.generated.models.TemporaryDisk;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

/** Samples for Apps CreateOrUpdate. */
public final class AppsCreateOrUpdateSamples {
    /*
     * x-ms-original-file: specification/appplatform/resource-manager/Microsoft.AppPlatform/preview/2022-01-01-preview/examples/Apps_CreateOrUpdate.json
     */
    /**
     * Sample code: Apps_CreateOrUpdate.
     *
     * @param manager Entry point to AppPlatformManager.
     */
    public static void appsCreateOrUpdate(com.azure.resourcemanager.appplatform.generated.AppPlatformManager manager) {
        manager
            .apps()
            .define("myapp")
            .withExistingSpring("myResourceGroup", "myservice")
            .withRegion("eastus")
            .withProperties(
                new AppResourceProperties()
                    .withPublicProperty(true)
                    .withAddonConfigs(
                        mapOf(
                            "ApplicationConfigurationService",
                            mapOf(
                                "resourceId",
                                "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/configurationServices/myacs"),
                            "ServiceRegistry",
                            mapOf(
                                "resourceId",
                                "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/serviceRegistries/myServiceRegistry")))
                    .withFqdn("myapp.mydomain.com")
                    .withHttpsOnly(false)
                    .withTemporaryDisk(new TemporaryDisk().withSizeInGB(2).withMountPath("/mytemporarydisk"))
                    .withPersistentDisk(new PersistentDisk().withSizeInGB(2).withMountPath("/mypersistentdisk"))
                    .withCustomPersistentDisks(
                        Arrays
                            .asList(
                                new CustomPersistentDiskResource()
                                    .withCustomPersistentDiskProperties(
                                        new AzureFileVolume()
                                            .withMountPath("/mypath1/mypath2")
                                            .withMountOptions(
                                                Arrays.asList("uid=0", "gid=0", "dir_mode=0777", "file_mode=0777"))
                                            .withShareName("myFileShare"))
                                    .withStorageId("myASCStorageID")))
                    .withEnableEndToEndTls(false)
                    .withLoadedCertificates(
                        Arrays
                            .asList(
                                new LoadedCertificate()
                                    .withResourceId(
                                        "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/certificates/mycert1")
                                    .withLoadTrustStore(false),
                                new LoadedCertificate()
                                    .withResourceId(
                                        "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/certificates/mycert2")
                                    .withLoadTrustStore(true))))
            .create();
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
