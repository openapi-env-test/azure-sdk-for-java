// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.appplatform.generated.generated;

import com.azure.core.util.Context;
import com.azure.resourcemanager.appplatform.generated.models.AppResource;
import com.azure.resourcemanager.appplatform.generated.models.AppResourceProperties;
import com.azure.resourcemanager.appplatform.generated.models.AzureFileVolume;
import com.azure.resourcemanager.appplatform.generated.models.CustomPersistentDiskResource;
import com.azure.resourcemanager.appplatform.generated.models.ManagedIdentityProperties;
import com.azure.resourcemanager.appplatform.generated.models.ManagedIdentityType;
import com.azure.resourcemanager.appplatform.generated.models.PersistentDisk;
import com.azure.resourcemanager.appplatform.generated.models.TemporaryDisk;
import java.util.Arrays;

/** Samples for Apps Update. */
public final class AppsUpdateSamples {
    /*
     * x-ms-original-file: specification/appplatform/resource-manager/Microsoft.AppPlatform/preview/2022-01-01-preview/examples/Apps_Update.json
     */
    /**
     * Sample code: Apps_Update.
     *
     * @param manager Entry point to AppPlatformManager.
     */
    public static void appsUpdate(com.azure.resourcemanager.appplatform.generated.AppPlatformManager manager) {
        AppResource resource =
            manager.apps().getWithResponse("myResourceGroup", "myservice", "myapp", null, Context.NONE).getValue();
        resource
            .update()
            .withProperties(
                new AppResourceProperties()
                    .withPublicProperty(true)
                    .withFqdn("myapp.mydomain.com")
                    .withHttpsOnly(false)
                    .withTemporaryDisk(new TemporaryDisk().withSizeInGB(2).withMountPath("/mytemporarydisk"))
                    .withPersistentDisk(new PersistentDisk().withSizeInGB(2).withMountPath("/mypersistentdisk"))
                    .withCustomPersistentDisks(
                        Arrays
                            .asList(
                                new CustomPersistentDiskResource()
                                    .withCustomPersistentDiskProperties(
                                        new AzureFileVolume()
                                            .withMountPath("/mypath1/mypath2")
                                            .withMountOptions(Arrays.asList())
                                            .withShareName("myFileShare"))
                                    .withStorageId("myASCStorageID")))
                    .withEnableEndToEndTls(false))
            .withIdentity(new ManagedIdentityProperties().withType(ManagedIdentityType.SYSTEM_ASSIGNED))
            .apply();
    }
}
