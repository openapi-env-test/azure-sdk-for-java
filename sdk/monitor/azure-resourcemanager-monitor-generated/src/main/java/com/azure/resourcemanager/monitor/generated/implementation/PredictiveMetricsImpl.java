// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.monitor.generated.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.monitor.generated.fluent.PredictiveMetricsClient;
import com.azure.resourcemanager.monitor.generated.fluent.models.PredictiveResponseInner;
import com.azure.resourcemanager.monitor.generated.models.PredictiveMetrics;
import com.azure.resourcemanager.monitor.generated.models.PredictiveResponse;
import java.time.Duration;

public final class PredictiveMetricsImpl implements PredictiveMetrics {
    private static final ClientLogger LOGGER = new ClientLogger(PredictiveMetricsImpl.class);

    private final PredictiveMetricsClient innerClient;

    private final com.azure.resourcemanager.monitor.generated.MonitorManager serviceManager;

    public PredictiveMetricsImpl(
        PredictiveMetricsClient innerClient,
        com.azure.resourcemanager.monitor.generated.MonitorManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<PredictiveResponse> getWithResponse(
        String resourceGroupName,
        String autoscaleSettingName,
        String timespan,
        Duration interval,
        String metricNamespace,
        String metricName,
        String aggregation,
        Context context) {
        Response<PredictiveResponseInner> inner =
            this
                .serviceClient()
                .getWithResponse(
                    resourceGroupName,
                    autoscaleSettingName,
                    timespan,
                    interval,
                    metricNamespace,
                    metricName,
                    aggregation,
                    context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new PredictiveResponseImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public PredictiveResponse get(
        String resourceGroupName,
        String autoscaleSettingName,
        String timespan,
        Duration interval,
        String metricNamespace,
        String metricName,
        String aggregation) {
        PredictiveResponseInner inner =
            this
                .serviceClient()
                .get(
                    resourceGroupName,
                    autoscaleSettingName,
                    timespan,
                    interval,
                    metricNamespace,
                    metricName,
                    aggregation);
        if (inner != null) {
            return new PredictiveResponseImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private PredictiveMetricsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.monitor.generated.MonitorManager manager() {
        return this.serviceManager;
    }
}
