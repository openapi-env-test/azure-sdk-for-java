/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.advisor.v2017_04_19.implementation;

import java.util.List;
import com.microsoft.azure.management.advisor.v2017_04_19.DigestConfig;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;

/**
 * The Advisor configuration data structure.
 */
@JsonFlatten
public class ConfigDataInner {
    /**
     * Exclude the resource from Advisor evaluations. Valid values: False
     * (default) or True.
     */
    @JsonProperty(value = "properties.exclude")
    private Boolean exclude;

    /**
     * Minimum percentage threshold for Advisor low CPU utilization evaluation.
     * Valid only for subscriptions. Valid values: 5 (default), 10, 15 or 20.
     */
    @JsonProperty(value = "properties.low_cpu_threshold")
    private String lowCpuThreshold;

    /**
     * Advisor digest configuration. Valid only for subscriptions.
     */
    @JsonProperty(value = "properties.digests")
    private List<DigestConfig> digests;

    /**
     * The resource Id of the configuration resource.
     */
    @JsonProperty(value = "id")
    private String id;

    /**
     * The type of the configuration resource.
     */
    @JsonProperty(value = "type")
    private String type;

    /**
     * The name of the configuration resource.
     */
    @JsonProperty(value = "name")
    private String name;

    /**
     * Get exclude the resource from Advisor evaluations. Valid values: False (default) or True.
     *
     * @return the exclude value
     */
    public Boolean exclude() {
        return this.exclude;
    }

    /**
     * Set exclude the resource from Advisor evaluations. Valid values: False (default) or True.
     *
     * @param exclude the exclude value to set
     * @return the ConfigDataInner object itself.
     */
    public ConfigDataInner withExclude(Boolean exclude) {
        this.exclude = exclude;
        return this;
    }

    /**
     * Get minimum percentage threshold for Advisor low CPU utilization evaluation. Valid only for subscriptions. Valid values: 5 (default), 10, 15 or 20.
     *
     * @return the lowCpuThreshold value
     */
    public String lowCpuThreshold() {
        return this.lowCpuThreshold;
    }

    /**
     * Set minimum percentage threshold for Advisor low CPU utilization evaluation. Valid only for subscriptions. Valid values: 5 (default), 10, 15 or 20.
     *
     * @param lowCpuThreshold the lowCpuThreshold value to set
     * @return the ConfigDataInner object itself.
     */
    public ConfigDataInner withLowCpuThreshold(String lowCpuThreshold) {
        this.lowCpuThreshold = lowCpuThreshold;
        return this;
    }

    /**
     * Get advisor digest configuration. Valid only for subscriptions.
     *
     * @return the digests value
     */
    public List<DigestConfig> digests() {
        return this.digests;
    }

    /**
     * Set advisor digest configuration. Valid only for subscriptions.
     *
     * @param digests the digests value to set
     * @return the ConfigDataInner object itself.
     */
    public ConfigDataInner withDigests(List<DigestConfig> digests) {
        this.digests = digests;
        return this;
    }

    /**
     * Get the resource Id of the configuration resource.
     *
     * @return the id value
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the resource Id of the configuration resource.
     *
     * @param id the id value to set
     * @return the ConfigDataInner object itself.
     */
    public ConfigDataInner withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the type of the configuration resource.
     *
     * @return the type value
     */
    public String type() {
        return this.type;
    }

    /**
     * Set the type of the configuration resource.
     *
     * @param type the type value to set
     * @return the ConfigDataInner object itself.
     */
    public ConfigDataInner withType(String type) {
        this.type = type;
        return this;
    }

    /**
     * Get the name of the configuration resource.
     *
     * @return the name value
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name of the configuration resource.
     *
     * @param name the name value to set
     * @return the ConfigDataInner object itself.
     */
    public ConfigDataInner withName(String name) {
        this.name = name;
        return this;
    }

}
