// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.advisor.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.advisor.models.Category;
import com.azure.resourcemanager.advisor.models.Impact;
import com.azure.resourcemanager.advisor.models.Risk;
import com.azure.resourcemanager.advisor.models.ShortDescription;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Map;
import java.util.UUID;

/** Advisor Recommendation. */
@Fluent
public final class ResourceRecommendationBaseInner {
    /*
     * The fully qualified recommendation ID, for example
     * /subscriptions/subscriptionId/resourceGroups/resourceGroup1/providers/Microsoft.ClassicCompute/virtualMachines/vm1/providers/Microsoft.Advisor/recommendations/recommendationGUID.
     */
    @JsonProperty(value = "id")
    private String id;

    /*
     * The name of recommendation.
     */
    @JsonProperty(value = "name")
    private String name;

    /*
     * The properties of the recommendation.
     */
    @JsonProperty(value = "properties")
    private RecommendationProperties innerProperties;

    /*
     * The list of snoozed and dismissed rules for the recommendation.
     */
    @JsonProperty(value = "suppressionIds")
    private List<UUID> suppressionIds;

    /*
     * The recommendation type: Microsoft.Advisor/recommendations.
     */
    @JsonProperty(value = "type")
    private String type;

    /**
     * Get the id property: The fully qualified recommendation ID, for example
     * /subscriptions/subscriptionId/resourceGroups/resourceGroup1/providers/Microsoft.ClassicCompute/virtualMachines/vm1/providers/Microsoft.Advisor/recommendations/recommendationGUID.
     *
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id property: The fully qualified recommendation ID, for example
     * /subscriptions/subscriptionId/resourceGroups/resourceGroup1/providers/Microsoft.ClassicCompute/virtualMachines/vm1/providers/Microsoft.Advisor/recommendations/recommendationGUID.
     *
     * @param id the id value to set.
     * @return the ResourceRecommendationBaseInner object itself.
     */
    public ResourceRecommendationBaseInner withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the name property: The name of recommendation.
     *
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: The name of recommendation.
     *
     * @param name the name value to set.
     * @return the ResourceRecommendationBaseInner object itself.
     */
    public ResourceRecommendationBaseInner withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the innerProperties property: The properties of the recommendation.
     *
     * @return the innerProperties value.
     */
    private RecommendationProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the suppressionIds property: The list of snoozed and dismissed rules for the recommendation.
     *
     * @return the suppressionIds value.
     */
    public List<UUID> suppressionIds() {
        return this.suppressionIds;
    }

    /**
     * Set the suppressionIds property: The list of snoozed and dismissed rules for the recommendation.
     *
     * @param suppressionIds the suppressionIds value to set.
     * @return the ResourceRecommendationBaseInner object itself.
     */
    public ResourceRecommendationBaseInner withSuppressionIds(List<UUID> suppressionIds) {
        this.suppressionIds = suppressionIds;
        return this;
    }

    /**
     * Get the type property: The recommendation type: Microsoft.Advisor/recommendations.
     *
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Set the type property: The recommendation type: Microsoft.Advisor/recommendations.
     *
     * @param type the type value to set.
     * @return the ResourceRecommendationBaseInner object itself.
     */
    public ResourceRecommendationBaseInner withType(String type) {
        this.type = type;
        return this;
    }

    /**
     * Get the category property: The category of the recommendation.
     *
     * @return the category value.
     */
    public Category category() {
        return this.innerProperties() == null ? null : this.innerProperties().category();
    }

    /**
     * Set the category property: The category of the recommendation.
     *
     * @param category the category value to set.
     * @return the ResourceRecommendationBaseInner object itself.
     */
    public ResourceRecommendationBaseInner withCategory(Category category) {
        if (this.innerProperties() == null) {
            this.innerProperties = new RecommendationProperties();
        }
        this.innerProperties().withCategory(category);
        return this;
    }

    /**
     * Get the impact property: The business impact of the recommendation.
     *
     * @return the impact value.
     */
    public Impact impact() {
        return this.innerProperties() == null ? null : this.innerProperties().impact();
    }

    /**
     * Set the impact property: The business impact of the recommendation.
     *
     * @param impact the impact value to set.
     * @return the ResourceRecommendationBaseInner object itself.
     */
    public ResourceRecommendationBaseInner withImpact(Impact impact) {
        if (this.innerProperties() == null) {
            this.innerProperties = new RecommendationProperties();
        }
        this.innerProperties().withImpact(impact);
        return this;
    }

    /**
     * Get the impactedField property: The resource type identified by Advisor.
     *
     * @return the impactedField value.
     */
    public String impactedField() {
        return this.innerProperties() == null ? null : this.innerProperties().impactedField();
    }

    /**
     * Set the impactedField property: The resource type identified by Advisor.
     *
     * @param impactedField the impactedField value to set.
     * @return the ResourceRecommendationBaseInner object itself.
     */
    public ResourceRecommendationBaseInner withImpactedField(String impactedField) {
        if (this.innerProperties() == null) {
            this.innerProperties = new RecommendationProperties();
        }
        this.innerProperties().withImpactedField(impactedField);
        return this;
    }

    /**
     * Get the impactedValue property: The resource identified by Advisor.
     *
     * @return the impactedValue value.
     */
    public String impactedValue() {
        return this.innerProperties() == null ? null : this.innerProperties().impactedValue();
    }

    /**
     * Set the impactedValue property: The resource identified by Advisor.
     *
     * @param impactedValue the impactedValue value to set.
     * @return the ResourceRecommendationBaseInner object itself.
     */
    public ResourceRecommendationBaseInner withImpactedValue(String impactedValue) {
        if (this.innerProperties() == null) {
            this.innerProperties = new RecommendationProperties();
        }
        this.innerProperties().withImpactedValue(impactedValue);
        return this;
    }

    /**
     * Get the lastUpdated property: The most recent time that Advisor checked the validity of the recommendation.
     *
     * @return the lastUpdated value.
     */
    public OffsetDateTime lastUpdated() {
        return this.innerProperties() == null ? null : this.innerProperties().lastUpdated();
    }

    /**
     * Set the lastUpdated property: The most recent time that Advisor checked the validity of the recommendation.
     *
     * @param lastUpdated the lastUpdated value to set.
     * @return the ResourceRecommendationBaseInner object itself.
     */
    public ResourceRecommendationBaseInner withLastUpdated(OffsetDateTime lastUpdated) {
        if (this.innerProperties() == null) {
            this.innerProperties = new RecommendationProperties();
        }
        this.innerProperties().withLastUpdated(lastUpdated);
        return this;
    }

    /**
     * Get the metadata property: The recommendation metadata.
     *
     * @return the metadata value.
     */
    public Map<String, Object> metadata() {
        return this.innerProperties() == null ? null : this.innerProperties().metadata();
    }

    /**
     * Set the metadata property: The recommendation metadata.
     *
     * @param metadata the metadata value to set.
     * @return the ResourceRecommendationBaseInner object itself.
     */
    public ResourceRecommendationBaseInner withMetadata(Map<String, Object> metadata) {
        if (this.innerProperties() == null) {
            this.innerProperties = new RecommendationProperties();
        }
        this.innerProperties().withMetadata(metadata);
        return this;
    }

    /**
     * Get the recommendationTypeId property: The recommendation-type GUID.
     *
     * @return the recommendationTypeId value.
     */
    public String recommendationTypeId() {
        return this.innerProperties() == null ? null : this.innerProperties().recommendationTypeId();
    }

    /**
     * Set the recommendationTypeId property: The recommendation-type GUID.
     *
     * @param recommendationTypeId the recommendationTypeId value to set.
     * @return the ResourceRecommendationBaseInner object itself.
     */
    public ResourceRecommendationBaseInner withRecommendationTypeId(String recommendationTypeId) {
        if (this.innerProperties() == null) {
            this.innerProperties = new RecommendationProperties();
        }
        this.innerProperties().withRecommendationTypeId(recommendationTypeId);
        return this;
    }

    /**
     * Get the risk property: The potential risk of not implementing the recommendation.
     *
     * @return the risk value.
     */
    public Risk risk() {
        return this.innerProperties() == null ? null : this.innerProperties().risk();
    }

    /**
     * Set the risk property: The potential risk of not implementing the recommendation.
     *
     * @param risk the risk value to set.
     * @return the ResourceRecommendationBaseInner object itself.
     */
    public ResourceRecommendationBaseInner withRisk(Risk risk) {
        if (this.innerProperties() == null) {
            this.innerProperties = new RecommendationProperties();
        }
        this.innerProperties().withRisk(risk);
        return this;
    }

    /**
     * Get the shortDescription property: A summary of the recommendation.
     *
     * @return the shortDescription value.
     */
    public ShortDescription shortDescription() {
        return this.innerProperties() == null ? null : this.innerProperties().shortDescription();
    }

    /**
     * Set the shortDescription property: A summary of the recommendation.
     *
     * @param shortDescription the shortDescription value to set.
     * @return the ResourceRecommendationBaseInner object itself.
     */
    public ResourceRecommendationBaseInner withShortDescription(ShortDescription shortDescription) {
        if (this.innerProperties() == null) {
            this.innerProperties = new RecommendationProperties();
        }
        this.innerProperties().withShortDescription(shortDescription);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
