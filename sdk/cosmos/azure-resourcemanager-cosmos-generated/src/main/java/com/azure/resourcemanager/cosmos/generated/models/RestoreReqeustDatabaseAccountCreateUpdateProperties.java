// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmos.generated.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.List;

/** Properties to restore Azure Cosmos DB database account. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "createMode")
@JsonTypeName("Restore")
@Fluent
public final class RestoreReqeustDatabaseAccountCreateUpdateProperties extends DatabaseAccountCreateUpdateProperties {
    @JsonIgnore
    private final ClientLogger logger = new ClientLogger(RestoreReqeustDatabaseAccountCreateUpdateProperties.class);

    /*
     * Parameters to indicate the information about the restore.
     */
    @JsonProperty(value = "restoreParameters")
    private RestoreParameters restoreParameters;

    /**
     * Get the restoreParameters property: Parameters to indicate the information about the restore.
     *
     * @return the restoreParameters value.
     */
    public RestoreParameters restoreParameters() {
        return this.restoreParameters;
    }

    /**
     * Set the restoreParameters property: Parameters to indicate the information about the restore.
     *
     * @param restoreParameters the restoreParameters value to set.
     * @return the RestoreReqeustDatabaseAccountCreateUpdateProperties object itself.
     */
    public RestoreReqeustDatabaseAccountCreateUpdateProperties withRestoreParameters(
        RestoreParameters restoreParameters) {
        this.restoreParameters = restoreParameters;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public RestoreReqeustDatabaseAccountCreateUpdateProperties withConsistencyPolicy(
        ConsistencyPolicy consistencyPolicy) {
        super.withConsistencyPolicy(consistencyPolicy);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public RestoreReqeustDatabaseAccountCreateUpdateProperties withLocations(List<Location> locations) {
        super.withLocations(locations);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public RestoreReqeustDatabaseAccountCreateUpdateProperties withDatabaseAccountOfferType(
        String databaseAccountOfferType) {
        super.withDatabaseAccountOfferType(databaseAccountOfferType);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public RestoreReqeustDatabaseAccountCreateUpdateProperties withIpRules(List<IpAddressOrRange> ipRules) {
        super.withIpRules(ipRules);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public RestoreReqeustDatabaseAccountCreateUpdateProperties withIsVirtualNetworkFilterEnabled(
        Boolean isVirtualNetworkFilterEnabled) {
        super.withIsVirtualNetworkFilterEnabled(isVirtualNetworkFilterEnabled);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public RestoreReqeustDatabaseAccountCreateUpdateProperties withEnableAutomaticFailover(
        Boolean enableAutomaticFailover) {
        super.withEnableAutomaticFailover(enableAutomaticFailover);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public RestoreReqeustDatabaseAccountCreateUpdateProperties withCapabilities(List<Capability> capabilities) {
        super.withCapabilities(capabilities);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public RestoreReqeustDatabaseAccountCreateUpdateProperties withVirtualNetworkRules(
        List<VirtualNetworkRule> virtualNetworkRules) {
        super.withVirtualNetworkRules(virtualNetworkRules);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public RestoreReqeustDatabaseAccountCreateUpdateProperties withEnableMultipleWriteLocations(
        Boolean enableMultipleWriteLocations) {
        super.withEnableMultipleWriteLocations(enableMultipleWriteLocations);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public RestoreReqeustDatabaseAccountCreateUpdateProperties withEnableCassandraConnector(
        Boolean enableCassandraConnector) {
        super.withEnableCassandraConnector(enableCassandraConnector);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public RestoreReqeustDatabaseAccountCreateUpdateProperties withConnectorOffer(ConnectorOffer connectorOffer) {
        super.withConnectorOffer(connectorOffer);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public RestoreReqeustDatabaseAccountCreateUpdateProperties withDisableKeyBasedMetadataWriteAccess(
        Boolean disableKeyBasedMetadataWriteAccess) {
        super.withDisableKeyBasedMetadataWriteAccess(disableKeyBasedMetadataWriteAccess);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public RestoreReqeustDatabaseAccountCreateUpdateProperties withKeyVaultKeyUri(String keyVaultKeyUri) {
        super.withKeyVaultKeyUri(keyVaultKeyUri);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public RestoreReqeustDatabaseAccountCreateUpdateProperties withEnableFreeTier(Boolean enableFreeTier) {
        super.withEnableFreeTier(enableFreeTier);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public RestoreReqeustDatabaseAccountCreateUpdateProperties withApiProperties(ApiProperties apiProperties) {
        super.withApiProperties(apiProperties);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public RestoreReqeustDatabaseAccountCreateUpdateProperties withEnableAnalyticalStorage(
        Boolean enableAnalyticalStorage) {
        super.withEnableAnalyticalStorage(enableAnalyticalStorage);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public RestoreReqeustDatabaseAccountCreateUpdateProperties withBackupPolicy(BackupPolicy backupPolicy) {
        super.withBackupPolicy(backupPolicy);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public RestoreReqeustDatabaseAccountCreateUpdateProperties withCors(List<CorsPolicy> cors) {
        super.withCors(cors);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public RestoreReqeustDatabaseAccountCreateUpdateProperties withNetworkAclBypass(NetworkAclBypass networkAclBypass) {
        super.withNetworkAclBypass(networkAclBypass);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public RestoreReqeustDatabaseAccountCreateUpdateProperties withNetworkAclBypassResourceIds(
        List<String> networkAclBypassResourceIds) {
        super.withNetworkAclBypassResourceIds(networkAclBypassResourceIds);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (restoreParameters() != null) {
            restoreParameters().validate();
        }
    }
}
