// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmos.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.cosmos.generated.models.ClusterNodeStatusNodesItem;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** The status of all nodes in the cluster (as returned by 'nodetool status'). */
@Fluent
public final class ClusterNodeStatusInner {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ClusterNodeStatusInner.class);

    /*
     * Information about nodes in the cluster (corresponds to what is returned
     * from nodetool info).
     */
    @JsonProperty(value = "nodes")
    private List<ClusterNodeStatusNodesItem> nodes;

    /**
     * Get the nodes property: Information about nodes in the cluster (corresponds to what is returned from nodetool
     * info).
     *
     * @return the nodes value.
     */
    public List<ClusterNodeStatusNodesItem> nodes() {
        return this.nodes;
    }

    /**
     * Set the nodes property: Information about nodes in the cluster (corresponds to what is returned from nodetool
     * info).
     *
     * @param nodes the nodes value to set.
     * @return the ClusterNodeStatusInner object itself.
     */
    public ClusterNodeStatusInner withNodes(List<ClusterNodeStatusNodesItem> nodes) {
        this.nodes = nodes;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (nodes() != null) {
            nodes().forEach(e -> e.validate());
        }
    }
}
