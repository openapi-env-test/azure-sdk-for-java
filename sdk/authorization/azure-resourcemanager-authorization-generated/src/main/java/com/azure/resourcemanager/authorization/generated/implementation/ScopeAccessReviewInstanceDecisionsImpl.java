// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.authorization.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.authorization.generated.fluent.ScopeAccessReviewInstanceDecisionsClient;
import com.azure.resourcemanager.authorization.generated.fluent.models.AccessReviewDecisionInner;
import com.azure.resourcemanager.authorization.generated.models.AccessReviewDecision;
import com.azure.resourcemanager.authorization.generated.models.ScopeAccessReviewInstanceDecisions;

public final class ScopeAccessReviewInstanceDecisionsImpl implements ScopeAccessReviewInstanceDecisions {
    private static final ClientLogger LOGGER = new ClientLogger(ScopeAccessReviewInstanceDecisionsImpl.class);

    private final ScopeAccessReviewInstanceDecisionsClient innerClient;

    private final com.azure.resourcemanager.authorization.generated.AuthorizationManager serviceManager;

    public ScopeAccessReviewInstanceDecisionsImpl(
        ScopeAccessReviewInstanceDecisionsClient innerClient,
        com.azure.resourcemanager.authorization.generated.AuthorizationManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<AccessReviewDecision> list(String scope, String scheduleDefinitionId, String id) {
        PagedIterable<AccessReviewDecisionInner> inner = this.serviceClient().list(scope, scheduleDefinitionId, id);
        return Utils.mapPage(inner, inner1 -> new AccessReviewDecisionImpl(inner1, this.manager()));
    }

    public PagedIterable<AccessReviewDecision> list(
        String scope, String scheduleDefinitionId, String id, String filter, Context context) {
        PagedIterable<AccessReviewDecisionInner> inner =
            this.serviceClient().list(scope, scheduleDefinitionId, id, filter, context);
        return Utils.mapPage(inner, inner1 -> new AccessReviewDecisionImpl(inner1, this.manager()));
    }

    private ScopeAccessReviewInstanceDecisionsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.authorization.generated.AuthorizationManager manager() {
        return this.serviceManager;
    }
}
