// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.authorization.generated.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.authorization.generated.fluent.models.AccessReviewScheduleDefinitionProperties;

/** Resource collection API of ScopeAccessReviewScheduleDefinitions. */
public interface ScopeAccessReviewScheduleDefinitions {
    /**
     * Get access review schedule definitions.
     *
     * @param scope The scope of the resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return access review schedule definitions as paginated response with {@link PagedIterable}.
     */
    PagedIterable<AccessReviewScheduleDefinition> list(String scope);

    /**
     * Get access review schedule definitions.
     *
     * @param scope The scope of the resource.
     * @param filter The filter to apply on the operation. Other than standard filters, one custom filter option is
     *     supported : 'assignedToMeToReview()'. When one specified $filter=assignedToMeToReview(), only items that are
     *     assigned to the calling user to review are returned.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return access review schedule definitions as paginated response with {@link PagedIterable}.
     */
    PagedIterable<AccessReviewScheduleDefinition> list(String scope, String filter, Context context);

    /**
     * Get single access review definition.
     *
     * @param scope The scope of the resource.
     * @param scheduleDefinitionId The id of the access review schedule definition.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return single access review definition.
     */
    AccessReviewScheduleDefinition getById(String scope, String scheduleDefinitionId);

    /**
     * Get single access review definition.
     *
     * @param scope The scope of the resource.
     * @param scheduleDefinitionId The id of the access review schedule definition.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return single access review definition along with {@link Response}.
     */
    Response<AccessReviewScheduleDefinition> getByIdWithResponse(
        String scope, String scheduleDefinitionId, Context context);

    /**
     * Delete access review schedule definition.
     *
     * @param scope The scope of the resource.
     * @param scheduleDefinitionId The id of the access review schedule definition.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String scope, String scheduleDefinitionId);

    /**
     * Delete access review schedule definition.
     *
     * @param scope The scope of the resource.
     * @param scheduleDefinitionId The id of the access review schedule definition.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteByIdWithResponse(String scope, String scheduleDefinitionId, Context context);

    /**
     * Create or Update access review schedule definition.
     *
     * @param scope The scope of the resource.
     * @param scheduleDefinitionId The id of the access review schedule definition.
     * @param properties Access review schedule definition properties.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return access Review Schedule Definition.
     */
    AccessReviewScheduleDefinition createOrUpdateById(
        String scope, String scheduleDefinitionId, AccessReviewScheduleDefinitionProperties properties);

    /**
     * Create or Update access review schedule definition.
     *
     * @param scope The scope of the resource.
     * @param scheduleDefinitionId The id of the access review schedule definition.
     * @param properties Access review schedule definition properties.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return access Review Schedule Definition along with {@link Response}.
     */
    Response<AccessReviewScheduleDefinition> createOrUpdateByIdWithResponse(
        String scope,
        String scheduleDefinitionId,
        AccessReviewScheduleDefinitionProperties properties,
        Context context);

    /**
     * Stop access review definition.
     *
     * @param scope The scope of the resource.
     * @param scheduleDefinitionId The id of the access review schedule definition.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void stop(String scope, String scheduleDefinitionId);

    /**
     * Stop access review definition.
     *
     * @param scope The scope of the resource.
     * @param scheduleDefinitionId The id of the access review schedule definition.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> stopWithResponse(String scope, String scheduleDefinitionId, Context context);
}
