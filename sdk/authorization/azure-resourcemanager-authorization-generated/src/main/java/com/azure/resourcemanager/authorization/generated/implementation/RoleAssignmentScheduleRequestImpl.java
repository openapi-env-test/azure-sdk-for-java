// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.authorization.generated.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.authorization.generated.fluent.models.RoleAssignmentScheduleRequestInner;
import com.azure.resourcemanager.authorization.generated.models.ExpandedProperties;
import com.azure.resourcemanager.authorization.generated.models.PrincipalType;
import com.azure.resourcemanager.authorization.generated.models.RequestType;
import com.azure.resourcemanager.authorization.generated.models.RoleAssignmentScheduleRequest;
import com.azure.resourcemanager.authorization.generated.models.RoleAssignmentScheduleRequestPropertiesScheduleInfo;
import com.azure.resourcemanager.authorization.generated.models.RoleAssignmentScheduleRequestPropertiesTicketInfo;
import com.azure.resourcemanager.authorization.generated.models.Status;
import java.time.OffsetDateTime;

public final class RoleAssignmentScheduleRequestImpl
    implements RoleAssignmentScheduleRequest, RoleAssignmentScheduleRequest.Definition {
    private RoleAssignmentScheduleRequestInner innerObject;

    private final com.azure.resourcemanager.authorization.generated.AuthorizationManager serviceManager;

    RoleAssignmentScheduleRequestImpl(
        RoleAssignmentScheduleRequestInner innerObject,
        com.azure.resourcemanager.authorization.generated.AuthorizationManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String scope() {
        return this.innerModel().scope();
    }

    public String roleDefinitionId() {
        return this.innerModel().roleDefinitionId();
    }

    public String principalId() {
        return this.innerModel().principalId();
    }

    public PrincipalType principalType() {
        return this.innerModel().principalType();
    }

    public RequestType requestType() {
        return this.innerModel().requestType();
    }

    public Status status() {
        return this.innerModel().status();
    }

    public String approvalId() {
        return this.innerModel().approvalId();
    }

    public String targetRoleAssignmentScheduleId() {
        return this.innerModel().targetRoleAssignmentScheduleId();
    }

    public String targetRoleAssignmentScheduleInstanceId() {
        return this.innerModel().targetRoleAssignmentScheduleInstanceId();
    }

    public RoleAssignmentScheduleRequestPropertiesScheduleInfo scheduleInfo() {
        return this.innerModel().scheduleInfo();
    }

    public String linkedRoleEligibilityScheduleId() {
        return this.innerModel().linkedRoleEligibilityScheduleId();
    }

    public String justification() {
        return this.innerModel().justification();
    }

    public RoleAssignmentScheduleRequestPropertiesTicketInfo ticketInfo() {
        return this.innerModel().ticketInfo();
    }

    public String condition() {
        return this.innerModel().condition();
    }

    public String conditionVersion() {
        return this.innerModel().conditionVersion();
    }

    public OffsetDateTime createdOn() {
        return this.innerModel().createdOn();
    }

    public String requestorId() {
        return this.innerModel().requestorId();
    }

    public ExpandedProperties expandedProperties() {
        return this.innerModel().expandedProperties();
    }

    public RoleAssignmentScheduleRequestInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.authorization.generated.AuthorizationManager manager() {
        return this.serviceManager;
    }

    private String scope;

    private String roleAssignmentScheduleRequestName;

    public RoleAssignmentScheduleRequestImpl withExistingScope(String scope) {
        this.scope = scope;
        return this;
    }

    public RoleAssignmentScheduleRequest create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getRoleAssignmentScheduleRequests()
                .createWithResponse(scope, roleAssignmentScheduleRequestName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public RoleAssignmentScheduleRequest create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getRoleAssignmentScheduleRequests()
                .createWithResponse(scope, roleAssignmentScheduleRequestName, this.innerModel(), context)
                .getValue();
        return this;
    }

    RoleAssignmentScheduleRequestImpl(
        String name, com.azure.resourcemanager.authorization.generated.AuthorizationManager serviceManager) {
        this.innerObject = new RoleAssignmentScheduleRequestInner();
        this.serviceManager = serviceManager;
        this.roleAssignmentScheduleRequestName = name;
    }

    public RoleAssignmentScheduleRequest refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getRoleAssignmentScheduleRequests()
                .getWithResponse(scope, roleAssignmentScheduleRequestName, Context.NONE)
                .getValue();
        return this;
    }

    public RoleAssignmentScheduleRequest refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getRoleAssignmentScheduleRequests()
                .getWithResponse(scope, roleAssignmentScheduleRequestName, context)
                .getValue();
        return this;
    }

    public void cancel() {
        serviceManager.roleAssignmentScheduleRequests().cancel(scope, roleAssignmentScheduleRequestName);
    }

    public Response<Void> cancelWithResponse(Context context) {
        return serviceManager
            .roleAssignmentScheduleRequests()
            .cancelWithResponse(scope, roleAssignmentScheduleRequestName, context);
    }

    public RoleAssignmentScheduleRequest validate(RoleAssignmentScheduleRequestInner parameters) {
        return serviceManager
            .roleAssignmentScheduleRequests()
            .validate(scope, roleAssignmentScheduleRequestName, parameters);
    }

    public Response<RoleAssignmentScheduleRequest> validateWithResponse(
        RoleAssignmentScheduleRequestInner parameters, Context context) {
        return serviceManager
            .roleAssignmentScheduleRequests()
            .validateWithResponse(scope, roleAssignmentScheduleRequestName, parameters, context);
    }

    public RoleAssignmentScheduleRequestImpl withRoleDefinitionId(String roleDefinitionId) {
        this.innerModel().withRoleDefinitionId(roleDefinitionId);
        return this;
    }

    public RoleAssignmentScheduleRequestImpl withPrincipalId(String principalId) {
        this.innerModel().withPrincipalId(principalId);
        return this;
    }

    public RoleAssignmentScheduleRequestImpl withRequestType(RequestType requestType) {
        this.innerModel().withRequestType(requestType);
        return this;
    }

    public RoleAssignmentScheduleRequestImpl withTargetRoleAssignmentScheduleId(String targetRoleAssignmentScheduleId) {
        this.innerModel().withTargetRoleAssignmentScheduleId(targetRoleAssignmentScheduleId);
        return this;
    }

    public RoleAssignmentScheduleRequestImpl withTargetRoleAssignmentScheduleInstanceId(
        String targetRoleAssignmentScheduleInstanceId) {
        this.innerModel().withTargetRoleAssignmentScheduleInstanceId(targetRoleAssignmentScheduleInstanceId);
        return this;
    }

    public RoleAssignmentScheduleRequestImpl withScheduleInfo(
        RoleAssignmentScheduleRequestPropertiesScheduleInfo scheduleInfo) {
        this.innerModel().withScheduleInfo(scheduleInfo);
        return this;
    }

    public RoleAssignmentScheduleRequestImpl withLinkedRoleEligibilityScheduleId(
        String linkedRoleEligibilityScheduleId) {
        this.innerModel().withLinkedRoleEligibilityScheduleId(linkedRoleEligibilityScheduleId);
        return this;
    }

    public RoleAssignmentScheduleRequestImpl withJustification(String justification) {
        this.innerModel().withJustification(justification);
        return this;
    }

    public RoleAssignmentScheduleRequestImpl withTicketInfo(
        RoleAssignmentScheduleRequestPropertiesTicketInfo ticketInfo) {
        this.innerModel().withTicketInfo(ticketInfo);
        return this;
    }

    public RoleAssignmentScheduleRequestImpl withCondition(String condition) {
        this.innerModel().withCondition(condition);
        return this;
    }

    public RoleAssignmentScheduleRequestImpl withConditionVersion(String conditionVersion) {
        this.innerModel().withConditionVersion(conditionVersion);
        return this;
    }
}
