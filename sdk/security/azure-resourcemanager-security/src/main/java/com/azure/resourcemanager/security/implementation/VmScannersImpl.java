// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.security.fluent.VmScannersClient;
import com.azure.resourcemanager.security.fluent.models.ScannerConfigurationInner;
import com.azure.resourcemanager.security.fluent.models.ScannerConfigurationListInner;
import com.azure.resourcemanager.security.models.ScannerConfiguration;
import com.azure.resourcemanager.security.models.ScannerConfigurationList;
import com.azure.resourcemanager.security.models.VmScanners;

public final class VmScannersImpl implements VmScanners {
    private static final ClientLogger LOGGER = new ClientLogger(VmScannersImpl.class);

    private final VmScannersClient innerClient;

    private final com.azure.resourcemanager.security.SecurityManager serviceManager;

    public VmScannersImpl(
        VmScannersClient innerClient, com.azure.resourcemanager.security.SecurityManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public ScannerConfiguration get(String vmScannerName) {
        ScannerConfigurationInner inner = this.serviceClient().get(vmScannerName);
        if (inner != null) {
            return new ScannerConfigurationImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<ScannerConfiguration> getWithResponse(String vmScannerName, Context context) {
        Response<ScannerConfigurationInner> inner = this.serviceClient().getWithResponse(vmScannerName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new ScannerConfigurationImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public ScannerConfiguration createOrUpdate(String vmScannerName) {
        ScannerConfigurationInner inner = this.serviceClient().createOrUpdate(vmScannerName);
        if (inner != null) {
            return new ScannerConfigurationImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<ScannerConfiguration> createOrUpdateWithResponse(String vmScannerName, Context context) {
        Response<ScannerConfigurationInner> inner =
            this.serviceClient().createOrUpdateWithResponse(vmScannerName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new ScannerConfigurationImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public void delete(String vmScannerName) {
        this.serviceClient().delete(vmScannerName);
    }

    public Response<Void> deleteWithResponse(String vmScannerName, Context context) {
        return this.serviceClient().deleteWithResponse(vmScannerName, context);
    }

    public ScannerConfigurationList listBySubscription() {
        ScannerConfigurationListInner inner = this.serviceClient().listBySubscription();
        if (inner != null) {
            return new ScannerConfigurationListImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<ScannerConfigurationList> listBySubscriptionWithResponse(Context context) {
        Response<ScannerConfigurationListInner> inner = this.serviceClient().listBySubscriptionWithResponse(context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new ScannerConfigurationListImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    private VmScannersClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.security.SecurityManager manager() {
        return this.serviceManager;
    }
}
