// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.security.fluent.models.ScannerConfigurationInner;
import com.azure.resourcemanager.security.fluent.models.ScannerConfigurationListInner;

/** An instance of this class provides access to all the operations defined in VmScannersClient. */
public interface VmScannersClient {
    /**
     * Gets the subscription's VM scanner configuration.
     *
     * @param vmScannerName Name of the VM scanner.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the subscription's VM scanner configuration.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ScannerConfigurationInner get(String vmScannerName);

    /**
     * Gets the subscription's VM scanner configuration.
     *
     * @param vmScannerName Name of the VM scanner.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the subscription's VM scanner configuration along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ScannerConfigurationInner> getWithResponse(String vmScannerName, Context context);

    /**
     * Create a VM scanner.
     *
     * @param vmScannerName Name of the VM scanner.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents the configuration of the VM scanner.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ScannerConfigurationInner createOrUpdate(String vmScannerName);

    /**
     * Create a VM scanner.
     *
     * @param vmScannerName Name of the VM scanner.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents the configuration of the VM scanner along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ScannerConfigurationInner> createOrUpdateWithResponse(String vmScannerName, Context context);

    /**
     * Delete a VM scanner configuration.
     *
     * @param vmScannerName Name of the VM scanner.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String vmScannerName);

    /**
     * Delete a VM scanner configuration.
     *
     * @param vmScannerName Name of the VM scanner.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(String vmScannerName, Context context);

    /**
     * Gets the subscription's VM scanner configurations.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the subscription's VM scanner configurations.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ScannerConfigurationListInner listBySubscription();

    /**
     * Gets the subscription's VM scanner configurations.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the subscription's VM scanner configurations along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ScannerConfigurationListInner> listBySubscriptionWithResponse(Context context);
}
