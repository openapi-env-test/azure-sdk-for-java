// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.models;

import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of VmScanners. */
public interface VmScanners {
    /**
     * Gets the subscription's VM scanner configuration.
     *
     * @param vmScannerName Name of the VM scanner.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the subscription's VM scanner configuration.
     */
    ScannerConfiguration get(String vmScannerName);

    /**
     * Gets the subscription's VM scanner configuration.
     *
     * @param vmScannerName Name of the VM scanner.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the subscription's VM scanner configuration along with {@link Response}.
     */
    Response<ScannerConfiguration> getWithResponse(String vmScannerName, Context context);

    /**
     * Create a VM scanner.
     *
     * @param vmScannerName Name of the VM scanner.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents the configuration of the VM scanner.
     */
    ScannerConfiguration createOrUpdate(String vmScannerName);

    /**
     * Create a VM scanner.
     *
     * @param vmScannerName Name of the VM scanner.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return represents the configuration of the VM scanner along with {@link Response}.
     */
    Response<ScannerConfiguration> createOrUpdateWithResponse(String vmScannerName, Context context);

    /**
     * Delete a VM scanner configuration.
     *
     * @param vmScannerName Name of the VM scanner.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String vmScannerName);

    /**
     * Delete a VM scanner configuration.
     *
     * @param vmScannerName Name of the VM scanner.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteWithResponse(String vmScannerName, Context context);

    /**
     * Gets the subscription's VM scanner configurations.
     *
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the subscription's VM scanner configurations.
     */
    ScannerConfigurationList listBySubscription();

    /**
     * Gets the subscription's VM scanner configurations.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the subscription's VM scanner configurations along with {@link Response}.
     */
    Response<ScannerConfigurationList> listBySubscriptionWithResponse(Context context);
}
