// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.security.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.security.models.ScanningMode;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** Represents the configuration of the VM scanner. */
@Fluent
public final class ScannerConfigurationInner extends ProxyResource {
    /*
     * Properties of the VM Scanner resource
     */
    @JsonProperty(value = "properties", required = true)
    private ScannerProperties innerProperties = new ScannerProperties();

    /**
     * Get the innerProperties property: Properties of the VM Scanner resource.
     *
     * @return the innerProperties value.
     */
    private ScannerProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the scanningMode property: The scanning mode.
     *
     * @return the scanningMode value.
     */
    public ScanningMode scanningMode() {
        return this.innerProperties() == null ? null : this.innerProperties().scanningMode();
    }

    /**
     * Set the scanningMode property: The scanning mode.
     *
     * @param scanningMode the scanningMode value to set.
     * @return the ScannerConfigurationInner object itself.
     */
    public ScannerConfigurationInner withScanningMode(ScanningMode scanningMode) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ScannerProperties();
        }
        this.innerProperties().withScanningMode(scanningMode);
        return this;
    }

    /**
     * Get the exclusionTags property: Dictionary of string key-value pairs representing the tags used to exclude
     * resources from being scanned. Resources tagged with one of these values will not be scanned. The values in the
     * dictionary are case-sensitive.
     *
     * @return the exclusionTags value.
     */
    public Map<String, String> exclusionTags() {
        return this.innerProperties() == null ? null : this.innerProperties().exclusionTags();
    }

    /**
     * Set the exclusionTags property: Dictionary of string key-value pairs representing the tags used to exclude
     * resources from being scanned. Resources tagged with one of these values will not be scanned. The values in the
     * dictionary are case-sensitive.
     *
     * @param exclusionTags the exclusionTags value to set.
     * @return the ScannerConfigurationInner object itself.
     */
    public ScannerConfigurationInner withExclusionTags(Map<String, String> exclusionTags) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ScannerProperties();
        }
        this.innerProperties().withExclusionTags(exclusionTags);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property innerProperties in model ScannerConfigurationInner"));
        } else {
            innerProperties().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(ScannerConfigurationInner.class);
}
